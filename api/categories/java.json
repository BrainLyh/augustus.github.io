{"name":"java","slug":"java","count":1,"postlist":[{"title":"java","slug":"java-tests","date":"2019-11-26T01:26:49.000Z","updated":"2019-12-01T12:59:07.431Z","comments":true,"path":"api/articles/java-tests.json","excerpt":"","keywords":null,"cover":null,"content":"<h1 id=\"java-tests\"><a href=\"#java-tests\" class=\"headerlink\" title=\"java-tests\"></a>java-tests</h1><p>11/26/2019 9:26:49 AM </p>\n<h2 id=\"charper-two\"><a href=\"#charper-two\" class=\"headerlink\" title=\"charper two\"></a>charper two</h2><ul>\n<li>输入一个整数，输出阶乘最右边的非0数字</li>\n</ul>\n<pre><code>package the_second_chapter;\n\nimport java.math.BigInteger;\nimport java.util.Scanner;\n\npublic class first_one {\n\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    //int sum = 0,temp = 1;\n    BigInteger num = new BigInteger(&quot;1&quot;);\n    System.out.println(&quot;你想算多少的阶乘?&quot;);\n    Scanner scn = null;//防止 Scanner is never closed 的错误\n    try {\n        scn = new Scanner(System.in);\n        int num1 = scn.nextInt();\n        for(int number=1;number&lt;=num1;number++)\n        {\n            num = num.multiply(new BigInteger(number + &quot;&quot;));\n        }\n        System.out.println(num);\n    }\n    finally {\n        if(scn!=null)\n            scn.close();\n    }\n    char[] c = num.toString().toCharArray();              \n    System.out.println(num.toString().length());        //输出长度\n    for(int b=num.toString().length()-1;b&gt;=0;b--) {        //判断非0\n        if(c[b]!=&apos;0&apos;) {\n            System.out.println(c[b]);\n            return;\n        }\n    }\n}\n\n}</code></pre><blockquote>\n<p>String.ToCharArray Method</p>\n<p>Definition</p>\n<p>Namespace: System</p>\n<p>Assemblies: System.Runtime.dll, mscorlib.dll, netstandard.dll</p>\n<p>Copies the characters in this instance(实例) to a Unicode character array.</p>\n<p><a href=\"https://docs.microsoft.com/en-us/dotnet/api/system.string.tochararray?view=netframework-4.8\" target=\"_blank\" rel=\"noopener\">https://docs.microsoft.com/en-us/dotnet/api/system.string.tochararray?view=netframework-4.8</a></p>\n</blockquote>\n<ul>\n<li>输入一组数字保存在数组中，遇到0表示输入结束，将输入的数组逆序输出</li>\n</ul>\n<pre><code>package the_second_chapter;\nimport java.util.Scanner;\n\npublic class test_9 {\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Scanner input=new Scanner(System.in);\n    int[] num=new int[20];\n    int i;\n    for(i=0;;i++)\n    {\n        int a=input.nextInt();\n        if(a==0)\n            break;\n        num[i]=a;\n    }\n    for(i=i-1;i&gt;=0;i--)\n    {\n        System.out.print(num[i]);\n        if(i!=0)\n            System.out.print(&quot; &quot;);\n    }\n    System.out.println();\n}\n}</code></pre><ul>\n<li>超级递增序列</li>\n</ul>\n<pre><code>package the_second_chapter;\nimport java.util.Scanner;\n\npublic class test_10 {\n\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Scanner scn = new Scanner(System.in);\n    int[] num = new int[20];\n    int i,flag=0;\n    int sum=0;\n    for(i=0;;i++) {\n        int a = scn.nextInt();\n        if(a==-999)\n            break;\n        num[i] = a;\n    }\n    for(int j=0;j&lt;num.length;j++) {\n        sum += num[j];\n        if(sum&lt;num[j+1])\n            flag=1;\n        else {\n            flag=2;\n            break;\n        }\n    if(flag==1) {\n        System.out.print(&quot;超级递增！&quot;);\n\n    }\n    else {\n        System.out.print(&quot;不是超级递增&quot;);\n    }\n    }\n}\n\n}</code></pre><ul>\n<li>统计字符串中单词个数</li>\n</ul>\n<pre><code>package the_second_chapter;\nimport java.util.Scanner;\npublic class test_11 {\n\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Scanner scanner = new Scanner(System.in);\n    String s = scanner.nextLine();\n    String []arr = s.split(&quot; &quot;);\n    int count = 0;\n    for (int i = 0;i&lt;arr.length;i++){\n        for (int j = i+1;j&lt;arr.length;j++){\n            if (arr[i].equals( arr[j])){\n                arr[j] = &quot; &quot;;\n            }\n        }\n    }\n    for (int i = 0;i&lt;arr.length;i++){\n        System.out.println(arr[i]);\n    }\n    for (int i = 0;i&lt;arr.length;i++){\n        if (arr[i] != &quot; &quot;){\n            count++;\n        }\n    }\n    System.out.println(count);\n}\n\n}</code></pre><h2 id=\"third-chapter\"><a href=\"#third-chapter\" class=\"headerlink\" title=\"third_chapter\"></a>third_chapter</h2><ul>\n<li>修改文件名称</li>\n</ul>\n<pre><code>package third_chapter;\nimport java.io.*;\nimport java.util.*;\npublic class test_4 {\n\npublic static void main(String[] args) {\n    // TODO Auto-generated method stub\n    Scanner scn = new Scanner(System.in);\n    System.out.print(&quot;请输入旧文件路径及名称(D:\\\\test.txt)：&quot;);\n    String old_path = scn.next();\n    File old_file = new File(old_path);\n    System.out.print(&quot;请输入新文件名称(D:\\\\test1.txt)：&quot;);\n    String new_path = scn.next();\n    File new_file = new File(new_path);\n    if(old_file.exists() &amp;&amp; !new_file.exists()) {\n        old_file.renameTo(new_file);\n        System.out.print(&quot;reanme successful!&quot;);\n    }\n    else {\n        System.out.print(&quot;rename failue!&quot;);\n    }\n}\n\n}</code></pre><ul>\n<li><p>实现copy命令</p>\n<pre><code>package third_chapter;\nimport java.io.*;\nimport java.util.*;\npublic class test_6 {\n\npublic static void main(String[] args) throws FileNotFoundException {\n    // TODO Auto-generated method stub\n    try {\n    Scanner scn = new Scanner(System.in);\n    //输入文件名\n    System.out.print(&quot;请输入要复制的文件路径及名称：&quot;);\n    String old_file = scn.next();\n    FileReader old_one = new FileReader(old_file);   //创建文件对象\n    BufferedReader old_one_cont = new BufferedReader(old_one);//读文件\n    System.out.print(&quot;请输入要复制到的文件路径及名称：&quot;);\n    String new_file = scn.next();\n    FileWriter new_one = new FileWriter(new_file);   //创建文件对象\n    BufferedWriter new_one_cont = new BufferedWriter(new_one);//读文件\n    String content = null;\n    while((content = old_one_cont.readLine())!=null) {\n        new_one_cont.write(content);\n        new_one_cont.newLine();\n    }\n    //关闭文件\n    new_one_cont.flush();\n    new_one_cont.close();\n    new_one.close();\n\n    }\n    catch(IOException e) {\n        System.out.print(e.toString());\n    }\n}\n\n}</code></pre></li>\n</ul>\n<ul>\n<li><p>实现删除注释功能</p>\n<pre><code>package third_chapter;\nimport java.io.*;\nimport java.util.*;\n/**\n * @author brian\n *\n * @date: 2019年12月1日 上午10:57:42\n *\n * @description: TODO\n *\n * @version: V1.0\n *\n */\npublic class test_8 {\n\n    /**\n     * @param args\n     * @throws FileNotFoundException \n     */\n    public static void main(String[] args) throws FileNotFoundException {\n        // TODO Auto-generated method stub\n        try {\n        Scanner scn = new Scanner(System.in);\n        System.out.println(&quot;请输入要删除注释的文件路径及文件名：&quot;);\n        String old_file = scn.next();\n        FileReader old_one = new FileReader(old_file);\n        BufferedReader old_cont = new BufferedReader(old_one);\n        System.out.print(&quot;请输入要复制到的文件路径及名称：&quot;);\n        String new_file = scn.next();\n        FileWriter new_one = new FileWriter(new_file);   //创建文件对象\n        BufferedWriter new_one_cont = new BufferedWriter(new_one);//读文件\n        String content = null;\n        while((content = old_cont.readLine())!=null) {\n            /**判断是否存在注释\n             * trim(): 将调用该方法的String的前后空格删除，返回新字符串\n             * indexOf(): 查找参数字符串在调用改方法的String中首次出现的位置，参数字符串不存在返回-1\n             * &amp; ：与运算，两边都是true时结果为true\n             * | ：或运算，两边任意一个为true，结果为true，都不是true，结果为false\n             */\n            if((content.trim().indexOf(&quot;//&quot;)==-1)&amp;(content.trim().indexOf(&quot;/*&quot;)==-1)&amp;(content.trim().indexOf(&quot;*/&quot;)==-1)) {\n                System.out.println(content);\n                new_one_cont.write(content);\n                new_one_cont.newLine();\n            }\n                //System.out.print(content+&quot;\\n&quot;);\n        }\n        //关闭文件\n        new_one_cont.flush();\n        new_one_cont.close();\n        new_one.close();\n    } catch (IOException e) {\n            // TODO Auto-generated catch block\n        e.printStackTrace();\n    }\n}\n\n}</code></pre></li>\n</ul>\n<h2 id=\"six-chapter\"><a href=\"#six-chapter\" class=\"headerlink\" title=\"six_chapter\"></a>six_chapter</h2><ul>\n<li><p>多线程打印线程号</p>\n<pre><code>package sixth_chapter;\n\n/**\n * @author brian\n *\n * @date: 2019年12月1日 下午7:50:35\n *\n * @description: TODO\n *\n * @version: V1.0\n *\n */\npublic class SecondThread implements Runnable{\n\n    /**\n     * @param args\n     */\n    public void run() {\n        for(int i=0;i&lt;5;i++) {\n\n            System.out.println(Thread.currentThread().getName()+&quot;: &quot;+(char)(i+&apos;A&apos;));\n            try {\n                Thread.sleep(700);\n            }\n            catch(InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n\n    }\n\n}</code></pre></li>\n</ul>\n<pre><code>package sixth_chapter;\n//import FitstThread;\n//import SecondThread;\n\n/**\n * @author brian\n *\n * @date: 2019年12月1日 下午7:19:12\n *\n * @description: TODO\n *\n * @version: V1.0\n *\n */\n\n\npublic class test_4 {\n\n    /**\n     * @param args\n     */\n    public static void main(String[] args) {\n        // TODO Auto-generated method stub\n        Runnable target = new SecondThread();\n        Thread t1 = new Thread(target);\n        Thread t2 = new Thread(target);\n        for(int i=0;i&lt;10;i++) {\n            System.out.println(Thread.currentThread().getName()+&quot;: &quot;+i);\n            try {\n                Thread.sleep(700);\n            }\n            catch(InterruptedException e) {\n                e.printStackTrace();\n            }\n            if(i==1) t1.start();\n            if(i==2) t2.start();\n        }\n    }\n\n}</code></pre><ul>\n<li>线程互斥</li>\n</ul>\n","text":"java-tests11/26/2019 9:26:49 AM charper two输入一个整数，输出阶乘最右边的非0数字package the_second_chapter;import java.math.BigInteger;import java.util.Scanne","link":"","raw":null,"photos":[],"categories":[{"name":"java","slug":"java","count":1,"path":"api/categories/java.json"}],"tags":[{"name":"java's things","slug":"java-s-things","count":1,"path":"api/tags/java-s-things.json"}]}]}